{"version":3,"sources":["spectrum.js","speakingurl.js","hooks-manager.js","customizer-base.js","customizer-utils.js","customizer-support.js","customizer-shortcodes-popup.js","customizer-custom-popup.js","customizer-custom-style-manager.js","customizer-section-settings-controls.js","customizer-current-page-settings.js","customizer-section-settings-panel.js","customizer-features-popup.js","customizer-content.js","customizer-content-tpls.js","customizer-content-handles.js","customizer-content-sections-overlays.js","customizer-menu.js","customizer-page-settings-panel.js"],"names":["factory","define","amd","exports","module","require","jQuery","$","undefined","defaultOpts","beforeShow","noop","move","change","show","hide","color","flat","showInput","allowEmpty","showButtons","clickoutFiresChange","showInitial","showPalette","showPaletteOnly","hideAfterPaletteSelect","togglePaletteOnly","showSelectionPalette","localStorageKey","appendTo","maxSelectionSize","cancelText","chooseText","togglePaletteMoreText","togglePaletteLessText","clearText","noColorSelectedText","preferredFormat","className","containerClassName","replacerClassName","showAlpha","theme","palette","selectionPalette","disabled","offset","spectrums","IE","exec","window","navigator","userAgent","rgbaSupport","contains","str","substr","indexOf","style","document","createElement","cssText","backgroundColor","replaceInput","join","markup","gradientFix","i","paletteTemplate","p","opts","html","length","current","tiny","tinycolor","c","toHsl","l","equals","formattedString","toString","swatchStyle","toRgbString","toFilter","push","append","attr","spectrum","element","o","func","wait","debounce","timeout","callbackContext","extend","callbacks","bind","resize","reflow","context","this","args","arguments","clearTimeout","setTimeout","apply","visible","isDragging","dragWidth","dragHeight","dragHelperHeight","slideHeight","alphaWidth","alphaSlideHelperWidth","slideHelperHeight","currentHue","currentSaturation","currentValue","currentAlpha","paletteArray","paletteLookup","slice","draggingClass","shiftMovementDirection","doc","ownerDocument","boundElement","body","container","addClass","pickerContainer","find","dragger","dragHelper","slider","slideHelper","alphaSliderInner","alphaSlider","alphaSlideHelper","textInput","paletteContainer","initialColorContainer","cancelButton","clearButton","chooseButton","toggleButton","isInput","is","isInputTypeColor","inputTypeColorSupport","shouldReplace","replacer","offsetElement","previewElement","initialColor","val","colorOnShow","currentPreferredFormat","isEmpty","applyOptions","text","isArray","j","rgb","toggleClass","updateSelectionPaletteFromStorage","localStorage","oldPalette","split","each","addColorToSelectionPalette","e","inArray","shift","drawPalette","currentColor","get","map","unique","reverse","getUniqueSelectionPalette","drawInitial","initial","dragStart","trigger","dragStop","removeClass","setFromTextInput","value","isValid","set","updateOriginalInput","toggle","event","Event","isDefaultPrevented","hideAll","on","onkeydown","clickout","updateUI","keyCode","button","revert","off","ignoreFormatChange","newColor","newHsv","toHsv","h","s","v","a","getFormat","fromRatio","Math","round","format","updateHelperLocations","flatColor","css","toHexString","realColor","displayColor","realHex","realRgb","alpha","toRgb","realAlpha","gradient","gradientType","dragX","dragY","max","min","top","left","alphaX","slideY","fireCallback","hasChanged","picker","input","dpWidth","dpHeight","inputHeight","docElem","viewWidth","viewHeight","offsetLeft","offsetTop","width","height","outerWidth","outerHeight","documentElement","clientWidth","scrollLeft","clientHeight","scrollTop","abs","bottom","right","disable","after","parent","paletteElementClick","data","ignore","target","closest","stopPropagation","preventDefault","click","keydown","hasClass","draggable","shiftKey","parseFloat","oldDragX","oldDragY","furtherFromX","setValue","paletteEvent","initialize","spect","option","optionName","optionValue","enable","coord","destroy","remove","id","obj","Array","prototype","call","concat","onmove","onstart","onstop","dragging","maxHeight","maxWidth","hasTouch","duringDragEvents","prevent","returnValue","documentMode","stop","t0","originalEvent","touches","pageX","pageY","which","fn","dataID","extra","method","Error","removeData","load","loadOpts","defaults","_cachedResult","colorInput","type","localization","palettes","processNativeColorInputs","colorInputs","trimLeft","trimRight","tinyCounter","math","mathRound","mathMin","mathMax","mathRandom","random","r","g","b","ok","replace","toLowerCase","match","named","names","matchers","rgba","hsl","hsla","hsv","hsva","hex8","parseIntFromHex","hex6","hex3","stringInputToObject","hasOwnProperty","bound01","String","convertToPercentage","floor","f","q","t","mod","hsvToRgb","hue2rgb","hslToRgb","boundAlpha","inputToRGB","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","_ok","_tc_id","rgbToHsl","d","rgbToHsv","rgbToHex","allow3Char","hex","pad2","charAt","rgbaToHex","desaturate","amount","clamp01","saturate","greyscale","lighten","brighten","darken","spin","hue","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","ret","monochromatic","modification","isDark","getBrightness","isLight","getOriginalInput","getAlpha","setAlpha","toHsvString","toHslString","toHex","toHex8","toHex8String","toPercentageRgb","toPercentageRgbString","toName","hexNames","secondColor","hex8String","secondHex8String","formatSet","hasAlpha","_applyModification","_applyCombination","color1","color2","mix","w1","rgb1","rgb2","w","w2","readability","c1","c2","brightnessA","brightnessB","colorDiff","brightness","isReadable","mostReadable","baseColor","colorList","bestColor","bestScore","bestIsReadable","readable","score","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flipped","flip","isNaN","n","processPercent","parseInt","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","root","charMap","À","Á","Â","Ã","Ä","Å","Æ","Ç","È","É","Ê","Ë","Ì","Í","Î","Ï","Ð","Ñ","Ò","Ó","Ô","Õ","Ö","Ő","Ø","Ù","Ú","Û","Ü","Ű","Ý","Þ","ß","à","á","â","ã","ä","å","æ","ç","è","é","ê","ë","ì","í","î","ï","ð","ñ","ò","ó","ô","õ","ö","ő","ø","ù","ú","û","ü","ű","ý","þ","ÿ","ẞ","ا","أ","إ","آ","ؤ","ئ","ء","ب","ت","ث","ج","ح","خ","د","ذ","ر","ز","س","ش","ص","ض","ط","ظ","ع","غ","ف","ق","ك","ل","م","ن","ه","و","ي","ى","ة","ﻻ","ﻷ","ﻹ","ﻵ","گ","چ","پ","ژ","ک","ی","َ","ً","ِ","ٍ","ُ","ٌ","ْ","٠","١","٢","٣","٤","٥","٦","٧","٨","٩","۰","۱","۲","۳","۴","۵","۶","۷","۸","۹","က","ခ","ဂ","ဃ","င","စ","ဆ","ဇ","စျ","ည","ဋ","ဌ","ဍ","ဎ","ဏ","တ","ထ","ဒ","ဓ","န","ပ","ဖ","ဗ","ဘ","မ","ယ","ရ","လ","ဝ","သ","ဟ","ဠ","အ","ြ","ျ","ွ","ြွ","ျွ","ှ","ဧ","၏","ဣ","ဤ","ဉ","ဦ","ဩ","သြော","ဪ","၀","၁","၂","၃","၄","၅","၆","၇","၈","၉","္","့","း","č","ď","ě","ň","ř","š","ť","ů","ž","Č","Ď","Ě","Ň","Ř","Š","Ť","Ů","Ž","ހ","ށ","ނ","ރ","ބ","ޅ","ކ","އ","ވ","މ","ފ","ދ","ތ","ލ","ގ","ޏ","ސ","ޑ","ޒ","ޓ","ޔ","ޕ","ޖ","ޗ","ޘ","ޙ","ޚ","ޛ","ޜ","ޝ","ޞ","ޟ","ޠ","ޡ","ޢ","ޣ","ޤ","ޥ","ަ","ާ","ި","ީ","ު","ޫ","ެ","ޭ","ޮ","ޯ","ް","ა","ბ","გ","დ","ე","ვ","ზ","თ","ი","კ","ლ","მ","ნ","ო","პ","ჟ","რ","ს","ტ","უ","ფ","ქ","ღ","ყ","შ","ჩ","ც","ძ","წ","ჭ","ხ","ჯ","ჰ","α","β","γ","δ","ε","ζ","η","θ","ι","κ","λ","μ","ν","ξ","ο","π","ρ","σ","τ","υ","φ","χ","ψ","ω","ά","έ","ί","ό","ύ","ή","ώ","ς","ϊ","ΰ","ϋ","ΐ","Α","Β","Γ","Δ","Ε","Ζ","Η","Θ","Ι","Κ","Λ","Μ","Ν","Ξ","Ο","Π","Ρ","Σ","Τ","Υ","Φ","Χ","Ψ","Ω","Ά","Έ","Ί","Ό","Ύ","Ή","Ώ","Ϊ","Ϋ","ā","ē","ģ","ī","ķ","ļ","ņ","ū","Ā","Ē","Ģ","Ī","Ķ","Ļ","Ņ","Ū","Ќ","ќ","Љ","љ","Њ","њ","Тс","тс","ą","ć","ę","ł","ń","ś","ź","ż","Ą","Ć","Ę","Ł","Ń","Ś","Ź","Ż","Є","І","Ї","Ґ","є","і","ї","ґ","ă","Ă","ș","Ș","ț","Ț","ţ","Ţ","а","б","в","г","д","е","ё","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я","А","Б","В","Г","Д","Е","Ё","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Х","Ц","Ч","Ш","Щ","Ъ","Ы","Ь","Э","Ю","Я","ђ","ј","ћ","џ","Ђ","Ј","Ћ","Џ","ľ","ĺ","ŕ","Ľ","Ĺ","Ŕ","ş","Ş","ı","İ","ğ","Ğ","ả","Ả","ẳ","Ẳ","ẩ","Ẩ","đ","Đ","ẹ","Ẹ","ẽ","Ẽ","ẻ","Ẻ","ế","Ế","ề","Ề","ệ","Ệ","ễ","Ễ","ể","Ể","ỏ","ọ","Ọ","ố","Ố","ồ","Ồ","ổ","Ổ","ộ","Ộ","ỗ","Ỗ","ơ","Ơ","ớ","Ớ","ờ","Ờ","ợ","Ợ","ỡ","Ỡ","Ở","ở","ị","Ị","ĩ","Ĩ","ỉ","Ỉ","ủ","Ủ","ụ","Ụ","ũ","Ũ","ư","Ư","ứ","Ứ","ừ","Ừ","ự","Ự","ữ","Ữ","ử","Ử","ỷ","Ỷ","ỳ","Ỳ","ỵ","Ỵ","ỹ","Ỹ","ạ","Ạ","ấ","Ấ","ầ","Ầ","ậ","Ậ","ẫ","Ẫ","ắ","Ắ","ằ","Ằ","ặ","Ặ","ẵ","Ẵ","“","”","‘","’","∂","ƒ","™","©","œ","Œ","®","†","℠","…","˚","º","ª","•","၊","။","€","₢","₣","£","₤","₦","₧","₩","₪","₫","₭","₮","₯","₱","₲","₳","₴","₵","¢","¥","元","円","﷼","₠","฿","₨","₹","₰","₺","؋","₼","лв","៛","₡","₸","ден","zł","₽","₾","lookAheadCharArray","diatricMap","ာ","ါ","ေ","ဲ","ိ","ီ","ို","ု","ူ","ေါင်","ော","ော်","ေါ","ေါ်","်","က်","ိုက်","ောက်","င်","ိုင်","ောင်","စ်","ည်","တ်","ိတ်","ုတ်","ွတ်","ေတ်","ဒ်","ိုဒ်","ုဒ်","န်","ာန်","ိန်","ုန်","ွန်","ပ်","ိပ်","ုပ်","ွပ်","န်ုပ်","မ်","ိမ်","ုမ်","ွမ်","ယ်","ိုလ်","ဉ်","ံ","ိံ","ုံ","ައް","ަށް","langCharMap","en","az","ə","Ə","cs","fi","hu","lt","ė","į","ų","Ė","Į","Ų","lv","pl","sk","sr","tr","symbolMap","ar","∆","∞","♥","&","|","<",">","∑","¤","ca","de","dv","es","fa","fr","ge","gr","it","my","mk","nl","pt","ro","ru","uk","vn","uricChars","uricNoSlashChars","markChars","getSlug","maintainCase","titleCase","truncate","uricFlag","uricNoSlashFlag","markFlag","symbol","langChar","lucky","ch","lastCharWasSymbol","lastCharWasDiatric","separator","result","diatricString","convertSymbols","customReplacements","allowedChars","custom","uric","uricNoSlash","mark","symbols","lang","forEach","Object","keys","escapeChars","isReplacedCustomChar","test","_","toUpperCase","lastIndexOf","createSlug","hooksManager","MethodsAvailable","removeFilter","filter","callback","_removeHook","applyFilters","_runHook","addFilter","priority","_addHook","removeAction","action","doAction","addAction","STORAGE","actions","filters","hook","handlers","handler","splice","hookObject","hooks","tmpHook","prevHook","len","_hookInsertSort","Element","scrollIntoViewIfNeeded","centerIfNeeded","parentNode","parentComputedStyle","getComputedStyle","parentBorderTopWidth","getPropertyValue","parentBorderLeftWidth","overTop","overBottom","overLeft","overRight","alignWithTop","scrollIntoView","tagName","nodeName","insertAt","index","$parent","siblings","eq","before","last","children","prepend","NodeList","HTMLCollection","from","object","translateCompanionString","isString","__materialisCustomizerStrings","CP_Customizer","options","console","warn","wp","customize","query","customize_post_id","preview","pageID","events","PREVIEW_LOADED","ADD_FIXED_OVERLAYS","RIGHT_SECTION_CLOSED","ELEMENT_DECORATED","CONTENT_ROW_REMOVED","DOCUMENT_READY","STATE_UPDATED","FOCUS_CONTROL","wpApi","MAX_SAFE_INTEGER","Number","CONTENT_ELEMENTS","TEXT_ELEMENTS","THEME_MOD_NODES","cpCustomizerGlobal","pluginOptions","addContentElementsSelectors","selectors","IO","send","isObject","post","customGet","url","customSend","customPost","rest","route","utils","phpTrim","promise","deferred","ajax","settings","Date","now","xhrFields","withCredentials","Deferred","success","done","error","fail","jqXHR","response","resolveWith","rejectWith","abort","key","defaultValue","keyParts","isUndefined","__exportsCache","getSectionExports","sectionId","jquery","sectionData","pop","modules","export","eval","slugPrefix","log","name","SCRIPT_DEBUG","groupCollapsed","groupEnd","logError","unbind","async","ev","cb","one","showLoader","$select","selectize","blur","hideLoader","jsTPL","__containerDataHandlers","addContainerDataHandler","selector","getter","setter","__containerDataFilters","addContainerDataFilter","__modules","__modulesLoaded","addModule","popUp","title","elementID","tb_show","z-index","transform","opacity","margin-top","focus","class","popUpInfo","content","uniqueId","tempContainer","popupPrompt","extraHTML","htmlEscape","$content","onClose","canceled","newValue","trim","isFunction","closePopUps","popupSelectPrompt","emptySelection","select","selectedAttr","tb_remove","openMultiImageManager","single","interestWindow","custom_uploader","media","frames","file_frame","multiple","attachment","state","toJSON","open","mode","frame","views","openImageManager","multi","link","openMediaCustomFrame","extender","view","MediaFrame","Select","openMIManager","cp","extendFrameWithMDI","MIFrame","openCropableImageManager","flexible","control","CroppedImageControl","params","fixCropKeyPressBug","imgAreaSelect","keyPress","button_labels","frame_title","flex_width","flex_height","initFrame","setState","setImageFromAttachment","__createCropToolbar","createCropToolbar","openGalleryImageManager","shortocode","ids","columns","size","shortcode","gallery","edit","selection","model","openMediaBrowser","mdi","getCustomizerRootEl","openRightSidebar","elementId","hideRightSidebar","$form","$container","floating","y","$toAppend","offsetWidth","$visibleSection","isRightSidebarVisible","sectionID","updateState","force","forceOverlays","_setContent","setContent","overlays","hoverOverlay","updateAllOverlays","__changesetUpdate","changeSet","requestChangesetUpdate","then","__requestCachedCbs","self","__onSetForcedTransport","setMod","transport","reqCB","initialMod","modParts","setting","clone","create","previewer","oldTransport","oldValue","_value","jsonEncoded","parsed","decodeURI","JSON","parse","path","setToPath","encodeURI","stringify","isBoolean","prop","kirkiSetSettingValue","getMod","cleanModValue","onModChange","autoMod","modCallback","setMultipleMods","mods","finishCb","modsIDs","getOwnPropertyNames","modsDone","difference","_currentContentValues","previewJQuery","maintainable","getContent","decodeURIComponent","encodeURIComponent","modsToSet","cleanURL","$el","modData","atts","attributes","fallback","cleanClose","uniqueMods","save","__saveTimeout","markSave","parseShortcode","tag","shortcodeAttrs","attrs","isShortcodeContent","$node","isShortcodeEditable","isEditableByTag","getNodeShortcode","isOnCanvasMod","node","reduce","nodeWrapsShortcode","nodeContainsShortcode","$containers","renderNodeShortcodes","$nodes","add","updateNodeShortcode","noRerender","attrShortcode","queryVars","pauseObserver","currentChangeset","deepClone","btoa","ajaxurl","empty","decorateMods","decorateElements","delay","restartObserver","updateNodeFromShortcodeObject","shortcodeObj","targetWindow","contentWindow","currentDevice","__observerFunctionsToPause","__observerOriginalFunctions","previewApi","addSilentExecution","compose","silentCall","refresh","throttle","cpCustomizerPreview","getChangesetURL","changeset","uuid","location","origin","pathname","isPageMaintainable","getSelectionTextInfo","el","selRange","testRange","atStart","atEnd","getSelection","sel","rangeCount","getRangeAt","cloneRange","selectNodeContents","setEnd","startContainer","startOffset","setStart","endContainer","endOffset","createRange","duplicate","moveToElementText","setEndPoint","isCustomFrontPage","isFrontPage","getPageContainerSelector","attrName","getRootNode","getSectionByDataId","getNodeSection","getNodeAbsSelector","relativeSelector","getNodeSectionId","getNodeExportId","getThemeMods","themeModNodesSelector","m","$themeModNodes","getContentNodes","nodes","contents","toArray","nodeType","Node","COMMENT_NODE","textContent","outerHTML","nodesHML","$currentNodes","querySelectorAll","getAttribute","inlineCss","styleProps","propParts","inlineCssText","setAttribute","removeAttribute","innerHTML","parts","cleanNode","item","not","nextSibling","decorateSectionsForGutenberg","__cleanNode","classList","elClass","href","getNodeClasses","$clone","startsWithDoubleSlash","startsWithSlash","queryKeys","removeUrlQueryStrings","fixWronglyWrappedTextNodes","markNode","prefix","andSelf","insertNode","removeAttr","replaceNode","$newNode","replaceWith","hideNode","showNode","isNodeVisible","removeNode","skipUpdate","hideMovableOverlays","addOverlay","updateOverlay","insertContentSection","newRow","isNumber","row","prevSection","prev","isPrevTransparent","isPrevWhite","colorize","animate","afterInsert","editContainerData","fields","elements","elem","$elem","field","$fieldContent","classes","ready","popupContainer","getValue","_values","checked","__dataContainers","addDataContainerSelector","registerContainerDataHandler","$item","getContainersSelector","addSelectors","addContentBinds","hasAttribute","assignNode","structureAllowsRemoving","parents","isFixed","overlay","parentsUntil","itemOverlay","rowItemHoverOverlay","section","sectionExports","maintainCropPropotion","src","cachedValue","contentEditableInputEvent","elementsSpecificSelector","elementsOnFocusLeave","$this","editedNode","docFragment","createDocumentFragment","newEle","createTextNode","appendChild","range","deleteContents","setStartAfter","collapse","removeAllRanges","addRange","ctrlKey","metaKey","fromCharCode","placeCursorAtEnd","contentEditableElement","createTextRange","defaultMods","enableSortable","getGutenbergBlockCommentStart","previousSibling","maxDepth","getGutenbergBlockCommentEnd","disableGutenbergBlocks","contentEditableElements","commentNode","setNonEditableNodes","setNode","childNodes","TEXT_NODE","nextNonTextNode","elementsContainers","$toDecorate","addFixedOverlays","stopImmediatePropagation","handlePasteEvent","that","clipboardData","getData","textContainer","queryCommandSupported","execCommand","unwrap","IS_PRO","addEventListener","sortable","sections","getSections","commentOpen","createComment","commentClose","axis","start","ui","helper","display","evt","isSorting","deactivate","cursorAt","showTextElementCUI","mimeType","wpautop","cui","getTextElementCUI","hidden","bodyElement","fire","undoManager","clear","panel","getEl","docWidth","innerWidth","cuiRect","getBoundingClientRect","nodeWidth","nodeOffsetLeft","newLeft","hideTextElementCUI","getBody","getFonts","googleFonts","fonts","font","Arial","Arial Black","Andale Mono","Tahoma","Terminal","Times New Roman","Verdana","toTinyMCEFormat","getNodeFont","fontArray","_fontArray","getFontWeights","_font","family","weights","weight","editorID","editor","tinymce","inline","style_formats_merge","extended_valid_elements","formats","alignment","styles","textAlign","fontweight","fontWeight","fontsize","fontSize","fontcolor","italic","fontStyle","menubar","skin","toolbar","font_formats","paste_as_text","forced_root_block","setup","ed","bm","addButton","icon","onselect","formatter","values","onPostRender","controlIdLookup","items","menu","raw","btn","getNode","tooltip","colorPalette","spectrumEl","arrayChunk","scrollY","scroll","col","moveToBookmark","getBookmark","updateOnEditorBlur","init","overlayOnly","fakeNode","$startNode","__fixedOverlayOptions","registerFixedOverlayOptions","getOverlayOptionButton","getButtonElement","addOptionsToFixedOverlay","typeOptions","_node","nodeOverrider","identity","filteredOptions","getTitleElement","getItemsElements","nodeBinds","hover","relatedTarget","toolbarBinds","cover","positionOnly","updateControls","pointer-events","bounds","pageYOffset","pageXOffset","position","background-color","updateOnlySections","overlaysContainer","isSection","isScrollEvent","update","findControls","sidebarID","shortcodeData","activateHeatZone","moveHandlerCallback","$handle","center","x","$first","first","clientX","clientY","bubbles","cancelable","detail","screenX","screenY","altKey","createEvent","initMouseEvent","dispatchEvent","nodeRect","offsetHeight","docHeight","elementMouseIsOver","elementFromPoint","itemHoverOverlay","addContentItemsTo","insertHandler","__registeredItems","heading","label","lead","paragraph","image","registerItem","contentElementSelector","getItemData","types","_type","_items","getItemAfter","getContentItems","subitems","parentId","$result","toolip","idAttr","_item","subitemsContainer","node_type","insertNewContent","$new","itemAfter","Materialis","previewLoadedMessageCallback","__isCPChangesetPreview","category","itemData","template","$button","data-name","itemsArray","_autop_newline_preservation_helper","matches","pee","br","pre_tags","pee_parts","last_pee","pee_part","allblocks","pees","tinkle","matched","charlist","whitespace","substring","normalizeBackgroundImageValue","htmlDecode","htmlEntityMap","\"","'","/","`","=","htmlUnescape","regExp","schema","normalizeValue","pList","remainingPath","normalizeShortcodeString","getSpectrumColorFormated","$spectrumElement","convertToArray","k","component","Control","Setting","toClone","asArray","cssValueNumber","bigArray","perGroup","groupBy","normalizeClassAttr","asSelector","getFileInfo","filename","extension","file","imageExtensions","isImageFile","fileInfo","parseUrlQuery","bit","second","s_length","stringifyUrlQuery","queryString","parseURL","hash","strings","parsedUrl","nodeMatchingClasses","firstMatchOnly","_class","colorInArray","colorsArray","includeAlpha","_color","valueToBool","_v","convertColor","toRGB","toRGBA","used","usedWoo","toAppend","$activatePageCard","$openPageCard","$makeEditable","$makeProductEditable","canMaintainThis","hasFrontPage","__shortcodesPopupControls","registerShortcodePopupControls","controls","cols","has","getShortcodePopupFields","default","getParse","openShortcodePopupEditor","shortcodesAttrs","setParse","$wrapper","$panel","editEscapedShortcodeAtts","shortcodeText","__customPopupControls","registerCustomPopupControls","getCustomPopupFields","active","openCustomPopupEditor","currentPageStyles","styleEL","mediaMap","mobile","tablet","desktop","nomedia","outputOrder","sprintf_style_array","props","propsText","setModAndUpdate","mediaQuery","contentStyle","getStyle","removeSelector","noUpdate","getProp","pseudo","getNodeProp","getNodeProps","manager","isImportant","setProp","handeledModUpdate","removeProp","setProps","merge","recompileScssStyle","setSectionItemColor","colorMapping","colorName","getThemeColor","colorClasses","getColorsObj","cMap","colorClass","oldColorClasses","suffix","newClass","getSectionItemColor","defaultColor","firstCMap","nodeClass","getColorValue","styleUtils","generateCSSLinerGradient","angle","colors","colorsText","generateOneSideLinerGradient","transpacency","startAlpha","getCSSGradientColors","colorAsObject","getRGBAStringTransparency","sectionSettingsContainer","createControl","updater","settingID","controlConstructor","containerType","updaterCallback","onChange","controlContainer","renderControl","renderContent","attachWithSetter","onAttach","colorControl","iris","choices","setPallete","spinner","number","step","sizes","full","canUpload","placeholder","video","onSelect","mejsSettings","_wpmejsSettings","player","MediaElementPlayer","cleanupPlayer","button_label","gradientPro","typography","kirkiConfig","l10n","kirki","global","sectionSeparator","textarea","rows","controlsGroup","free","attach","controlHolder","checkbox","generic","repeater","repeaterContent","buttonOptions","buttonGroup","popup","info","infoPRO","itemTemplate","attachControls","onStop","setItems","afterCreation","itemContainer","handle","controlOptions","thisInput","spacing","sides","kirkiNotifications","dimension","$sectionSettingsContainer","sidebarId","panels","sectionPanel","baseArea","__controls","enabled","_exclude","exclude","include","canInclude","getPrefixed","areaTitle","initAreaTitle","addToControlsList","showAll","getControl","wrapOriginal","originalName","newFunction","wrap","panelBase","_areas","_initialized","registerArea","forceOverride","hasArea","getArea","areas","sort","area","_processExtendAreaQueue","disableArea","enableArea","excludeArea","_areasToExtend","extendCallback","extendArea","panelArea","instantiate","config","containerTemplate","pageContentPanel","itemExists","on_click","tempOptions","optionsList","on_hover","backgroundImage","endsWith","background-image","bgImage","background-size","background-position","content-align-default","content-left-sm","content-center-sm","content-right-sm","contentAligns","$alignHolders","currentTextAlign","frameSeparator","$groupEl","frameType","background","border","frameColor","frameOffsetX","frameOffsetY","frameWidth","frameHeight","frameHideOnMobile","hasFrame","nodeSel","getFrameType","getTranslate","translate","translateX","translateY","setTranslate","itemsListControlTemplate","itemOptionsControl","itemsAlign","items-align-default","start-sm","center-sm","end-sm","listItemsOrder","currentItemsAlign","canAlignRowItemsContent","original","getItemOptions","afterItemCreation","sortableItem","headingText","firstMatch","secondMatch","showInfosInOneColumn","contactFormWrapper","hasInlineInfo","containerID","companion_disable_popup_wpnonce","nonce","listItemTemplate","$contentLi","$sectionsSidebarTogglers","focusContentSection","toFocus","insertSectionFromData","skipEvent","dataId","dataIds","getNextInArray","sectionStyle","$sectionsList","startPosition","prevNode","newPos","startCommentNode","endCommentNode","prevNodeCommentNode","prevNodeEndCommentNode","insertBefore","insertAfter","exportID","anchor","fadeOut","anchorExistsInPrimaryMenu","removeAnchorFromPrimaryMenu","labelChange","slug","found","oldId","updatePrimaryMenuAnchor","contentEditable","getPrimaryMenuID","createPrimaryMenu","addAnchorToPrimaryMenu","customizerSection","focusSection","skipableKeyCodes","gutenbergCounter","isGutenbergSection","openedSectionsCategories","updateSectionsList","sidebar","increments","getListModel","gutenbergId","data-id","data-export-id","data-label","inMenu","availableRowsList","$controlItems","allowMultiple","closeCategory","$category","$items","nextUntil","$categoryTitles","fadeIn","_data","once","itemID","contentSections","$listChildren","templateOptions","evaluate","interpolate","escape","getCPTemplate","contentTemplates","text-with-checkbox","list","linked-icon","getCPScriptTemplate","compile","iconStyles","iconSizes","linkIsShortcode","$control","orig","mediaType","mediaData","currentSrc","mdiIconRegexp","canHide","classValue","$icon","toRemove","toAdd","iconStyle","iconSize","newColumnContent","unwrapComment","addSectionOverlay","addFixedOverlay","toolbarTitle","toolbar_binds","$changerItem","$bgChanger","toMake","$subitemsContainer","$brush","$template","bgColorPalette","$reason","getColorComponent","getFunctionCommentTemplate","getWPLocation","newCols","maxCols","kc","colNr","colsRegexp","$col","_classAttr","itemsNo","transition","column","node_binds","$overlay","disconnect","getGlobalOption","getPrimaryLocationModName","getHomeUrl","siteURL","canSetPrimaryLocation","getPrimaryLocationDefaultLanguageMenu","customizeId","api","placeholderId","Menus","generatePlaceholderAutoIncrementId","settingTransport","defaultSettingValues","nav_menu","menuSection","MenuSection","customizeAction","customizingMenus","menu_id","defaultMenu","icl_translation_of","menuId","getPrimaryMenu","focusPrimaryMenuCustomize","getPrimaryMenuControl","getMenuControl","settingArgs","menuItemControl","menuControl","getMenuItemControls","menu_item_parent","pageURL","nav_menu_item","type_label","custom_label","nav_menu_term_id","original_title","menu_item_id","debouncedReflowMenuItems","itemsControl","oldAnchor","newAnchor","itemControl","$controlsHolder","refreshControls","controls_ids","_c"],"mappings":"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IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KAKAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MAGAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,GAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,KAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IAEAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,KAAA,KACAC,KAAA,MACAC,IAAA,IAEAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,OAAA,KACAC,IAAA,KAEAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAEAC,IAAA,GACAC,IAAA,GACAC,IAAA,GAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,GAIAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IAEAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAEAC,IAAA,IAIAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,KAAA,KACAC,KAAA,KAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAEAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAKAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,GACAC,IAAA,IACAC,IAAA,GACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,GACAC,IAAA,IACAC,IAAA,GACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KAGAC,IAAA,KACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,KAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IAOAC,IAAA,IACAC,IAAA,IAGAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,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","file":"customizer.bundle.min.js","sourcesContent":["// Spectrum Colorpicker v1.8.0\r\n// https://github.com/bgrins/spectrum\r\n// Author: Brian Grinstead\r\n// License: MIT\r\n\r\n(function (factory) {\r\n    \"use strict\";\r\n\r\n    if (typeof define === 'function' && define.amd) { // AMD\r\n        define(['jquery'], factory);\r\n    }\r\n    else if (typeof exports == \"object\" && typeof module == \"object\") { // CommonJS\r\n        module.exports = factory(require('jquery'));\r\n    }\r\n    else { // Browser\r\n        factory(jQuery);\r\n    }\r\n})(function($, undefined) {\r\n    \"use strict\";\r\n\r\n    var defaultOpts = {\r\n\r\n        // Callbacks\r\n        beforeShow: noop,\r\n        move: noop,\r\n        change: noop,\r\n        show: noop,\r\n        hide: noop,\r\n\r\n        // Options\r\n        color: false,\r\n        flat: false,\r\n        showInput: false,\r\n        allowEmpty: false,\r\n        showButtons: true,\r\n        clickoutFiresChange: true,\r\n        showInitial: false,\r\n        showPalette: false,\r\n        showPaletteOnly: false,\r\n        hideAfterPaletteSelect: false,\r\n        togglePaletteOnly: false,\r\n        showSelectionPalette: true,\r\n        localStorageKey: false,\r\n        appendTo: \"body\",\r\n        maxSelectionSize: 7,\r\n        cancelText: \"cancel\",\r\n        chooseText: \"choose\",\r\n        togglePaletteMoreText: \"more\",\r\n        togglePaletteLessText: \"less\",\r\n        clearText: \"Clear Color Selection\",\r\n        noColorSelectedText: \"No Color Selected\",\r\n        preferredFormat: false,\r\n        className: \"\", // Deprecated - use containerClassName and replacerClassName instead.\r\n        containerClassName: \"\",\r\n        replacerClassName: \"\",\r\n        showAlpha: false,\r\n        theme: \"sp-light\",\r\n        palette: [[\"#ffffff\", \"#000000\", \"#ff0000\", \"#ff8000\", \"#ffff00\", \"#008000\", \"#0000ff\", \"#4b0082\", \"#9400d3\"]],\r\n        selectionPalette: [],\r\n        disabled: false,\r\n        offset: null\r\n    },\r\n    spectrums = [],\r\n    IE = !!/msie/i.exec( window.navigator.userAgent ),\r\n    rgbaSupport = (function() {\r\n        function contains( str, substr ) {\r\n            return !!~('' + str).indexOf(substr);\r\n        }\r\n\r\n        var elem = document.createElement('div');\r\n        var style = elem.style;\r\n        style.cssText = 'background-color:rgba(0,0,0,.5)';\r\n        return contains(style.backgroundColor, 'rgba') || contains(style.backgroundColor, 'hsla');\r\n    })(),\r\n    replaceInput = [\r\n        \"<div class='sp-replacer'>\",\r\n            \"<div class='sp-preview'><div class='sp-preview-inner'></div></div>\",\r\n            \"<div class='sp-dd'>&#9660;</div>\",\r\n        \"</div>\"\r\n    ].join(''),\r\n    markup = (function () {\r\n\r\n        // IE does not support gradients with multiple stops, so we need to simulate\r\n        //  that for the rainbow slider with 8 divs that each have a single gradient\r\n        var gradientFix = \"\";\r\n        if (IE) {\r\n            for (var i = 1; i <= 6; i++) {\r\n                gradientFix += \"<div class='sp-\" + i + \"'></div>\";\r\n            }\r\n        }\r\n\r\n        return [\r\n            \"<div class='sp-container sp-hidden'>\",\r\n                \"<div class='sp-palette-container'>\",\r\n                    \"<div class='sp-palette sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-palette-button-container sp-cf'>\",\r\n                        \"<button type='button' class='sp-palette-toggle'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n                \"<div class='sp-picker-container'>\",\r\n                    \"<div class='sp-top sp-cf'>\",\r\n                        \"<div class='sp-fill'></div>\",\r\n                        \"<div class='sp-top-inner'>\",\r\n                            \"<div class='sp-color'>\",\r\n                                \"<div class='sp-sat'>\",\r\n                                    \"<div class='sp-val'>\",\r\n                                        \"<div class='sp-dragger'></div>\",\r\n                                    \"</div>\",\r\n                                \"</div>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-clear sp-clear-display'>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-hue'>\",\r\n                                \"<div class='sp-slider'></div>\",\r\n                                gradientFix,\r\n                            \"</div>\",\r\n                        \"</div>\",\r\n                        \"<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-input-container sp-cf'>\",\r\n                        \"<input class='sp-input' type='text' spellcheck='false'  />\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-initial sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-button-container sp-cf'>\",\r\n                        \"<a class='sp-cancel' href='#'></a>\",\r\n                        \"<button type='button' class='sp-choose'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n            \"</div>\"\r\n        ].join(\"\");\r\n    })();\r\n\r\n    function paletteTemplate (p, color, className, opts) {\r\n        var html = [];\r\n        for (var i = 0; i < p.length; i++) {\r\n            var current = p[i];\r\n            if(current) {\r\n                var tiny = tinycolor(current);\r\n                var c = tiny.toHsl().l < 0.5 ? \"sp-thumb-el sp-thumb-dark\" : \"sp-thumb-el sp-thumb-light\";\r\n                c += (tinycolor.equals(color, current)) ? \" sp-thumb-active\" : \"\";\r\n                var formattedString = tiny.toString(opts.preferredFormat || \"rgb\");\r\n                var swatchStyle = rgbaSupport ? (\"background-color:\" + tiny.toRgbString()) : \"filter:\" + tiny.toFilter();\r\n                html.push('<span title=\"' + formattedString + '\" data-color=\"' + tiny.toRgbString() + '\" class=\"' + c + '\"><span class=\"sp-thumb-inner\" style=\"' + swatchStyle + ';\" /></span>');\r\n            } else {\r\n                var cls = 'sp-clear-display';\r\n                html.push($('<div />')\r\n                    .append($('<span data-color=\"\" style=\"background-color:transparent;\" class=\"' + cls + '\"></span>')\r\n                        .attr('title', opts.noColorSelectedText)\r\n                    )\r\n                    .html()\r\n                );\r\n            }\r\n        }\r\n        return \"<div class='sp-cf \" + className + \"'>\" + html.join('') + \"</div>\";\r\n    }\r\n\r\n    function hideAll() {\r\n        for (var i = 0; i < spectrums.length; i++) {\r\n            if (spectrums[i]) {\r\n                spectrums[i].hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    function instanceOptions(o, callbackContext) {\r\n        var opts = $.extend({}, defaultOpts, o);\r\n        opts.callbacks = {\r\n            'move': bind(opts.move, callbackContext),\r\n            'change': bind(opts.change, callbackContext),\r\n            'show': bind(opts.show, callbackContext),\r\n            'hide': bind(opts.hide, callbackContext),\r\n            'beforeShow': bind(opts.beforeShow, callbackContext)\r\n        };\r\n\r\n        return opts;\r\n    }\r\n\r\n    function spectrum(element, o) {\r\n\r\n        var opts = instanceOptions(o, element),\r\n            flat = opts.flat,\r\n            showSelectionPalette = opts.showSelectionPalette,\r\n            localStorageKey = opts.localStorageKey,\r\n            theme = opts.theme,\r\n            callbacks = opts.callbacks,\r\n            resize = throttle(reflow, 10),\r\n            visible = false,\r\n            isDragging = false,\r\n            dragWidth = 0,\r\n            dragHeight = 0,\r\n            dragHelperHeight = 0,\r\n            slideHeight = 0,\r\n            slideWidth = 0,\r\n            alphaWidth = 0,\r\n            alphaSlideHelperWidth = 0,\r\n            slideHelperHeight = 0,\r\n            currentHue = 0,\r\n            currentSaturation = 0,\r\n            currentValue = 0,\r\n            currentAlpha = 1,\r\n            palette = [],\r\n            paletteArray = [],\r\n            paletteLookup = {},\r\n            selectionPalette = opts.selectionPalette.slice(0),\r\n            maxSelectionSize = opts.maxSelectionSize,\r\n            draggingClass = \"sp-dragging\",\r\n            shiftMovementDirection = null;\r\n\r\n        var doc = element.ownerDocument,\r\n            body = doc.body,\r\n            boundElement = $(element),\r\n            disabled = false,\r\n            container = $(markup, doc).addClass(theme),\r\n            pickerContainer = container.find(\".sp-picker-container\"),\r\n            dragger = container.find(\".sp-color\"),\r\n            dragHelper = container.find(\".sp-dragger\"),\r\n            slider = container.find(\".sp-hue\"),\r\n            slideHelper = container.find(\".sp-slider\"),\r\n            alphaSliderInner = container.find(\".sp-alpha-inner\"),\r\n            alphaSlider = container.find(\".sp-alpha\"),\r\n            alphaSlideHelper = container.find(\".sp-alpha-handle\"),\r\n            textInput = container.find(\".sp-input\"),\r\n            paletteContainer = container.find(\".sp-palette\"),\r\n            initialColorContainer = container.find(\".sp-initial\"),\r\n            cancelButton = container.find(\".sp-cancel\"),\r\n            clearButton = container.find(\".sp-clear\"),\r\n            chooseButton = container.find(\".sp-choose\"),\r\n            toggleButton = container.find(\".sp-palette-toggle\"),\r\n            isInput = boundElement.is(\"input\"),\r\n            isInputTypeColor = isInput && boundElement.attr(\"type\") === \"color\" && inputTypeColorSupport(),\r\n            shouldReplace = isInput && !flat,\r\n            replacer = (shouldReplace) ? $(replaceInput).addClass(theme).addClass(opts.className).addClass(opts.replacerClassName) : $([]),\r\n            offsetElement = (shouldReplace) ? replacer : boundElement,\r\n            previewElement = replacer.find(\".sp-preview-inner\"),\r\n            initialColor = opts.color || (isInput && boundElement.val()),\r\n            colorOnShow = false,\r\n            currentPreferredFormat = opts.preferredFormat,\r\n            clickoutFiresChange = !opts.showButtons || opts.clickoutFiresChange,\r\n            isEmpty = !initialColor,\r\n            allowEmpty = opts.allowEmpty && !isInputTypeColor;\r\n\r\n        function applyOptions() {\r\n\r\n            if (opts.showPaletteOnly) {\r\n                opts.showPalette = true;\r\n            }\r\n\r\n            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n\r\n            if (opts.palette) {\r\n                palette = opts.palette.slice(0);\r\n                paletteArray = $.isArray(palette[0]) ? palette : [palette];\r\n                paletteLookup = {};\r\n                for (var i = 0; i < paletteArray.length; i++) {\r\n                    for (var j = 0; j < paletteArray[i].length; j++) {\r\n                        var rgb = tinycolor(paletteArray[i][j]).toRgbString();\r\n                        paletteLookup[rgb] = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            container.toggleClass(\"sp-flat\", flat);\r\n            container.toggleClass(\"sp-input-disabled\", !opts.showInput);\r\n            container.toggleClass(\"sp-alpha-enabled\", opts.showAlpha);\r\n            container.toggleClass(\"sp-clear-enabled\", allowEmpty);\r\n            container.toggleClass(\"sp-buttons-disabled\", !opts.showButtons);\r\n            container.toggleClass(\"sp-palette-buttons-disabled\", !opts.togglePaletteOnly);\r\n            container.toggleClass(\"sp-palette-disabled\", !opts.showPalette);\r\n            container.toggleClass(\"sp-palette-only\", opts.showPaletteOnly);\r\n            container.toggleClass(\"sp-initial-disabled\", !opts.showInitial);\r\n            container.addClass(opts.className).addClass(opts.containerClassName);\r\n\r\n            reflow();\r\n        }\r\n\r\n        function initialize() {\r\n\r\n            if (IE) {\r\n                container.find(\"*:not(input)\").attr(\"unselectable\", \"on\");\r\n            }\r\n\r\n            applyOptions();\r\n\r\n            if (shouldReplace) {\r\n                boundElement.after(replacer).hide();\r\n            }\r\n\r\n            if (!allowEmpty) {\r\n                clearButton.hide();\r\n            }\r\n\r\n            if (flat) {\r\n                boundElement.after(container).hide();\r\n            }\r\n            else {\r\n\r\n                var appendTo = opts.appendTo === \"parent\" ? boundElement.parent() : $(opts.appendTo);\r\n                if (appendTo.length !== 1) {\r\n                    appendTo = $(\"body\");\r\n                }\r\n\r\n                appendTo.append(container);\r\n            }\r\n\r\n            updateSelectionPaletteFromStorage();\r\n\r\n            offsetElement.on(\"click.spectrum touchstart.spectrum\", function (e) {\r\n                if (!disabled) {\r\n                    toggle();\r\n                }\r\n\r\n                e.stopPropagation();\r\n\r\n                if (!$(e.target).is(\"input\")) {\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n\r\n            if(boundElement.is(\":disabled\") || (opts.disabled === true)) {\r\n                disable();\r\n            }\r\n\r\n            // Prevent clicks from bubbling up to document.  This would cause it to be hidden.\r\n            container.click(stopPropagation);\r\n\r\n            // Handle user typed input\r\n            textInput.change(setFromTextInput);\r\n            textInput.on(\"paste\", function () {\r\n                setTimeout(setFromTextInput, 1);\r\n            });\r\n            textInput.keydown(function (e) { if (e.keyCode == 13) { setFromTextInput(); } });\r\n\r\n            cancelButton.text(opts.cancelText);\r\n            cancelButton.on(\"click.spectrum\", function (e) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                revert();\r\n                hide();\r\n            });\r\n\r\n            clearButton.attr(\"title\", opts.clearText);\r\n            clearButton.on(\"click.spectrum\", function (e) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                isEmpty = true;\r\n                move();\r\n\r\n                if(flat) {\r\n                    //for the flat style, this is a change event\r\n                    updateOriginalInput(true);\r\n                }\r\n            });\r\n\r\n            chooseButton.text(opts.chooseText);\r\n            chooseButton.on(\"click.spectrum\", function (e) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                if (IE && textInput.is(\":focus\")) {\r\n                    textInput.trigger('change');\r\n                }\r\n\r\n                if (isValid()) {\r\n                    updateOriginalInput(true);\r\n                    hide();\r\n                }\r\n            });\r\n\r\n            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n            toggleButton.on(\"click.spectrum\", function (e) {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                opts.showPaletteOnly = !opts.showPaletteOnly;\r\n\r\n                // To make sure the Picker area is drawn on the right, next to the\r\n                // Palette area (and not below the palette), first move the Palette\r\n                // to the left to make space for the picker, plus 5px extra.\r\n                // The 'applyOptions' function puts the whole container back into place\r\n                // and takes care of the button-text and the sp-palette-only CSS class.\r\n                if (!opts.showPaletteOnly && !flat) {\r\n                    container.css('left', '-=' + (pickerContainer.outerWidth(true) + 5));\r\n                }\r\n                applyOptions();\r\n            });\r\n\r\n            draggable(alphaSlider, function (dragX, dragY, e) {\r\n                currentAlpha = (dragX / alphaWidth);\r\n                isEmpty = false;\r\n                if (e.shiftKey) {\r\n                    currentAlpha = Math.round(currentAlpha * 10) / 10;\r\n                }\r\n\r\n                move();\r\n            }, dragStart, dragStop);\r\n\r\n            draggable(slider, function (dragX, dragY) {\r\n                currentHue = parseFloat(dragY / slideHeight);\r\n                isEmpty = false;\r\n                if (!opts.showAlpha) {\r\n                    currentAlpha = 1;\r\n                }\r\n                move();\r\n            }, dragStart, dragStop);\r\n\r\n            draggable(dragger, function (dragX, dragY, e) {\r\n\r\n                // shift+drag should snap the movement to either the x or y axis.\r\n                if (!e.shiftKey) {\r\n                    shiftMovementDirection = null;\r\n                }\r\n                else if (!shiftMovementDirection) {\r\n                    var oldDragX = currentSaturation * dragWidth;\r\n                    var oldDragY = dragHeight - (currentValue * dragHeight);\r\n                    var furtherFromX = Math.abs(dragX - oldDragX) > Math.abs(dragY - oldDragY);\r\n\r\n                    shiftMovementDirection = furtherFromX ? \"x\" : \"y\";\r\n                }\r\n\r\n                var setSaturation = !shiftMovementDirection || shiftMovementDirection === \"x\";\r\n                var setValue = !shiftMovementDirection || shiftMovementDirection === \"y\";\r\n\r\n                if (setSaturation) {\r\n                    currentSaturation = parseFloat(dragX / dragWidth);\r\n                }\r\n                if (setValue) {\r\n                    currentValue = parseFloat((dragHeight - dragY) / dragHeight);\r\n                }\r\n\r\n                isEmpty = false;\r\n                if (!opts.showAlpha) {\r\n                    currentAlpha = 1;\r\n                }\r\n\r\n                move();\r\n\r\n            }, dragStart, dragStop);\r\n\r\n            if (!!initialColor) {\r\n                set(initialColor);\r\n\r\n                // In case color was black - update the preview UI and set the format\r\n                // since the set function will not run (default color is black).\r\n                updateUI();\r\n                currentPreferredFormat = opts.preferredFormat || tinycolor(initialColor).format;\r\n\r\n                addColorToSelectionPalette(initialColor);\r\n            }\r\n            else {\r\n                updateUI();\r\n            }\r\n\r\n            if (flat) {\r\n                show();\r\n            }\r\n\r\n            function paletteElementClick(e) {\r\n                if (e.data && e.data.ignore) {\r\n                    set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                    move();\r\n                }\r\n                else {\r\n                    set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                    move();\r\n\r\n                    // If the picker is going to close immediately, a palette selection\r\n                    // is a change.  Otherwise, it's a move only.\r\n                    if (opts.hideAfterPaletteSelect) {\r\n                        updateOriginalInput(true);\r\n                        hide();\r\n                    } else {\r\n                        updateOriginalInput();\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            var paletteEvent = IE ? \"mousedown.spectrum\" : \"click.spectrum touchstart.spectrum\";\r\n            paletteContainer.on(paletteEvent, \".sp-thumb-el\", paletteElementClick);\r\n            initialColorContainer.on(paletteEvent, \".sp-thumb-el:nth-child(1)\", { ignore: true }, paletteElementClick);\r\n        }\r\n\r\n        function updateSelectionPaletteFromStorage() {\r\n\r\n            if (localStorageKey && window.localStorage) {\r\n\r\n                // Migrate old palettes over to new format.  May want to remove this eventually.\r\n                try {\r\n                    var oldPalette = window.localStorage[localStorageKey].split(\",#\");\r\n                    if (oldPalette.length > 1) {\r\n                        delete window.localStorage[localStorageKey];\r\n                        $.each(oldPalette, function(i, c) {\r\n                             addColorToSelectionPalette(c);\r\n                        });\r\n                    }\r\n                }\r\n                catch(e) { }\r\n\r\n                try {\r\n                    selectionPalette = window.localStorage[localStorageKey].split(\";\");\r\n                }\r\n                catch (e) { }\r\n            }\r\n        }\r\n\r\n        function addColorToSelectionPalette(color) {\r\n            if (showSelectionPalette) {\r\n                var rgb = tinycolor(color).toRgbString();\r\n                if (!paletteLookup[rgb] && $.inArray(rgb, selectionPalette) === -1) {\r\n                    selectionPalette.push(rgb);\r\n                    while(selectionPalette.length > maxSelectionSize) {\r\n                        selectionPalette.shift();\r\n                    }\r\n                }\r\n\r\n                if (localStorageKey && window.localStorage) {\r\n                    try {\r\n                        window.localStorage[localStorageKey] = selectionPalette.join(\";\");\r\n                    }\r\n                    catch(e) { }\r\n                }\r\n            }\r\n        }\r\n\r\n        function getUniqueSelectionPalette() {\r\n            var unique = [];\r\n            if (opts.showPalette) {\r\n                for (var i = 0; i < selectionPalette.length; i++) {\r\n                    var rgb = tinycolor(selectionPalette[i]).toRgbString();\r\n\r\n                    if (!paletteLookup[rgb]) {\r\n                        unique.push(selectionPalette[i]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return unique.reverse().slice(0, opts.maxSelectionSize);\r\n        }\r\n\r\n        function drawPalette() {\r\n\r\n            var currentColor = get();\r\n\r\n            var html = $.map(paletteArray, function (palette, i) {\r\n                return paletteTemplate(palette, currentColor, \"sp-palette-row sp-palette-row-\" + i, opts);\r\n            });\r\n\r\n            updateSelectionPaletteFromStorage();\r\n\r\n            if (selectionPalette) {\r\n                html.push(paletteTemplate(getUniqueSelectionPalette(), currentColor, \"sp-palette-row sp-palette-row-selection\", opts));\r\n            }\r\n\r\n            paletteContainer.html(html.join(\"\"));\r\n        }\r\n\r\n        function drawInitial() {\r\n            if (opts.showInitial) {\r\n                var initial = colorOnShow;\r\n                var current = get();\r\n                initialColorContainer.html(paletteTemplate([initial, current], current, \"sp-palette-row-initial\", opts));\r\n            }\r\n        }\r\n\r\n        function dragStart() {\r\n            if (dragHeight <= 0 || dragWidth <= 0 || slideHeight <= 0) {\r\n                reflow();\r\n            }\r\n            isDragging = true;\r\n            container.addClass(draggingClass);\r\n            shiftMovementDirection = null;\r\n            boundElement.trigger('dragstart.spectrum', [ get() ]);\r\n        }\r\n\r\n        function dragStop() {\r\n            isDragging = false;\r\n            container.removeClass(draggingClass);\r\n            boundElement.trigger('dragstop.spectrum', [ get() ]);\r\n        }\r\n\r\n        function setFromTextInput() {\r\n\r\n            var value = textInput.val();\r\n\r\n            if ((value === null || value === \"\") && allowEmpty) {\r\n                set(null);\r\n                move();\r\n                updateOriginalInput();\r\n            }\r\n            else {\r\n                var tiny = tinycolor(value);\r\n                if (tiny.isValid()) {\r\n                    set(tiny);\r\n                    move();\r\n                    updateOriginalInput();\r\n                }\r\n                else {\r\n                    textInput.addClass(\"sp-validation-error\");\r\n                }\r\n            }\r\n        }\r\n\r\n        function toggle() {\r\n            if (visible) {\r\n                hide();\r\n            }\r\n            else {\r\n                show();\r\n            }\r\n        }\r\n\r\n        function show() {\r\n            var event = $.Event('beforeShow.spectrum');\r\n\r\n            if (visible) {\r\n                reflow();\r\n                return;\r\n            }\r\n\r\n            boundElement.trigger(event, [ get() ]);\r\n\r\n            if (callbacks.beforeShow(get()) === false || event.isDefaultPrevented()) {\r\n                return;\r\n            }\r\n\r\n            hideAll();\r\n            visible = true;\r\n\r\n            $(doc).on(\"keydown.spectrum\", onkeydown);\r\n            $(doc).on(\"click.spectrum\", clickout);\r\n            $(window).on(\"resize.spectrum\", resize);\r\n            replacer.addClass(\"sp-active\");\r\n            container.removeClass(\"sp-hidden\");\r\n\r\n            reflow();\r\n            updateUI();\r\n\r\n            colorOnShow = get();\r\n\r\n            drawInitial();\r\n            callbacks.show(colorOnShow);\r\n            boundElement.trigger('show.spectrum', [ colorOnShow ]);\r\n        }\r\n\r\n        function onkeydown(e) {\r\n            // Close on ESC\r\n            if (e.keyCode === 27) {\r\n                hide();\r\n            }\r\n        }\r\n\r\n        function clickout(e) {\r\n            // Return on right click.\r\n            if (e.button == 2) { return; }\r\n\r\n            // If a drag event was happening during the mouseup, don't hide\r\n            // on click.\r\n            if (isDragging) { return; }\r\n\r\n            if (clickoutFiresChange) {\r\n                updateOriginalInput(true);\r\n            }\r\n            else {\r\n                revert();\r\n            }\r\n            hide();\r\n        }\r\n\r\n        function hide() {\r\n            // Return if hiding is unnecessary\r\n            if (!visible || flat) { return; }\r\n            visible = false;\r\n\r\n            $(doc).off(\"keydown.spectrum\", onkeydown);\r\n            $(doc).off(\"click.spectrum\", clickout);\r\n            $(window).off(\"resize.spectrum\", resize);\r\n\r\n            replacer.removeClass(\"sp-active\");\r\n            container.addClass(\"sp-hidden\");\r\n\r\n            callbacks.hide(get());\r\n            boundElement.trigger('hide.spectrum', [ get() ]);\r\n        }\r\n\r\n        function revert() {\r\n            set(colorOnShow, true);\r\n            updateOriginalInput(true);\r\n        }\r\n\r\n        function set(color, ignoreFormatChange) {\r\n            if (tinycolor.equals(color, get())) {\r\n                // Update UI just in case a validation error needs\r\n                // to be cleared.\r\n                updateUI();\r\n                return;\r\n            }\r\n\r\n            var newColor, newHsv;\r\n            if (!color && allowEmpty) {\r\n                isEmpty = true;\r\n            } else {\r\n                isEmpty = false;\r\n                newColor = tinycolor(color);\r\n                newHsv = newColor.toHsv();\r\n\r\n                currentHue = (newHsv.h % 360) / 360;\r\n                currentSaturation = newHsv.s;\r\n                currentValue = newHsv.v;\r\n                currentAlpha = newHsv.a;\r\n            }\r\n            updateUI();\r\n\r\n            if (newColor && newColor.isValid() && !ignoreFormatChange) {\r\n                currentPreferredFormat = opts.preferredFormat || newColor.getFormat();\r\n            }\r\n        }\r\n\r\n        function get(opts) {\r\n            opts = opts || { };\r\n\r\n            if (allowEmpty && isEmpty) {\r\n                return null;\r\n            }\r\n\r\n            return tinycolor.fromRatio({\r\n                h: currentHue,\r\n                s: currentSaturation,\r\n                v: currentValue,\r\n                a: Math.round(currentAlpha * 1000) / 1000\r\n            }, { format: opts.format || currentPreferredFormat });\r\n        }\r\n\r\n        function isValid() {\r\n            return !textInput.hasClass(\"sp-validation-error\");\r\n        }\r\n\r\n        function move() {\r\n            updateUI();\r\n\r\n            callbacks.move(get());\r\n            boundElement.trigger('move.spectrum', [ get() ]);\r\n        }\r\n\r\n        function updateUI() {\r\n\r\n            textInput.removeClass(\"sp-validation-error\");\r\n\r\n            updateHelperLocations();\r\n\r\n            // Update dragger background color (gradients take care of saturation and value).\r\n            var flatColor = tinycolor.fromRatio({ h: currentHue, s: 1, v: 1 });\r\n            dragger.css(\"background-color\", flatColor.toHexString());\r\n\r\n            // Get a format that alpha will be included in (hex and names ignore alpha)\r\n            var format = currentPreferredFormat;\r\n            if (currentAlpha < 1 && !(currentAlpha === 0 && format === \"name\")) {\r\n                if (format === \"hex\" || format === \"hex3\" || format === \"hex6\" || format === \"name\") {\r\n                    format = \"rgb\";\r\n                }\r\n            }\r\n\r\n            var realColor = get({ format: format }),\r\n                displayColor = '';\r\n\r\n             //reset background info for preview element\r\n            previewElement.removeClass(\"sp-clear-display\");\r\n            previewElement.css('background-color', 'transparent');\r\n\r\n            if (!realColor && allowEmpty) {\r\n                // Update the replaced elements background with icon indicating no color selection\r\n                previewElement.addClass(\"sp-clear-display\");\r\n            }\r\n            else {\r\n                var realHex = realColor.toHexString(),\r\n                    realRgb = realColor.toRgbString();\r\n\r\n                // Update the replaced elements background color (with actual selected color)\r\n                if (rgbaSupport || realColor.alpha === 1) {\r\n                    previewElement.css(\"background-color\", realRgb);\r\n                }\r\n                else {\r\n                    previewElement.css(\"background-color\", \"transparent\");\r\n                    previewElement.css(\"filter\", realColor.toFilter());\r\n                }\r\n\r\n                if (opts.showAlpha) {\r\n                    var rgb = realColor.toRgb();\r\n                    rgb.a = 0;\r\n                    var realAlpha = tinycolor(rgb).toRgbString();\r\n                    var gradient = \"linear-gradient(left, \" + realAlpha + \", \" + realHex + \")\";\r\n\r\n                    if (IE) {\r\n                        alphaSliderInner.css(\"filter\", tinycolor(realAlpha).toFilter({ gradientType: 1 }, realHex));\r\n                    }\r\n                    else {\r\n                        alphaSliderInner.css(\"background\", \"-webkit-\" + gradient);\r\n                        alphaSliderInner.css(\"background\", \"-moz-\" + gradient);\r\n                        alphaSliderInner.css(\"background\", \"-ms-\" + gradient);\r\n                        // Use current syntax gradient on unprefixed property.\r\n                        alphaSliderInner.css(\"background\",\r\n                            \"linear-gradient(to right, \" + realAlpha + \", \" + realHex + \")\");\r\n                    }\r\n                }\r\n\r\n                displayColor = realColor.toString(format);\r\n            }\r\n\r\n            // Update the text entry input as it changes happen\r\n            if (opts.showInput) {\r\n                textInput.val(displayColor);\r\n            }\r\n\r\n            if (opts.showPalette) {\r\n                drawPalette();\r\n            }\r\n\r\n            drawInitial();\r\n        }\r\n\r\n        function updateHelperLocations() {\r\n            var s = currentSaturation;\r\n            var v = currentValue;\r\n\r\n            if(allowEmpty && isEmpty) {\r\n                //if selected color is empty, hide the helpers\r\n                alphaSlideHelper.hide();\r\n                slideHelper.hide();\r\n                dragHelper.hide();\r\n            }\r\n            else {\r\n                //make sure helpers are visible\r\n                alphaSlideHelper.show();\r\n                slideHelper.show();\r\n                dragHelper.show();\r\n\r\n                // Where to show the little circle in that displays your current selected color\r\n                var dragX = s * dragWidth;\r\n                var dragY = dragHeight - (v * dragHeight);\r\n                dragX = Math.max(\r\n                    -dragHelperHeight,\r\n                    Math.min(dragWidth - dragHelperHeight, dragX - dragHelperHeight)\r\n                );\r\n                dragY = Math.max(\r\n                    -dragHelperHeight,\r\n                    Math.min(dragHeight - dragHelperHeight, dragY - dragHelperHeight)\r\n                );\r\n                dragHelper.css({\r\n                    \"top\": dragY + \"px\",\r\n                    \"left\": dragX + \"px\"\r\n                });\r\n\r\n                var alphaX = currentAlpha * alphaWidth;\r\n                alphaSlideHelper.css({\r\n                    \"left\": (alphaX - (alphaSlideHelperWidth / 2)) + \"px\"\r\n                });\r\n\r\n                // Where to show the bar that displays your current selected hue\r\n                var slideY = (currentHue) * slideHeight;\r\n                slideHelper.css({\r\n                    \"top\": (slideY - slideHelperHeight) + \"px\"\r\n                });\r\n            }\r\n        }\r\n\r\n        function updateOriginalInput(fireCallback) {\r\n            var color = get(),\r\n                displayColor = '',\r\n                hasChanged = !tinycolor.equals(color, colorOnShow);\r\n\r\n            if (color) {\r\n                displayColor = color.toString(currentPreferredFormat);\r\n                // Update the selection palette with the current color\r\n                addColorToSelectionPalette(color);\r\n            }\r\n\r\n            if (isInput) {\r\n                boundElement.val(displayColor);\r\n            }\r\n\r\n            if (fireCallback && hasChanged) {\r\n                callbacks.change(color);\r\n                boundElement.trigger('change', [ color ]);\r\n            }\r\n        }\r\n\r\n        function reflow() {\r\n            if (!visible) {\r\n                return; // Calculations would be useless and wouldn't be reliable anyways\r\n            }\r\n            dragWidth = dragger.width();\r\n            dragHeight = dragger.height();\r\n            dragHelperHeight = dragHelper.height();\r\n            slideWidth = slider.width();\r\n            slideHeight = slider.height();\r\n            slideHelperHeight = slideHelper.height();\r\n            alphaWidth = alphaSlider.width();\r\n            alphaSlideHelperWidth = alphaSlideHelper.width();\r\n\r\n            if (!flat) {\r\n                container.css(\"position\", \"absolute\");\r\n                if (opts.offset) {\r\n                    container.offset(opts.offset);\r\n                } else {\r\n                    container.offset(getOffset(container, offsetElement));\r\n                }\r\n            }\r\n\r\n            updateHelperLocations();\r\n\r\n            if (opts.showPalette) {\r\n                drawPalette();\r\n            }\r\n\r\n            boundElement.trigger('reflow.spectrum');\r\n        }\r\n\r\n        function destroy() {\r\n            boundElement.show();\r\n            offsetElement.off(\"click.spectrum touchstart.spectrum\");\r\n            container.remove();\r\n            replacer.remove();\r\n            spectrums[spect.id] = null;\r\n        }\r\n\r\n        function option(optionName, optionValue) {\r\n            if (optionName === undefined) {\r\n                return $.extend({}, opts);\r\n            }\r\n            if (optionValue === undefined) {\r\n                return opts[optionName];\r\n            }\r\n\r\n            opts[optionName] = optionValue;\r\n\r\n            if (optionName === \"preferredFormat\") {\r\n                currentPreferredFormat = opts.preferredFormat;\r\n            }\r\n            applyOptions();\r\n        }\r\n\r\n        function enable() {\r\n            disabled = false;\r\n            boundElement.attr(\"disabled\", false);\r\n            offsetElement.removeClass(\"sp-disabled\");\r\n        }\r\n\r\n        function disable() {\r\n            hide();\r\n            disabled = true;\r\n            boundElement.attr(\"disabled\", true);\r\n            offsetElement.addClass(\"sp-disabled\");\r\n        }\r\n\r\n        function setOffset(coord) {\r\n            opts.offset = coord;\r\n            reflow();\r\n        }\r\n\r\n        initialize();\r\n\r\n        var spect = {\r\n            show: show,\r\n            hide: hide,\r\n            toggle: toggle,\r\n            reflow: reflow,\r\n            option: option,\r\n            enable: enable,\r\n            disable: disable,\r\n            offset: setOffset,\r\n            set: function (c) {\r\n                set(c);\r\n                updateOriginalInput();\r\n            },\r\n            get: get,\r\n            destroy: destroy,\r\n            container: container\r\n        };\r\n\r\n        spect.id = spectrums.push(spect) - 1;\r\n\r\n        return spect;\r\n    }\r\n\r\n    /**\r\n    * checkOffset - get the offset below/above and left/right element depending on screen position\r\n    * Thanks https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js\r\n    */\r\n    function getOffset(picker, input) {\r\n        var extraY = 0;\r\n        var dpWidth = picker.outerWidth();\r\n        var dpHeight = picker.outerHeight();\r\n        var inputHeight = input.outerHeight();\r\n        var doc = picker[0].ownerDocument;\r\n        var docElem = doc.documentElement;\r\n        var viewWidth = docElem.clientWidth + $(doc).scrollLeft();\r\n        var viewHeight = docElem.clientHeight + $(doc).scrollTop();\r\n        var offset = input.offset();\r\n        var offsetLeft = offset.left;\r\n        var offsetTop = offset.top;\r\n\r\n        offsetTop += inputHeight;\r\n\r\n        offsetLeft -=\r\n            Math.min(offsetLeft, (offsetLeft + dpWidth > viewWidth && viewWidth > dpWidth) ?\r\n            Math.abs(offsetLeft + dpWidth - viewWidth) : 0);\r\n\r\n        offsetTop -=\r\n            Math.min(offsetTop, ((offsetTop + dpHeight > viewHeight && viewHeight > dpHeight) ?\r\n            Math.abs(dpHeight + inputHeight - extraY) : extraY));\r\n\r\n        return {\r\n            top: offsetTop,\r\n            bottom: offset.bottom,\r\n            left: offsetLeft,\r\n            right: offset.right,\r\n            width: offset.width,\r\n            height: offset.height\r\n        };\r\n    }\r\n\r\n    /**\r\n    * noop - do nothing\r\n    */\r\n    function noop() {\r\n\r\n    }\r\n\r\n    /**\r\n    * stopPropagation - makes the code only doing this a little easier to read in line\r\n    */\r\n    function stopPropagation(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n    * Create a function bound to a given object\r\n    * Thanks to underscore.js\r\n    */\r\n    function bind(func, obj) {\r\n        var slice = Array.prototype.slice;\r\n        var args = slice.call(arguments, 2);\r\n        return function () {\r\n            return func.apply(obj, args.concat(slice.call(arguments)));\r\n        };\r\n    }\r\n\r\n    /**\r\n    * Lightweight drag helper.  Handles containment within the element, so that\r\n    * when dragging, the x is within [0,element.width] and y is within [0,element.height]\r\n    */\r\n    function draggable(element, onmove, onstart, onstop) {\r\n        onmove = onmove || function () { };\r\n        onstart = onstart || function () { };\r\n        onstop = onstop || function () { };\r\n        var doc = document;\r\n        var dragging = false;\r\n        var offset = {};\r\n        var maxHeight = 0;\r\n        var maxWidth = 0;\r\n        var hasTouch = ('ontouchstart' in window);\r\n\r\n        var duringDragEvents = {};\r\n        duringDragEvents[\"selectstart\"] = prevent;\r\n        duringDragEvents[\"dragstart\"] = prevent;\r\n        duringDragEvents[\"touchmove mousemove\"] = move;\r\n        duringDragEvents[\"touchend mouseup\"] = stop;\r\n\r\n        function prevent(e) {\r\n            if (e.stopPropagation) {\r\n                e.stopPropagation();\r\n            }\r\n            if (e.preventDefault) {\r\n                e.preventDefault();\r\n            }\r\n            e.returnValue = false;\r\n        }\r\n\r\n        function move(e) {\r\n            if (dragging) {\r\n                // Mouseup happened outside of window\r\n                if (IE && doc.documentMode < 9 && !e.button) {\r\n                    return stop();\r\n                }\r\n\r\n                var t0 = e.originalEvent && e.originalEvent.touches && e.originalEvent.touches[0];\r\n                var pageX = t0 && t0.pageX || e.pageX;\r\n                var pageY = t0 && t0.pageY || e.pageY;\r\n\r\n                var dragX = Math.max(0, Math.min(pageX - offset.left, maxWidth));\r\n                var dragY = Math.max(0, Math.min(pageY - offset.top, maxHeight));\r\n\r\n                if (hasTouch) {\r\n                    // Stop scrolling in iOS\r\n                    prevent(e);\r\n                }\r\n\r\n                onmove.apply(element, [dragX, dragY, e]);\r\n            }\r\n        }\r\n\r\n        function start(e) {\r\n            var rightclick = (e.which) ? (e.which == 3) : (e.button == 2);\r\n\r\n            if (!rightclick && !dragging) {\r\n                if (onstart.apply(element, arguments) !== false) {\r\n                    dragging = true;\r\n                    maxHeight = $(element).height();\r\n                    maxWidth = $(element).width();\r\n                    offset = $(element).offset();\r\n\r\n                    $(doc).on(duringDragEvents);\r\n                    $(doc.body).addClass(\"sp-dragging\");\r\n\r\n                    move(e);\r\n\r\n                    prevent(e);\r\n                }\r\n            }\r\n        }\r\n\r\n        function stop() {\r\n            if (dragging) {\r\n                $(doc).off(duringDragEvents);\r\n                $(doc.body).removeClass(\"sp-dragging\");\r\n\r\n                // Wait a tick before notifying observers to allow the click event\r\n                // to fire in Chrome.\r\n                setTimeout(function() {\r\n                    onstop.apply(element, arguments);\r\n                }, 0);\r\n            }\r\n            dragging = false;\r\n        }\r\n\r\n        $(element).on(\"touchstart mousedown\", start);\r\n    }\r\n\r\n    function throttle(func, wait, debounce) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var throttler = function () {\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            };\r\n            if (debounce) clearTimeout(timeout);\r\n            if (debounce || !timeout) timeout = setTimeout(throttler, wait);\r\n        };\r\n    }\r\n\r\n    function inputTypeColorSupport() {\r\n        return $.fn.spectrum.inputTypeColorSupport();\r\n    }\r\n\r\n    /**\r\n    * Define a jQuery plugin\r\n    */\r\n    var dataID = \"spectrum.id\";\r\n    $.fn.spectrum = function (opts, extra) {\r\n\r\n        if (typeof opts == \"string\") {\r\n\r\n            var returnValue = this;\r\n            var args = Array.prototype.slice.call( arguments, 1 );\r\n\r\n            this.each(function () {\r\n                var spect = spectrums[$(this).data(dataID)];\r\n                if (spect) {\r\n                    var method = spect[opts];\r\n                    if (!method) {\r\n                        throw new Error( \"Spectrum: no such method: '\" + opts + \"'\" );\r\n                    }\r\n\r\n                    if (opts == \"get\") {\r\n                        returnValue = spect.get();\r\n                    }\r\n                    else if (opts == \"container\") {\r\n                        returnValue = spect.container;\r\n                    }\r\n                    else if (opts == \"option\") {\r\n                        returnValue = spect.option.apply(spect, args);\r\n                    }\r\n                    else if (opts == \"destroy\") {\r\n                        spect.destroy();\r\n                        $(this).removeData(dataID);\r\n                    }\r\n                    else {\r\n                        method.apply(spect, args);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return returnValue;\r\n        }\r\n\r\n        // Initializing a new instance of spectrum\r\n        return this.spectrum(\"destroy\").each(function () {\r\n            var options = $.extend({}, $(this).data(), opts);\r\n            var spect = spectrum(this, options);\r\n            $(this).data(dataID, spect.id);\r\n        });\r\n    };\r\n\r\n    $.fn.spectrum.load = true;\r\n    $.fn.spectrum.loadOpts = {};\r\n    $.fn.spectrum.draggable = draggable;\r\n    $.fn.spectrum.defaults = defaultOpts;\r\n    $.fn.spectrum.inputTypeColorSupport = function inputTypeColorSupport() {\r\n        if (typeof inputTypeColorSupport._cachedResult === \"undefined\") {\r\n            var colorInput = $(\"<input type='color'/>\")[0]; // if color element is supported, value will default to not null\r\n            inputTypeColorSupport._cachedResult = colorInput.type === \"color\" && colorInput.value !== \"\";\r\n        }\r\n        return inputTypeColorSupport._cachedResult;\r\n    };\r\n\r\n    $.spectrum = { };\r\n    $.spectrum.localization = { };\r\n    $.spectrum.palettes = { };\r\n\r\n    $.fn.spectrum.processNativeColorInputs = function () {\r\n        var colorInputs = $(\"input[type=color]\");\r\n        if (colorInputs.length && !inputTypeColorSupport()) {\r\n            colorInputs.spectrum({\r\n                preferredFormat: \"hex6\"\r\n            });\r\n        }\r\n    };\r\n\r\n    // TinyColor v1.1.2\r\n    // https://github.com/bgrins/TinyColor\r\n    // Brian Grinstead, MIT License\r\n\r\n    (function() {\r\n\r\n    var trimLeft = /^[\\s,#]+/,\r\n        trimRight = /\\s+$/,\r\n        tinyCounter = 0,\r\n        math = Math,\r\n        mathRound = math.round,\r\n        mathMin = math.min,\r\n        mathMax = math.max,\r\n        mathRandom = math.random;\r\n\r\n    var tinycolor = function(color, opts) {\r\n\r\n        color = (color) ? color : '';\r\n        opts = opts || { };\r\n\r\n        // If input is already a tinycolor, return itself\r\n        if (color instanceof tinycolor) {\r\n           return color;\r\n        }\r\n        // If we are called as a function, call using new instead\r\n        if (!(this instanceof tinycolor)) {\r\n            return new tinycolor(color, opts);\r\n        }\r\n\r\n        var rgb = inputToRGB(color);\r\n        this._originalInput = color,\r\n        this._r = rgb.r,\r\n        this._g = rgb.g,\r\n        this._b = rgb.b,\r\n        this._a = rgb.a,\r\n        this._roundA = mathRound(1000 * this._a) / 1000,\r\n        this._format = opts.format || rgb.format;\r\n        this._gradientType = opts.gradientType;\r\n\r\n        // Don't let the range of [0,255] come back in [0,1].\r\n        // Potentially lose a little bit of precision here, but will fix issues where\r\n        // .5 gets interpreted as half of the total, instead of half of 1\r\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\r\n        if (this._r < 1) { this._r = mathRound(this._r); }\r\n        if (this._g < 1) { this._g = mathRound(this._g); }\r\n        if (this._b < 1) { this._b = mathRound(this._b); }\r\n\r\n        this._ok = rgb.ok;\r\n        this._tc_id = tinyCounter++;\r\n    };\r\n\r\n    tinycolor.prototype = {\r\n        isDark: function() {\r\n            return this.getBrightness() < 128;\r\n        },\r\n        isLight: function() {\r\n            return !this.isDark();\r\n        },\r\n        isValid: function() {\r\n            return this._ok;\r\n        },\r\n        getOriginalInput: function() {\r\n          return this._originalInput;\r\n        },\r\n        getFormat: function() {\r\n            return this._format;\r\n        },\r\n        getAlpha: function() {\r\n            return this._a;\r\n        },\r\n        getBrightness: function() {\r\n            var rgb = this.toRgb();\r\n            return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\r\n        },\r\n        setAlpha: function(value) {\r\n            this._a = boundAlpha(value);\r\n            this._roundA = mathRound(1000 * this._a) / 1000;\r\n            return this;\r\n        },\r\n        toHsv: function() {\r\n            var hsv = rgbToHsv(this._r, this._g, this._b);\r\n            return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\r\n        },\r\n        toHsvString: function() {\r\n            var hsv = rgbToHsv(this._r, this._g, this._b);\r\n            var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\r\n            return (this._a == 1) ?\r\n              \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\r\n              \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\r\n        },\r\n        toHsl: function() {\r\n            var hsl = rgbToHsl(this._r, this._g, this._b);\r\n            return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\r\n        },\r\n        toHslString: function() {\r\n            var hsl = rgbToHsl(this._r, this._g, this._b);\r\n            var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\r\n            return (this._a == 1) ?\r\n              \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\r\n              \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\r\n        },\r\n        toHex: function(allow3Char) {\r\n            return rgbToHex(this._r, this._g, this._b, allow3Char);\r\n        },\r\n        toHexString: function(allow3Char) {\r\n            return '#' + this.toHex(allow3Char);\r\n        },\r\n        toHex8: function() {\r\n            return rgbaToHex(this._r, this._g, this._b, this._a);\r\n        },\r\n        toHex8String: function() {\r\n            return '#' + this.toHex8();\r\n        },\r\n        toRgb: function() {\r\n            return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\r\n        },\r\n        toRgbString: function() {\r\n            return (this._a == 1) ?\r\n              \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\r\n              \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\r\n        },\r\n        toPercentageRgb: function() {\r\n            return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\r\n        },\r\n        toPercentageRgbString: function() {\r\n            return (this._a == 1) ?\r\n              \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\r\n              \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\r\n        },\r\n        toName: function() {\r\n            if (this._a === 0) {\r\n                return \"transparent\";\r\n            }\r\n\r\n            if (this._a < 1) {\r\n                return false;\r\n            }\r\n\r\n            return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\r\n        },\r\n        toFilter: function(secondColor) {\r\n            var hex8String = '#' + rgbaToHex(this._r, this._g, this._b, this._a);\r\n            var secondHex8String = hex8String;\r\n            var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\r\n\r\n            if (secondColor) {\r\n                var s = tinycolor(secondColor);\r\n                secondHex8String = s.toHex8String();\r\n            }\r\n\r\n            return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\r\n        },\r\n        toString: function(format) {\r\n            var formatSet = !!format;\r\n            format = format || this._format;\r\n\r\n            var formattedString = false;\r\n            var hasAlpha = this._a < 1 && this._a >= 0;\r\n            var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"name\");\r\n\r\n            if (needsAlphaFormat) {\r\n                // Special case for \"transparent\", all other non-alpha formats\r\n                // will return rgba when there is transparency.\r\n                if (format === \"name\" && this._a === 0) {\r\n                    return this.toName();\r\n                }\r\n                return this.toRgbString();\r\n            }\r\n            if (format === \"rgb\") {\r\n                formattedString = this.toRgbString();\r\n            }\r\n            if (format === \"prgb\") {\r\n                formattedString = this.toPercentageRgbString();\r\n            }\r\n            if (format === \"hex\" || format === \"hex6\") {\r\n                formattedString = this.toHexString();\r\n            }\r\n            if (format === \"hex3\") {\r\n                formattedString = this.toHexString(true);\r\n            }\r\n            if (format === \"hex8\") {\r\n                formattedString = this.toHex8String();\r\n            }\r\n            if (format === \"name\") {\r\n                formattedString = this.toName();\r\n            }\r\n            if (format === \"hsl\") {\r\n                formattedString = this.toHslString();\r\n            }\r\n            if (format === \"hsv\") {\r\n                formattedString = this.toHsvString();\r\n            }\r\n\r\n            return formattedString || this.toHexString();\r\n        },\r\n\r\n        _applyModification: function(fn, args) {\r\n            var color = fn.apply(null, [this].concat([].slice.call(args)));\r\n            this._r = color._r;\r\n            this._g = color._g;\r\n            this._b = color._b;\r\n            this.setAlpha(color._a);\r\n            return this;\r\n        },\r\n        lighten: function() {\r\n            return this._applyModification(lighten, arguments);\r\n        },\r\n        brighten: function() {\r\n            return this._applyModification(brighten, arguments);\r\n        },\r\n        darken: function() {\r\n            return this._applyModification(darken, arguments);\r\n        },\r\n        desaturate: function() {\r\n            return this._applyModification(desaturate, arguments);\r\n        },\r\n        saturate: function() {\r\n            return this._applyModification(saturate, arguments);\r\n        },\r\n        greyscale: function() {\r\n            return this._applyModification(greyscale, arguments);\r\n        },\r\n        spin: function() {\r\n            return this._applyModification(spin, arguments);\r\n        },\r\n\r\n        _applyCombination: function(fn, args) {\r\n            return fn.apply(null, [this].concat([].slice.call(args)));\r\n        },\r\n        analogous: function() {\r\n            return this._applyCombination(analogous, arguments);\r\n        },\r\n        complement: function() {\r\n            return this._applyCombination(complement, arguments);\r\n        },\r\n        monochromatic: function() {\r\n            return this._applyCombination(monochromatic, arguments);\r\n        },\r\n        splitcomplement: function() {\r\n            return this._applyCombination(splitcomplement, arguments);\r\n        },\r\n        triad: function() {\r\n            return this._applyCombination(triad, arguments);\r\n        },\r\n        tetrad: function() {\r\n            return this._applyCombination(tetrad, arguments);\r\n        }\r\n    };\r\n\r\n    // If input is an object, force 1 into \"1.0\" to handle ratios properly\r\n    // String input requires \"1.0\" as input, so 1 will be treated as 1\r\n    tinycolor.fromRatio = function(color, opts) {\r\n        if (typeof color == \"object\") {\r\n            var newColor = {};\r\n            for (var i in color) {\r\n                if (color.hasOwnProperty(i)) {\r\n                    if (i === \"a\") {\r\n                        newColor[i] = color[i];\r\n                    }\r\n                    else {\r\n                        newColor[i] = convertToPercentage(color[i]);\r\n                    }\r\n                }\r\n            }\r\n            color = newColor;\r\n        }\r\n\r\n        return tinycolor(color, opts);\r\n    };\r\n\r\n    // Given a string or object, convert that input to RGB\r\n    // Possible string inputs:\r\n    //\r\n    //     \"red\"\r\n    //     \"#f00\" or \"f00\"\r\n    //     \"#ff0000\" or \"ff0000\"\r\n    //     \"#ff000000\" or \"ff000000\"\r\n    //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\r\n    //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\r\n    //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\r\n    //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\r\n    //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\r\n    //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\r\n    //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\r\n    //\r\n    function inputToRGB(color) {\r\n\r\n        var rgb = { r: 0, g: 0, b: 0 };\r\n        var a = 1;\r\n        var ok = false;\r\n        var format = false;\r\n\r\n        if (typeof color == \"string\") {\r\n            color = stringInputToObject(color);\r\n        }\r\n\r\n        if (typeof color == \"object\") {\r\n            if (color.hasOwnProperty(\"r\") && color.hasOwnProperty(\"g\") && color.hasOwnProperty(\"b\")) {\r\n                rgb = rgbToRgb(color.r, color.g, color.b);\r\n                ok = true;\r\n                format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\r\n            }\r\n            else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"v\")) {\r\n                color.s = convertToPercentage(color.s);\r\n                color.v = convertToPercentage(color.v);\r\n                rgb = hsvToRgb(color.h, color.s, color.v);\r\n                ok = true;\r\n                format = \"hsv\";\r\n            }\r\n            else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"l\")) {\r\n                color.s = convertToPercentage(color.s);\r\n                color.l = convertToPercentage(color.l);\r\n                rgb = hslToRgb(color.h, color.s, color.l);\r\n                ok = true;\r\n                format = \"hsl\";\r\n            }\r\n\r\n            if (color.hasOwnProperty(\"a\")) {\r\n                a = color.a;\r\n            }\r\n        }\r\n\r\n        a = boundAlpha(a);\r\n\r\n        return {\r\n            ok: ok,\r\n            format: color.format || format,\r\n            r: mathMin(255, mathMax(rgb.r, 0)),\r\n            g: mathMin(255, mathMax(rgb.g, 0)),\r\n            b: mathMin(255, mathMax(rgb.b, 0)),\r\n            a: a\r\n        };\r\n    }\r\n\r\n\r\n    // Conversion Functions\r\n    // --------------------\r\n\r\n    // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\r\n    // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\r\n\r\n    // `rgbToRgb`\r\n    // Handle bounds / percentage checking to conform to CSS color spec\r\n    // <http://www.w3.org/TR/css3-color/>\r\n    // *Assumes:* r, g, b in [0, 255] or [0, 1]\r\n    // *Returns:* { r, g, b } in [0, 255]\r\n    function rgbToRgb(r, g, b){\r\n        return {\r\n            r: bound01(r, 255) * 255,\r\n            g: bound01(g, 255) * 255,\r\n            b: bound01(b, 255) * 255\r\n        };\r\n    }\r\n\r\n    // `rgbToHsl`\r\n    // Converts an RGB color value to HSL.\r\n    // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\r\n    // *Returns:* { h, s, l } in [0,1]\r\n    function rgbToHsl(r, g, b) {\r\n\r\n        r = bound01(r, 255);\r\n        g = bound01(g, 255);\r\n        b = bound01(b, 255);\r\n\r\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min) {\r\n            h = s = 0; // achromatic\r\n        }\r\n        else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n\r\n            h /= 6;\r\n        }\r\n\r\n        return { h: h, s: s, l: l };\r\n    }\r\n\r\n    // `hslToRgb`\r\n    // Converts an HSL color value to RGB.\r\n    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\r\n    // *Returns:* { r, g, b } in the set [0, 255]\r\n    function hslToRgb(h, s, l) {\r\n        var r, g, b;\r\n\r\n        h = bound01(h, 360);\r\n        s = bound01(s, 100);\r\n        l = bound01(l, 100);\r\n\r\n        function hue2rgb(p, q, t) {\r\n            if(t < 0) t += 1;\r\n            if(t > 1) t -= 1;\r\n            if(t < 1/6) return p + (q - p) * 6 * t;\r\n            if(t < 1/2) return q;\r\n            if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        if(s === 0) {\r\n            r = g = b = l; // achromatic\r\n        }\r\n        else {\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return { r: r * 255, g: g * 255, b: b * 255 };\r\n    }\r\n\r\n    // `rgbToHsv`\r\n    // Converts an RGB color value to HSV\r\n    // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\r\n    // *Returns:* { h, s, v } in [0,1]\r\n    function rgbToHsv(r, g, b) {\r\n\r\n        r = bound01(r, 255);\r\n        g = bound01(g, 255);\r\n        b = bound01(b, 255);\r\n\r\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n        var h, s, v = max;\r\n\r\n        var d = max - min;\r\n        s = max === 0 ? 0 : d / max;\r\n\r\n        if(max == min) {\r\n            h = 0; // achromatic\r\n        }\r\n        else {\r\n            switch(max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n        return { h: h, s: s, v: v };\r\n    }\r\n\r\n    // `hsvToRgb`\r\n    // Converts an HSV color value to RGB.\r\n    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\r\n    // *Returns:* { r, g, b } in the set [0, 255]\r\n     function hsvToRgb(h, s, v) {\r\n\r\n        h = bound01(h, 360) * 6;\r\n        s = bound01(s, 100);\r\n        v = bound01(v, 100);\r\n\r\n        var i = math.floor(h),\r\n            f = h - i,\r\n            p = v * (1 - s),\r\n            q = v * (1 - f * s),\r\n            t = v * (1 - (1 - f) * s),\r\n            mod = i % 6,\r\n            r = [v, q, p, p, t, v][mod],\r\n            g = [t, v, v, q, p, p][mod],\r\n            b = [p, p, t, v, v, q][mod];\r\n\r\n        return { r: r * 255, g: g * 255, b: b * 255 };\r\n    }\r\n\r\n    // `rgbToHex`\r\n    // Converts an RGB color to hex\r\n    // Assumes r, g, and b are contained in the set [0, 255]\r\n    // Returns a 3 or 6 character hex\r\n    function rgbToHex(r, g, b, allow3Char) {\r\n\r\n        var hex = [\r\n            pad2(mathRound(r).toString(16)),\r\n            pad2(mathRound(g).toString(16)),\r\n            pad2(mathRound(b).toString(16))\r\n        ];\r\n\r\n        // Return a 3 character hex if possible\r\n        if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\r\n            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\r\n        }\r\n\r\n        return hex.join(\"\");\r\n    }\r\n        // `rgbaToHex`\r\n        // Converts an RGBA color plus alpha transparency to hex\r\n        // Assumes r, g, b and a are contained in the set [0, 255]\r\n        // Returns an 8 character hex\r\n        function rgbaToHex(r, g, b, a) {\r\n\r\n            var hex = [\r\n                pad2(convertDecimalToHex(a)),\r\n                pad2(mathRound(r).toString(16)),\r\n                pad2(mathRound(g).toString(16)),\r\n                pad2(mathRound(b).toString(16))\r\n            ];\r\n\r\n            return hex.join(\"\");\r\n        }\r\n\r\n    // `equals`\r\n    // Can be called with any tinycolor input\r\n    tinycolor.equals = function (color1, color2) {\r\n        if (!color1 || !color2) { return false; }\r\n        return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\r\n    };\r\n    tinycolor.random = function() {\r\n        return tinycolor.fromRatio({\r\n            r: mathRandom(),\r\n            g: mathRandom(),\r\n            b: mathRandom()\r\n        });\r\n    };\r\n\r\n\r\n    // Modification Functions\r\n    // ----------------------\r\n    // Thanks to less.js for some of the basics here\r\n    // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\r\n\r\n    function desaturate(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.s -= amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return tinycolor(hsl);\r\n    }\r\n\r\n    function saturate(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.s += amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return tinycolor(hsl);\r\n    }\r\n\r\n    function greyscale(color) {\r\n        return tinycolor(color).desaturate(100);\r\n    }\r\n\r\n    function lighten (color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.l += amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return tinycolor(hsl);\r\n    }\r\n\r\n    function brighten(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var rgb = tinycolor(color).toRgb();\r\n        rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\r\n        rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\r\n        rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\r\n        return tinycolor(rgb);\r\n    }\r\n\r\n    function darken (color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.l -= amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return tinycolor(hsl);\r\n    }\r\n\r\n    // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\r\n    // Values outside of this range will be wrapped into this range.\r\n    function spin(color, amount) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        var hue = (mathRound(hsl.h) + amount) % 360;\r\n        hsl.h = hue < 0 ? 360 + hue : hue;\r\n        return tinycolor(hsl);\r\n    }\r\n\r\n    // Combination Functions\r\n    // ---------------------\r\n    // Thanks to jQuery xColor for some of the ideas behind these\r\n    // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\r\n\r\n    function complement(color) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.h = (hsl.h + 180) % 360;\r\n        return tinycolor(hsl);\r\n    }\r\n\r\n    function triad(color) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            tinycolor(color),\r\n            tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\r\n            tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\r\n        ];\r\n    }\r\n\r\n    function tetrad(color) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            tinycolor(color),\r\n            tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\r\n            tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\r\n            tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\r\n        ];\r\n    }\r\n\r\n    function splitcomplement(color) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            tinycolor(color),\r\n            tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\r\n            tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\r\n        ];\r\n    }\r\n\r\n    function analogous(color, results, slices) {\r\n        results = results || 6;\r\n        slices = slices || 30;\r\n\r\n        var hsl = tinycolor(color).toHsl();\r\n        var part = 360 / slices;\r\n        var ret = [tinycolor(color)];\r\n\r\n        for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\r\n            hsl.h = (hsl.h + part) % 360;\r\n            ret.push(tinycolor(hsl));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function monochromatic(color, results) {\r\n        results = results || 6;\r\n        var hsv = tinycolor(color).toHsv();\r\n        var h = hsv.h, s = hsv.s, v = hsv.v;\r\n        var ret = [];\r\n        var modification = 1 / results;\r\n\r\n        while (results--) {\r\n            ret.push(tinycolor({ h: h, s: s, v: v}));\r\n            v = (v + modification) % 1;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    // Utility Functions\r\n    // ---------------------\r\n\r\n    tinycolor.mix = function(color1, color2, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 50);\r\n\r\n        var rgb1 = tinycolor(color1).toRgb();\r\n        var rgb2 = tinycolor(color2).toRgb();\r\n\r\n        var p = amount / 100;\r\n        var w = p * 2 - 1;\r\n        var a = rgb2.a - rgb1.a;\r\n\r\n        var w1;\r\n\r\n        if (w * a == -1) {\r\n            w1 = w;\r\n        } else {\r\n            w1 = (w + a) / (1 + w * a);\r\n        }\r\n\r\n        w1 = (w1 + 1) / 2;\r\n\r\n        var w2 = 1 - w1;\r\n\r\n        var rgba = {\r\n            r: rgb2.r * w1 + rgb1.r * w2,\r\n            g: rgb2.g * w1 + rgb1.g * w2,\r\n            b: rgb2.b * w1 + rgb1.b * w2,\r\n            a: rgb2.a * p  + rgb1.a * (1 - p)\r\n        };\r\n\r\n        return tinycolor(rgba);\r\n    };\r\n\r\n\r\n    // Readability Functions\r\n    // ---------------------\r\n    // <http://www.w3.org/TR/AERT#color-contrast>\r\n\r\n    // `readability`\r\n    // Analyze the 2 colors and returns an object with the following properties:\r\n    //    `brightness`: difference in brightness between the two colors\r\n    //    `color`: difference in color/hue between the two colors\r\n    tinycolor.readability = function(color1, color2) {\r\n        var c1 = tinycolor(color1);\r\n        var c2 = tinycolor(color2);\r\n        var rgb1 = c1.toRgb();\r\n        var rgb2 = c2.toRgb();\r\n        var brightnessA = c1.getBrightness();\r\n        var brightnessB = c2.getBrightness();\r\n        var colorDiff = (\r\n            Math.max(rgb1.r, rgb2.r) - Math.min(rgb1.r, rgb2.r) +\r\n            Math.max(rgb1.g, rgb2.g) - Math.min(rgb1.g, rgb2.g) +\r\n            Math.max(rgb1.b, rgb2.b) - Math.min(rgb1.b, rgb2.b)\r\n        );\r\n\r\n        return {\r\n            brightness: Math.abs(brightnessA - brightnessB),\r\n            color: colorDiff\r\n        };\r\n    };\r\n\r\n    // `readable`\r\n    // http://www.w3.org/TR/AERT#color-contrast\r\n    // Ensure that foreground and background color combinations provide sufficient contrast.\r\n    // *Example*\r\n    //    tinycolor.isReadable(\"#000\", \"#111\") => false\r\n    tinycolor.isReadable = function(color1, color2) {\r\n        var readability = tinycolor.readability(color1, color2);\r\n        return readability.brightness > 125 && readability.color > 500;\r\n    };\r\n\r\n    // `mostReadable`\r\n    // Given a base color and a list of possible foreground or background\r\n    // colors for that base, returns the most readable color.\r\n    // *Example*\r\n    //    tinycolor.mostReadable(\"#123\", [\"#fff\", \"#000\"]) => \"#000\"\r\n    tinycolor.mostReadable = function(baseColor, colorList) {\r\n        var bestColor = null;\r\n        var bestScore = 0;\r\n        var bestIsReadable = false;\r\n        for (var i=0; i < colorList.length; i++) {\r\n\r\n            // We normalize both around the \"acceptable\" breaking point,\r\n            // but rank brightness constrast higher than hue.\r\n\r\n            var readability = tinycolor.readability(baseColor, colorList[i]);\r\n            var readable = readability.brightness > 125 && readability.color > 500;\r\n            var score = 3 * (readability.brightness / 125) + (readability.color / 500);\r\n\r\n            if ((readable && ! bestIsReadable) ||\r\n                (readable && bestIsReadable && score > bestScore) ||\r\n                ((! readable) && (! bestIsReadable) && score > bestScore)) {\r\n                bestIsReadable = readable;\r\n                bestScore = score;\r\n                bestColor = tinycolor(colorList[i]);\r\n            }\r\n        }\r\n        return bestColor;\r\n    };\r\n\r\n\r\n    // Big List of Colors\r\n    // ------------------\r\n    // <http://www.w3.org/TR/css3-color/#svg-color>\r\n    var names = tinycolor.names = {\r\n        aliceblue: \"f0f8ff\",\r\n        antiquewhite: \"faebd7\",\r\n        aqua: \"0ff\",\r\n        aquamarine: \"7fffd4\",\r\n        azure: \"f0ffff\",\r\n        beige: \"f5f5dc\",\r\n        bisque: \"ffe4c4\",\r\n        black: \"000\",\r\n        blanchedalmond: \"ffebcd\",\r\n        blue: \"00f\",\r\n        blueviolet: \"8a2be2\",\r\n        brown: \"a52a2a\",\r\n        burlywood: \"deb887\",\r\n        burntsienna: \"ea7e5d\",\r\n        cadetblue: \"5f9ea0\",\r\n        chartreuse: \"7fff00\",\r\n        chocolate: \"d2691e\",\r\n        coral: \"ff7f50\",\r\n        cornflowerblue: \"6495ed\",\r\n        cornsilk: \"fff8dc\",\r\n        crimson: \"dc143c\",\r\n        cyan: \"0ff\",\r\n        darkblue: \"00008b\",\r\n        darkcyan: \"008b8b\",\r\n        darkgoldenrod: \"b8860b\",\r\n        darkgray: \"a9a9a9\",\r\n        darkgreen: \"006400\",\r\n        darkgrey: \"a9a9a9\",\r\n        darkkhaki: \"bdb76b\",\r\n        darkmagenta: \"8b008b\",\r\n        darkolivegreen: \"556b2f\",\r\n        darkorange: \"ff8c00\",\r\n        darkorchid: \"9932cc\",\r\n        darkred: \"8b0000\",\r\n        darksalmon: \"e9967a\",\r\n        darkseagreen: \"8fbc8f\",\r\n        darkslateblue: \"483d8b\",\r\n        darkslategray: \"2f4f4f\",\r\n        darkslategrey: \"2f4f4f\",\r\n        darkturquoise: \"00ced1\",\r\n        darkviolet: \"9400d3\",\r\n        deeppink: \"ff1493\",\r\n        deepskyblue: \"00bfff\",\r\n        dimgray: \"696969\",\r\n        dimgrey: \"696969\",\r\n        dodgerblue: \"1e90ff\",\r\n        firebrick: \"b22222\",\r\n        floralwhite: \"fffaf0\",\r\n        forestgreen: \"228b22\",\r\n        fuchsia: \"f0f\",\r\n        gainsboro: \"dcdcdc\",\r\n        ghostwhite: \"f8f8ff\",\r\n        gold: \"ffd700\",\r\n        goldenrod: \"daa520\",\r\n        gray: \"808080\",\r\n        green: \"008000\",\r\n        greenyellow: \"adff2f\",\r\n        grey: \"808080\",\r\n        honeydew: \"f0fff0\",\r\n        hotpink: \"ff69b4\",\r\n        indianred: \"cd5c5c\",\r\n        indigo: \"4b0082\",\r\n        ivory: \"fffff0\",\r\n        khaki: \"f0e68c\",\r\n        lavender: \"e6e6fa\",\r\n        lavenderblush: \"fff0f5\",\r\n        lawngreen: \"7cfc00\",\r\n        lemonchiffon: \"fffacd\",\r\n        lightblue: \"add8e6\",\r\n        lightcoral: \"f08080\",\r\n        lightcyan: \"e0ffff\",\r\n        lightgoldenrodyellow: \"fafad2\",\r\n        lightgray: \"d3d3d3\",\r\n        lightgreen: \"90ee90\",\r\n        lightgrey: \"d3d3d3\",\r\n        lightpink: \"ffb6c1\",\r\n        lightsalmon: \"ffa07a\",\r\n        lightseagreen: \"20b2aa\",\r\n        lightskyblue: \"87cefa\",\r\n        lightslategray: \"789\",\r\n        lightslategrey: \"789\",\r\n        lightsteelblue: \"b0c4de\",\r\n        lightyellow: \"ffffe0\",\r\n        lime: \"0f0\",\r\n        limegreen: \"32cd32\",\r\n        linen: \"faf0e6\",\r\n        magenta: \"f0f\",\r\n        maroon: \"800000\",\r\n        mediumaquamarine: \"66cdaa\",\r\n        mediumblue: \"0000cd\",\r\n        mediumorchid: \"ba55d3\",\r\n        mediumpurple: \"9370db\",\r\n        mediumseagreen: \"3cb371\",\r\n        mediumslateblue: \"7b68ee\",\r\n        mediumspringgreen: \"00fa9a\",\r\n        mediumturquoise: \"48d1cc\",\r\n        mediumvioletred: \"c71585\",\r\n        midnightblue: \"191970\",\r\n        mintcream: \"f5fffa\",\r\n        mistyrose: \"ffe4e1\",\r\n        moccasin: \"ffe4b5\",\r\n        navajowhite: \"ffdead\",\r\n        navy: \"000080\",\r\n        oldlace: \"fdf5e6\",\r\n        olive: \"808000\",\r\n        olivedrab: \"6b8e23\",\r\n        orange: \"ffa500\",\r\n        orangered: \"ff4500\",\r\n        orchid: \"da70d6\",\r\n        palegoldenrod: \"eee8aa\",\r\n        palegreen: \"98fb98\",\r\n        paleturquoise: \"afeeee\",\r\n        palevioletred: \"db7093\",\r\n        papayawhip: \"ffefd5\",\r\n        peachpuff: \"ffdab9\",\r\n        peru: \"cd853f\",\r\n        pink: \"ffc0cb\",\r\n        plum: \"dda0dd\",\r\n        powderblue: \"b0e0e6\",\r\n        purple: \"800080\",\r\n        rebeccapurple: \"663399\",\r\n        red: \"f00\",\r\n        rosybrown: \"bc8f8f\",\r\n        royalblue: \"4169e1\",\r\n        saddlebrown: \"8b4513\",\r\n        salmon: \"fa8072\",\r\n        sandybrown: \"f4a460\",\r\n        seagreen: \"2e8b57\",\r\n        seashell: \"fff5ee\",\r\n        sienna: \"a0522d\",\r\n        silver: \"c0c0c0\",\r\n        skyblue: \"87ceeb\",\r\n        slateblue: \"6a5acd\",\r\n        slategray: \"708090\",\r\n        slategrey: \"708090\",\r\n        snow: \"fffafa\",\r\n        springgreen: \"00ff7f\",\r\n        steelblue: \"4682b4\",\r\n        tan: \"d2b48c\",\r\n        teal: \"008080\",\r\n        thistle: \"d8bfd8\",\r\n        tomato: \"ff6347\",\r\n        turquoise: \"40e0d0\",\r\n        violet: \"ee82ee\",\r\n        wheat: \"f5deb3\",\r\n        white: \"fff\",\r\n        whitesmoke: \"f5f5f5\",\r\n        yellow: \"ff0\",\r\n        yellowgreen: \"9acd32\"\r\n    };\r\n\r\n    // Make it easy to access colors via `hexNames[hex]`\r\n    var hexNames = tinycolor.hexNames = flip(names);\r\n\r\n\r\n    // Utilities\r\n    // ---------\r\n\r\n    // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\r\n    function flip(o) {\r\n        var flipped = { };\r\n        for (var i in o) {\r\n            if (o.hasOwnProperty(i)) {\r\n                flipped[o[i]] = i;\r\n            }\r\n        }\r\n        return flipped;\r\n    }\r\n\r\n    // Return a valid alpha value [0,1] with all invalid values being set to 1\r\n    function boundAlpha(a) {\r\n        a = parseFloat(a);\r\n\r\n        if (isNaN(a) || a < 0 || a > 1) {\r\n            a = 1;\r\n        }\r\n\r\n        return a;\r\n    }\r\n\r\n    // Take input from [0, n] and return it as [0, 1]\r\n    function bound01(n, max) {\r\n        if (isOnePointZero(n)) { n = \"100%\"; }\r\n\r\n        var processPercent = isPercentage(n);\r\n        n = mathMin(max, mathMax(0, parseFloat(n)));\r\n\r\n        // Automatically convert percentage into number\r\n        if (processPercent) {\r\n            n = parseInt(n * max, 10) / 100;\r\n        }\r\n\r\n        // Handle floating point rounding errors\r\n        if ((math.abs(n - max) < 0.000001)) {\r\n            return 1;\r\n        }\r\n\r\n        // Convert into [0, 1] range if it isn't already\r\n        return (n % max) / parseFloat(max);\r\n    }\r\n\r\n    // Force a number between 0 and 1\r\n    function clamp01(val) {\r\n        return mathMin(1, mathMax(0, val));\r\n    }\r\n\r\n    // Parse a base-16 hex value into a base-10 integer\r\n    function parseIntFromHex(val) {\r\n        return parseInt(val, 16);\r\n    }\r\n\r\n    // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\r\n    // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\r\n    function isOnePointZero(n) {\r\n        return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\r\n    }\r\n\r\n    // Check to see if string passed in is a percentage\r\n    function isPercentage(n) {\r\n        return typeof n === \"string\" && n.indexOf('%') != -1;\r\n    }\r\n\r\n    // Force a hex value to have 2 characters\r\n    function pad2(c) {\r\n        return c.length == 1 ? '0' + c : '' + c;\r\n    }\r\n\r\n    // Replace a decimal with it's percentage value\r\n    function convertToPercentage(n) {\r\n        if (n <= 1) {\r\n            n = (n * 100) + \"%\";\r\n        }\r\n\r\n        return n;\r\n    }\r\n\r\n    // Converts a decimal to a hex value\r\n    function convertDecimalToHex(d) {\r\n        return Math.round(parseFloat(d) * 255).toString(16);\r\n    }\r\n    // Converts a hex value to a decimal\r\n    function convertHexToDecimal(h) {\r\n        return (parseIntFromHex(h) / 255);\r\n    }\r\n\r\n    var matchers = (function() {\r\n\r\n        // <http://www.w3.org/TR/css3-values/#integers>\r\n        var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\r\n\r\n        // <http://www.w3.org/TR/css3-values/#number-value>\r\n        var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\r\n\r\n        // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\r\n        var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\r\n\r\n        // Actual matching.\r\n        // Parentheses and commas are optional, but not required.\r\n        // Whitespace can take the place of commas or opening paren\r\n        var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n        var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n\r\n        return {\r\n            rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\r\n            rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\r\n            hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\r\n            hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\r\n            hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\r\n            hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\r\n            hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n            hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n            hex8: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\r\n        };\r\n    })();\r\n\r\n    // `stringInputToObject`\r\n    // Permissive string parsing.  Take in a number of formats, and output an object\r\n    // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\r\n    function stringInputToObject(color) {\r\n\r\n        color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\r\n        var named = false;\r\n        if (names[color]) {\r\n            color = names[color];\r\n            named = true;\r\n        }\r\n        else if (color == 'transparent') {\r\n            return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\r\n        }\r\n\r\n        // Try to match string input using regular expressions.\r\n        // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\r\n        // Just return an object and let the conversion functions handle that.\r\n        // This way the result will be the same whether the tinycolor is initialized with string or object.\r\n        var match;\r\n        if ((match = matchers.rgb.exec(color))) {\r\n            return { r: match[1], g: match[2], b: match[3] };\r\n        }\r\n        if ((match = matchers.rgba.exec(color))) {\r\n            return { r: match[1], g: match[2], b: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hsl.exec(color))) {\r\n            return { h: match[1], s: match[2], l: match[3] };\r\n        }\r\n        if ((match = matchers.hsla.exec(color))) {\r\n            return { h: match[1], s: match[2], l: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hsv.exec(color))) {\r\n            return { h: match[1], s: match[2], v: match[3] };\r\n        }\r\n        if ((match = matchers.hsva.exec(color))) {\r\n            return { h: match[1], s: match[2], v: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hex8.exec(color))) {\r\n            return {\r\n                a: convertHexToDecimal(match[1]),\r\n                r: parseIntFromHex(match[2]),\r\n                g: parseIntFromHex(match[3]),\r\n                b: parseIntFromHex(match[4]),\r\n                format: named ? \"name\" : \"hex8\"\r\n            };\r\n        }\r\n        if ((match = matchers.hex6.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1]),\r\n                g: parseIntFromHex(match[2]),\r\n                b: parseIntFromHex(match[3]),\r\n                format: named ? \"name\" : \"hex\"\r\n            };\r\n        }\r\n        if ((match = matchers.hex3.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1] + '' + match[1]),\r\n                g: parseIntFromHex(match[2] + '' + match[2]),\r\n                b: parseIntFromHex(match[3] + '' + match[3]),\r\n                format: named ? \"name\" : \"hex\"\r\n            };\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    window.tinycolor = tinycolor;\r\n    })();\r\n\r\n    $(function () {\r\n        if ($.fn.spectrum.load) {\r\n            $.fn.spectrum.processNativeColorInputs();\r\n        }\r\n    });\r\n\r\n});","(function (root) {\n    'use strict';\n\n    /**\n     * charMap\n     * @type {Object}\n     */\n    var charMap = {\n\n        // latin\n        'À': 'A',\n        'Á': 'A',\n        'Â': 'A',\n        'Ã': 'A',\n        'Ä': 'Ae',\n        'Å': 'A',\n        'Æ': 'AE',\n        'Ç': 'C',\n        'È': 'E',\n        'É': 'E',\n        'Ê': 'E',\n        'Ë': 'E',\n        'Ì': 'I',\n        'Í': 'I',\n        'Î': 'I',\n        'Ï': 'I',\n        'Ð': 'D',\n        'Ñ': 'N',\n        'Ò': 'O',\n        'Ó': 'O',\n        'Ô': 'O',\n        'Õ': 'O',\n        'Ö': 'Oe',\n        'Ő': 'O',\n        'Ø': 'O',\n        'Ù': 'U',\n        'Ú': 'U',\n        'Û': 'U',\n        'Ü': 'Ue',\n        'Ű': 'U',\n        'Ý': 'Y',\n        'Þ': 'TH',\n        'ß': 'ss',\n        'à': 'a',\n        'á': 'a',\n        'â': 'a',\n        'ã': 'a',\n        'ä': 'ae',\n        'å': 'a',\n        'æ': 'ae',\n        'ç': 'c',\n        'è': 'e',\n        'é': 'e',\n        'ê': 'e',\n        'ë': 'e',\n        'ì': 'i',\n        'í': 'i',\n        'î': 'i',\n        'ï': 'i',\n        'ð': 'd',\n        'ñ': 'n',\n        'ò': 'o',\n        'ó': 'o',\n        'ô': 'o',\n        'õ': 'o',\n        'ö': 'oe',\n        'ő': 'o',\n        'ø': 'o',\n        'ù': 'u',\n        'ú': 'u',\n        'û': 'u',\n        'ü': 'ue',\n        'ű': 'u',\n        'ý': 'y',\n        'þ': 'th',\n        'ÿ': 'y',\n        'ẞ': 'SS',\n\n        // language specific\n\n        // Arabic\n        'ا': 'a',\n        'أ': 'a',\n        'إ': 'i',\n        'آ': 'aa',\n        'ؤ': 'u',\n        'ئ': 'e',\n        'ء': 'a',\n        'ب': 'b',\n        'ت': 't',\n        'ث': 'th',\n        'ج': 'j',\n        'ح': 'h',\n        'خ': 'kh',\n        'د': 'd',\n        'ذ': 'th',\n        'ر': 'r',\n        'ز': 'z',\n        'س': 's',\n        'ش': 'sh',\n        'ص': 's',\n        'ض': 'dh',\n        'ط': 't',\n        'ظ': 'z',\n        'ع': 'a',\n        'غ': 'gh',\n        'ف': 'f',\n        'ق': 'q',\n        'ك': 'k',\n        'ل': 'l',\n        'م': 'm',\n        'ن': 'n',\n        'ه': 'h',\n        'و': 'w',\n        'ي': 'y',\n        'ى': 'a',\n        'ة': 'h',\n        'ﻻ': 'la',\n        'ﻷ': 'laa',\n        'ﻹ': 'lai',\n        'ﻵ': 'laa',\n\n        // Persian additional characters than Arabic\n        'گ': 'g',\n        'چ': 'ch',\n        'پ': 'p',\n        'ژ': 'zh',\n        'ک': 'k',\n        'ی': 'y',\n\n        // Arabic diactrics\n        'َ': 'a',\n        'ً': 'an',\n        'ِ': 'e',\n        'ٍ': 'en',\n        'ُ': 'u',\n        'ٌ': 'on',\n        'ْ': '',\n\n        // Arabic numbers\n        '٠': '0',\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n\n        // Persian numbers\n        '۰': '0',\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n\n        // Burmese consonants\n        'က': 'k',\n        'ခ': 'kh',\n        'ဂ': 'g',\n        'ဃ': 'ga',\n        'င': 'ng',\n        'စ': 's',\n        'ဆ': 'sa',\n        'ဇ': 'z',\n        'စျ': 'za',\n        'ည': 'ny',\n        'ဋ': 't',\n        'ဌ': 'ta',\n        'ဍ': 'd',\n        'ဎ': 'da',\n        'ဏ': 'na',\n        'တ': 't',\n        'ထ': 'ta',\n        'ဒ': 'd',\n        'ဓ': 'da',\n        'န': 'n',\n        'ပ': 'p',\n        'ဖ': 'pa',\n        'ဗ': 'b',\n        'ဘ': 'ba',\n        'မ': 'm',\n        'ယ': 'y',\n        'ရ': 'ya',\n        'လ': 'l',\n        'ဝ': 'w',\n        'သ': 'th',\n        'ဟ': 'h',\n        'ဠ': 'la',\n        'အ': 'a',\n        // consonant character combos\n        'ြ': 'y',\n        'ျ': 'ya',\n        'ွ': 'w',\n        'ြွ': 'yw',\n        'ျွ': 'ywa',\n        'ှ': 'h',\n        // independent vowels\n        'ဧ': 'e',\n        '၏': '-e',\n        'ဣ': 'i',\n        'ဤ': '-i',\n        'ဉ': 'u',\n        'ဦ': '-u',\n        'ဩ': 'aw',\n        'သြော': 'aw',\n        'ဪ': 'aw',\n        // numbers\n        '၀': '0',\n        '၁': '1',\n        '၂': '2',\n        '၃': '3',\n        '၄': '4',\n        '၅': '5',\n        '၆': '6',\n        '၇': '7',\n        '၈': '8',\n        '၉': '9',\n        // virama and tone marks which are silent in transliteration\n        '္': '',\n        '့': '',\n        'း': '',\n\n        // Czech\n        'č': 'c',\n        'ď': 'd',\n        'ě': 'e',\n        'ň': 'n',\n        'ř': 'r',\n        'š': 's',\n        'ť': 't',\n        'ů': 'u',\n        'ž': 'z',\n        'Č': 'C',\n        'Ď': 'D',\n        'Ě': 'E',\n        'Ň': 'N',\n        'Ř': 'R',\n        'Š': 'S',\n        'Ť': 'T',\n        'Ů': 'U',\n        'Ž': 'Z',\n\n        // Dhivehi\n        'ހ': 'h',\n        'ށ': 'sh',\n        'ނ': 'n',\n        'ރ': 'r',\n        'ބ': 'b',\n        'ޅ': 'lh',\n        'ކ': 'k',\n        'އ': 'a',\n        'ވ': 'v',\n        'މ': 'm',\n        'ފ': 'f',\n        'ދ': 'dh',\n        'ތ': 'th',\n        'ލ': 'l',\n        'ގ': 'g',\n        'ޏ': 'gn',\n        'ސ': 's',\n        'ޑ': 'd',\n        'ޒ': 'z',\n        'ޓ': 't',\n        'ޔ': 'y',\n        'ޕ': 'p',\n        'ޖ': 'j',\n        'ޗ': 'ch',\n        'ޘ': 'tt',\n        'ޙ': 'hh',\n        'ޚ': 'kh',\n        'ޛ': 'th',\n        'ޜ': 'z',\n        'ޝ': 'sh',\n        'ޞ': 's',\n        'ޟ': 'd',\n        'ޠ': 't',\n        'ޡ': 'z',\n        'ޢ': 'a',\n        'ޣ': 'gh',\n        'ޤ': 'q',\n        'ޥ': 'w',\n        'ަ': 'a',\n        'ާ': 'aa',\n        'ި': 'i',\n        'ީ': 'ee',\n        'ު': 'u',\n        'ޫ': 'oo',\n        'ެ': 'e',\n        'ޭ': 'ey',\n        'ޮ': 'o',\n        'ޯ': 'oa',\n        'ް': '',\n\n        // Georgian https://en.wikipedia.org/wiki/Romanization_of_Georgian\n        // National system (2002)\n        'ა': 'a',\n        'ბ': 'b',\n        'გ': 'g',\n        'დ': 'd',\n        'ე': 'e',\n        'ვ': 'v',\n        'ზ': 'z',\n        'თ': 't',\n        'ი': 'i',\n        'კ': 'k',\n        'ლ': 'l',\n        'მ': 'm',\n        'ნ': 'n',\n        'ო': 'o',\n        'პ': 'p',\n        'ჟ': 'zh',\n        'რ': 'r',\n        'ს': 's',\n        'ტ': 't',\n        'უ': 'u',\n        'ფ': 'p',\n        'ქ': 'k',\n        'ღ': 'gh',\n        'ყ': 'q',\n        'შ': 'sh',\n        'ჩ': 'ch',\n        'ც': 'ts',\n        'ძ': 'dz',\n        'წ': 'ts',\n        'ჭ': 'ch',\n        'ხ': 'kh',\n        'ჯ': 'j',\n        'ჰ': 'h',\n\n        // Greek\n        'α': 'a',\n        'β': 'v',\n        'γ': 'g',\n        'δ': 'd',\n        'ε': 'e',\n        'ζ': 'z',\n        'η': 'i',\n        'θ': 'th',\n        'ι': 'i',\n        'κ': 'k',\n        'λ': 'l',\n        'μ': 'm',\n        'ν': 'n',\n        'ξ': 'ks',\n        'ο': 'o',\n        'π': 'p',\n        'ρ': 'r',\n        'σ': 's',\n        'τ': 't',\n        'υ': 'y',\n        'φ': 'f',\n        'χ': 'x',\n        'ψ': 'ps',\n        'ω': 'o',\n        'ά': 'a',\n        'έ': 'e',\n        'ί': 'i',\n        'ό': 'o',\n        'ύ': 'y',\n        'ή': 'i',\n        'ώ': 'o',\n        'ς': 's',\n        'ϊ': 'i',\n        'ΰ': 'y',\n        'ϋ': 'y',\n        'ΐ': 'i',\n        'Α': 'A',\n        'Β': 'B',\n        'Γ': 'G',\n        'Δ': 'D',\n        'Ε': 'E',\n        'Ζ': 'Z',\n        'Η': 'I',\n        'Θ': 'TH',\n        'Ι': 'I',\n        'Κ': 'K',\n        'Λ': 'L',\n        'Μ': 'M',\n        'Ν': 'N',\n        'Ξ': 'KS',\n        'Ο': 'O',\n        'Π': 'P',\n        'Ρ': 'R',\n        'Σ': 'S',\n        'Τ': 'T',\n        'Υ': 'Y',\n        'Φ': 'F',\n        'Χ': 'X',\n        'Ψ': 'PS',\n        'Ω': 'O',\n        'Ά': 'A',\n        'Έ': 'E',\n        'Ί': 'I',\n        'Ό': 'O',\n        'Ύ': 'Y',\n        'Ή': 'I',\n        'Ώ': 'O',\n        'Ϊ': 'I',\n        'Ϋ': 'Y',\n\n        // Latvian\n        'ā': 'a',\n        // 'č': 'c', // duplicate\n        'ē': 'e',\n        'ģ': 'g',\n        'ī': 'i',\n        'ķ': 'k',\n        'ļ': 'l',\n        'ņ': 'n',\n        // 'š': 's', // duplicate\n        'ū': 'u',\n        // 'ž': 'z', // duplicate\n        'Ā': 'A',\n        // 'Č': 'C', // duplicate\n        'Ē': 'E',\n        'Ģ': 'G',\n        'Ī': 'I',\n        'Ķ': 'k',\n        'Ļ': 'L',\n        'Ņ': 'N',\n        // 'Š': 'S', // duplicate\n        'Ū': 'U',\n        // 'Ž': 'Z', // duplicate\n\n        // Macedonian\n        'Ќ': 'Kj',\n        'ќ': 'kj',\n        'Љ': 'Lj',\n        'љ': 'lj',\n        'Њ': 'Nj',\n        'њ': 'nj',\n        'Тс': 'Ts',\n        'тс': 'ts',\n\n        // Polish\n        'ą': 'a',\n        'ć': 'c',\n        'ę': 'e',\n        'ł': 'l',\n        'ń': 'n',\n        // 'ó': 'o', // duplicate\n        'ś': 's',\n        'ź': 'z',\n        'ż': 'z',\n        'Ą': 'A',\n        'Ć': 'C',\n        'Ę': 'E',\n        'Ł': 'L',\n        'Ń': 'N',\n        'Ś': 'S',\n        'Ź': 'Z',\n        'Ż': 'Z',\n\n        // Ukranian\n        'Є': 'Ye',\n        'І': 'I',\n        'Ї': 'Yi',\n        'Ґ': 'G',\n        'є': 'ye',\n        'і': 'i',\n        'ї': 'yi',\n        'ґ': 'g',\n\n        // Romanian\n        'ă': 'a',\n        'Ă': 'A',\n        'ș': 's',\n        'Ș': 'S',\n        // 'ş': 's', // duplicate\n        // 'Ş': 'S', // duplicate\n        'ț': 't',\n        'Ț': 'T',\n        'ţ': 't',\n        'Ţ': 'T',\n\n        // Russian https://en.wikipedia.org/wiki/Romanization_of_Russian\n        // ICAO\n\n        'а': 'a',\n        'б': 'b',\n        'в': 'v',\n        'г': 'g',\n        'д': 'd',\n        'е': 'e',\n        'ё': 'yo',\n        'ж': 'zh',\n        'з': 'z',\n        'и': 'i',\n        'й': 'i',\n        'к': 'k',\n        'л': 'l',\n        'м': 'm',\n        'н': 'n',\n        'о': 'o',\n        'п': 'p',\n        'р': 'r',\n        'с': 's',\n        'т': 't',\n        'у': 'u',\n        'ф': 'f',\n        'х': 'kh',\n        'ц': 'c',\n        'ч': 'ch',\n        'ш': 'sh',\n        'щ': 'sh',\n        'ъ': '',\n        'ы': 'y',\n        'ь': '',\n        'э': 'e',\n        'ю': 'yu',\n        'я': 'ya',\n        'А': 'A',\n        'Б': 'B',\n        'В': 'V',\n        'Г': 'G',\n        'Д': 'D',\n        'Е': 'E',\n        'Ё': 'Yo',\n        'Ж': 'Zh',\n        'З': 'Z',\n        'И': 'I',\n        'Й': 'I',\n        'К': 'K',\n        'Л': 'L',\n        'М': 'M',\n        'Н': 'N',\n        'О': 'O',\n        'П': 'P',\n        'Р': 'R',\n        'С': 'S',\n        'Т': 'T',\n        'У': 'U',\n        'Ф': 'F',\n        'Х': 'Kh',\n        'Ц': 'C',\n        'Ч': 'Ch',\n        'Ш': 'Sh',\n        'Щ': 'Sh',\n        'Ъ': '',\n        'Ы': 'Y',\n        'Ь': '',\n        'Э': 'E',\n        'Ю': 'Yu',\n        'Я': 'Ya',\n\n        // Serbian\n        'ђ': 'dj',\n        'ј': 'j',\n        // 'љ': 'lj',  // duplicate\n        // 'њ': 'nj', // duplicate\n        'ћ': 'c',\n        'џ': 'dz',\n        'Ђ': 'Dj',\n        'Ј': 'j',\n        // 'Љ': 'Lj', // duplicate\n        // 'Њ': 'Nj', // duplicate\n        'Ћ': 'C',\n        'Џ': 'Dz',\n\n        // Slovak\n        'ľ': 'l',\n        'ĺ': 'l',\n        'ŕ': 'r',\n        'Ľ': 'L',\n        'Ĺ': 'L',\n        'Ŕ': 'R',\n\n        // Turkish\n        'ş': 's',\n        'Ş': 'S',\n        'ı': 'i',\n        'İ': 'I',\n        // 'ç': 'c', // duplicate\n        // 'Ç': 'C', // duplicate\n        // 'ü': 'u', // duplicate, see langCharMap\n        // 'Ü': 'U', // duplicate, see langCharMap\n        // 'ö': 'o', // duplicate, see langCharMap\n        // 'Ö': 'O', // duplicate, see langCharMap\n        'ğ': 'g',\n        'Ğ': 'G',\n\n        // Vietnamese\n        'ả': 'a',\n        'Ả': 'A',\n        'ẳ': 'a',\n        'Ẳ': 'A',\n        'ẩ': 'a',\n        'Ẩ': 'A',\n        'đ': 'd',\n        'Đ': 'D',\n        'ẹ': 'e',\n        'Ẹ': 'E',\n        'ẽ': 'e',\n        'Ẽ': 'E',\n        'ẻ': 'e',\n        'Ẻ': 'E',\n        'ế': 'e',\n        'Ế': 'E',\n        'ề': 'e',\n        'Ề': 'E',\n        'ệ': 'e',\n        'Ệ': 'E',\n        'ễ': 'e',\n        'Ễ': 'E',\n        'ể': 'e',\n        'Ể': 'E',\n        'ỏ': 'o',\n        'ọ': 'o',\n        'Ọ': 'o',\n        'ố': 'o',\n        'Ố': 'O',\n        'ồ': 'o',\n        'Ồ': 'O',\n        'ổ': 'o',\n        'Ổ': 'O',\n        'ộ': 'o',\n        'Ộ': 'O',\n        'ỗ': 'o',\n        'Ỗ': 'O',\n        'ơ': 'o',\n        'Ơ': 'O',\n        'ớ': 'o',\n        'Ớ': 'O',\n        'ờ': 'o',\n        'Ờ': 'O',\n        'ợ': 'o',\n        'Ợ': 'O',\n        'ỡ': 'o',\n        'Ỡ': 'O',\n        'Ở': 'o',\n        'ở': 'o',\n        'ị': 'i',\n        'Ị': 'I',\n        'ĩ': 'i',\n        'Ĩ': 'I',\n        'ỉ': 'i',\n        'Ỉ': 'i',\n        'ủ': 'u',\n        'Ủ': 'U',\n        'ụ': 'u',\n        'Ụ': 'U',\n        'ũ': 'u',\n        'Ũ': 'U',\n        'ư': 'u',\n        'Ư': 'U',\n        'ứ': 'u',\n        'Ứ': 'U',\n        'ừ': 'u',\n        'Ừ': 'U',\n        'ự': 'u',\n        'Ự': 'U',\n        'ữ': 'u',\n        'Ữ': 'U',\n        'ử': 'u',\n        'Ử': 'ư',\n        'ỷ': 'y',\n        'Ỷ': 'y',\n        'ỳ': 'y',\n        'Ỳ': 'Y',\n        'ỵ': 'y',\n        'Ỵ': 'Y',\n        'ỹ': 'y',\n        'Ỹ': 'Y',\n        'ạ': 'a',\n        'Ạ': 'A',\n        'ấ': 'a',\n        'Ấ': 'A',\n        'ầ': 'a',\n        'Ầ': 'A',\n        'ậ': 'a',\n        'Ậ': 'A',\n        'ẫ': 'a',\n        'Ẫ': 'A',\n        // 'ă': 'a', // duplicate\n        // 'Ă': 'A', // duplicate\n        'ắ': 'a',\n        'Ắ': 'A',\n        'ằ': 'a',\n        'Ằ': 'A',\n        'ặ': 'a',\n        'Ặ': 'A',\n        'ẵ': 'a',\n        'Ẵ': 'A',\n\n        // symbols\n        '“': '\"',\n        '”': '\"',\n        '‘': \"'\",\n        '’': \"'\",\n        '∂': 'd',\n        'ƒ': 'f',\n        '™': '(TM)',\n        '©': '(C)',\n        'œ': 'oe',\n        'Œ': 'OE',\n        '®': '(R)',\n        '†': '+',\n        '℠': '(SM)',\n        '…': '...',\n        '˚': 'o',\n        'º': 'o',\n        'ª': 'a',\n        '•': '*',\n        '၊': ',',\n        '။': '.',\n\n        // currency\n        '$': 'USD',\n        '€': 'EUR',\n        '₢': 'BRN',\n        '₣': 'FRF',\n        '£': 'GBP',\n        '₤': 'ITL',\n        '₦': 'NGN',\n        '₧': 'ESP',\n        '₩': 'KRW',\n        '₪': 'ILS',\n        '₫': 'VND',\n        '₭': 'LAK',\n        '₮': 'MNT',\n        '₯': 'GRD',\n        '₱': 'ARS',\n        '₲': 'PYG',\n        '₳': 'ARA',\n        '₴': 'UAH',\n        '₵': 'GHS',\n        '¢': 'cent',\n        '¥': 'CNY',\n        '元': 'CNY',\n        '円': 'YEN',\n        '﷼': 'IRR',\n        '₠': 'EWE',\n        '฿': 'THB',\n        '₨': 'INR',\n        '₹': 'INR',\n        '₰': 'PF',\n        '₺': 'TRY',\n        '؋': 'AFN',\n        '₼': 'AZN',\n        'лв': 'BGN',\n        '៛': 'KHR',\n        '₡': 'CRC',\n        '₸': 'KZT',\n        'ден': 'MKD',\n        'zł': 'PLN',\n        '₽': 'RUB',\n        '₾': 'GEL'\n\n    };\n\n    /**\n     * special look ahead character array\n     * These characters form with consonants to become 'single'/consonant combo\n     * @type [Array]\n     */\n    var lookAheadCharArray = [\n        // burmese\n        '်',\n\n        // Dhivehi\n        'ް'\n    ];\n\n    /**\n     * diatricMap for languages where transliteration changes entirely as more diatrics are added\n     * @type {Object}\n     */\n    var diatricMap = {\n        // Burmese\n        // dependent vowels\n        'ာ': 'a',\n        'ါ': 'a',\n        'ေ': 'e',\n        'ဲ': 'e',\n        'ိ': 'i',\n        'ီ': 'i',\n        'ို': 'o',\n        'ု': 'u',\n        'ူ': 'u',\n        'ေါင်': 'aung',\n        'ော': 'aw',\n        'ော်': 'aw',\n        'ေါ': 'aw',\n        'ေါ်': 'aw',\n        '်': '်', // this is special case but the character will be converted to latin in the code\n        'က်': 'et',\n        'ိုက်': 'aik',\n        'ောက်': 'auk',\n        'င်': 'in',\n        'ိုင်': 'aing',\n        'ောင်': 'aung',\n        'စ်': 'it',\n        'ည်': 'i',\n        'တ်': 'at',\n        'ိတ်': 'eik',\n        'ုတ်': 'ok',\n        'ွတ်': 'ut',\n        'ေတ်': 'it',\n        'ဒ်': 'd',\n        'ိုဒ်': 'ok',\n        'ုဒ်': 'ait',\n        'န်': 'an',\n        'ာန်': 'an',\n        'ိန်': 'ein',\n        'ုန်': 'on',\n        'ွန်': 'un',\n        'ပ်': 'at',\n        'ိပ်': 'eik',\n        'ုပ်': 'ok',\n        'ွပ်': 'ut',\n        'န်ုပ်': 'nub',\n        'မ်': 'an',\n        'ိမ်': 'ein',\n        'ုမ်': 'on',\n        'ွမ်': 'un',\n        'ယ်': 'e',\n        'ိုလ်': 'ol',\n        'ဉ်': 'in',\n        'ံ': 'an',\n        'ိံ': 'ein',\n        'ုံ': 'on',\n\n        // Dhivehi\n        'ައް': 'ah',\n        'ަށް': 'ah'\n    };\n\n    /**\n     * langCharMap language specific characters translations\n     * @type   {Object}\n     */\n    var langCharMap = {\n        'en': {}, // default language\n\n        'az': { // Azerbaijani\n            'ç': 'c',\n            'ə': 'e',\n            'ğ': 'g',\n            'ı': 'i',\n            'ö': 'o',\n            'ş': 's',\n            'ü': 'u',\n            'Ç': 'C',\n            'Ə': 'E',\n            'Ğ': 'G',\n            'İ': 'I',\n            'Ö': 'O',\n            'Ş': 'S',\n            'Ü': 'U'\n        },\n\n        'cs': { // Czech\n            'č': 'c',\n            'ď': 'd',\n            'ě': 'e',\n            'ň': 'n',\n            'ř': 'r',\n            'š': 's',\n            'ť': 't',\n            'ů': 'u',\n            'ž': 'z',\n            'Č': 'C',\n            'Ď': 'D',\n            'Ě': 'E',\n            'Ň': 'N',\n            'Ř': 'R',\n            'Š': 'S',\n            'Ť': 'T',\n            'Ů': 'U',\n            'Ž': 'Z'\n        },\n\n        'fi': { // Finnish\n            // 'å': 'a', duplicate see charMap/latin\n            // 'Å': 'A', duplicate see charMap/latin\n            'ä': 'a', // ok\n            'Ä': 'A', // ok\n            'ö': 'o', // ok\n            'Ö': 'O' // ok\n        },\n\n        'hu': { // Hungarian\n            'ä': 'a', // ok\n            'Ä': 'A', // ok\n            // 'á': 'a', duplicate see charMap/latin\n            // 'Á': 'A', duplicate see charMap/latin\n            'ö': 'o', // ok\n            'Ö': 'O', // ok\n            // 'ő': 'o', duplicate see charMap/latin\n            // 'Ő': 'O', duplicate see charMap/latin\n            'ü': 'u',\n            'Ü': 'U',\n            'ű': 'u',\n            'Ű': 'U'\n        },\n\n        'lt': { // Lithuanian\n            'ą': 'a',\n            'č': 'c',\n            'ę': 'e',\n            'ė': 'e',\n            'į': 'i',\n            'š': 's',\n            'ų': 'u',\n            'ū': 'u',\n            'ž': 'z',\n            'Ą': 'A',\n            'Č': 'C',\n            'Ę': 'E',\n            'Ė': 'E',\n            'Į': 'I',\n            'Š': 'S',\n            'Ų': 'U',\n            'Ū': 'U'\n        },\n\n        'lv': { // Latvian\n            'ā': 'a',\n            'č': 'c',\n            'ē': 'e',\n            'ģ': 'g',\n            'ī': 'i',\n            'ķ': 'k',\n            'ļ': 'l',\n            'ņ': 'n',\n            'š': 's',\n            'ū': 'u',\n            'ž': 'z',\n            'Ā': 'A',\n            'Č': 'C',\n            'Ē': 'E',\n            'Ģ': 'G',\n            'Ī': 'i',\n            'Ķ': 'k',\n            'Ļ': 'L',\n            'Ņ': 'N',\n            'Š': 'S',\n            'Ū': 'u',\n            'Ž': 'Z'\n        },\n\n        'pl': { // Polish\n            'ą': 'a',\n            'ć': 'c',\n            'ę': 'e',\n            'ł': 'l',\n            'ń': 'n',\n            'ó': 'o',\n            'ś': 's',\n            'ź': 'z',\n            'ż': 'z',\n            'Ą': 'A',\n            'Ć': 'C',\n            'Ę': 'e',\n            'Ł': 'L',\n            'Ń': 'N',\n            'Ó': 'O',\n            'Ś': 'S',\n            'Ź': 'Z',\n            'Ż': 'Z'\n        },\n\n        'sk': { // Slovak\n            'ä': 'a',\n            'Ä': 'A'\n        },\n\n        'sr': { // Serbian\n            'љ': 'lj',\n            'њ': 'nj',\n            'Љ': 'Lj',\n            'Њ': 'Nj',\n            'đ': 'dj',\n            'Đ': 'Dj'\n        },\n\n        'tr': { // Turkish\n            'Ü': 'U',\n            'Ö': 'O',\n            'ü': 'u',\n            'ö': 'o'\n        }\n    };\n\n    /**\n     * symbolMap language specific symbol translations\n     * translations must be transliterated already\n     * @type   {Object}\n     */\n    var symbolMap = {\n        'ar': {\n            '∆': 'delta',\n            '∞': 'la-nihaya',\n            '♥': 'hob',\n            '&': 'wa',\n            '|': 'aw',\n            '<': 'aqal-men',\n            '>': 'akbar-men',\n            '∑': 'majmou',\n            '¤': 'omla'\n        },\n\n        'az': {},\n\n        'ca': {\n            '∆': 'delta',\n            '∞': 'infinit',\n            '♥': 'amor',\n            '&': 'i',\n            '|': 'o',\n            '<': 'menys que',\n            '>': 'mes que',\n            '∑': 'suma dels',\n            '¤': 'moneda'\n        },\n\n        'cs': {\n            '∆': 'delta',\n            '∞': 'nekonecno',\n            '♥': 'laska',\n            '&': 'a',\n            '|': 'nebo',\n            '<': 'mensi nez',\n            '>': 'vetsi nez',\n            '∑': 'soucet',\n            '¤': 'mena'\n        },\n\n        'de': {\n            '∆': 'delta',\n            '∞': 'unendlich',\n            '♥': 'Liebe',\n            '&': 'und',\n            '|': 'oder',\n            '<': 'kleiner als',\n            '>': 'groesser als',\n            '∑': 'Summe von',\n            '¤': 'Waehrung'\n        },\n\n        'dv': {\n            '∆': 'delta',\n            '∞': 'kolunulaa',\n            '♥': 'loabi',\n            '&': 'aai',\n            '|': 'noonee',\n            '<': 'ah vure kuda',\n            '>': 'ah vure bodu',\n            '∑': 'jumula',\n            '¤': 'faisaa'\n        },\n\n        'en': {\n            '∆': 'delta',\n            '∞': 'infinity',\n            '♥': 'love',\n            '&': 'and',\n            '|': 'or',\n            '<': 'less than',\n            '>': 'greater than',\n            '∑': 'sum',\n            '¤': 'currency'\n        },\n\n        'es': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amor',\n            '&': 'y',\n            '|': 'u',\n            '<': 'menos que',\n            '>': 'mas que',\n            '∑': 'suma de los',\n            '¤': 'moneda'\n        },\n\n        'fa': {\n            '∆': 'delta',\n            '∞': 'bi-nahayat',\n            '♥': 'eshgh',\n            '&': 'va',\n            '|': 'ya',\n            '<': 'kamtar-az',\n            '>': 'bishtar-az',\n            '∑': 'majmooe',\n            '¤': 'vahed'\n        },\n\n        'fi': {\n            '∆': 'delta',\n            '∞': 'aarettomyys',\n            '♥': 'rakkaus',\n            '&': 'ja',\n            '|': 'tai',\n            '<': 'pienempi kuin',\n            '>': 'suurempi kuin',\n            '∑': 'summa',\n            '¤': 'valuutta'\n        },\n\n        'fr': {\n            '∆': 'delta',\n            '∞': 'infiniment',\n            '♥': 'Amour',\n            '&': 'et',\n            '|': 'ou',\n            '<': 'moins que',\n            '>': 'superieure a',\n            '∑': 'somme des',\n            '¤': 'monnaie'\n        },\n\n        'ge': {\n            '∆': 'delta',\n            '∞': 'usasruloba',\n            '♥': 'siqvaruli',\n            '&': 'da',\n            '|': 'an',\n            '<': 'naklebi',\n            '>': 'meti',\n            '∑': 'jami',\n            '¤': 'valuta'\n        },\n\n        'gr': {},\n\n        'hu': {\n            '∆': 'delta',\n            '∞': 'vegtelen',\n            '♥': 'szerelem',\n            '&': 'es',\n            '|': 'vagy',\n            '<': 'kisebb mint',\n            '>': 'nagyobb mint',\n            '∑': 'szumma',\n            '¤': 'penznem'\n        },\n\n        'it': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amore',\n            '&': 'e',\n            '|': 'o',\n            '<': 'minore di',\n            '>': 'maggiore di',\n            '∑': 'somma',\n            '¤': 'moneta'\n        },\n\n        'lt': {\n            '∆': 'delta',\n            '∞': 'begalybe',\n            '♥': 'meile',\n            '&': 'ir',\n            '|': 'ar',\n            '<': 'maziau nei',\n            '>': 'daugiau nei',\n            '∑': 'suma',\n            '¤': 'valiuta'\n        },\n\n        'lv': {\n            '∆': 'delta',\n            '∞': 'bezgaliba',\n            '♥': 'milestiba',\n            '&': 'un',\n            '|': 'vai',\n            '<': 'mazak neka',\n            '>': 'lielaks neka',\n            '∑': 'summa',\n            '¤': 'valuta'\n        },\n\n        'my': {\n            '∆': 'kwahkhyaet',\n            '∞': 'asaonasme',\n            '♥': 'akhyait',\n            '&': 'nhin',\n            '|': 'tho',\n            '<': 'ngethaw',\n            '>': 'kyithaw',\n            '∑': 'paungld',\n            '¤': 'ngwekye'\n        },\n\n        'mk': {},\n\n        'nl': {\n            '∆': 'delta',\n            '∞': 'oneindig',\n            '♥': 'liefde',\n            '&': 'en',\n            '|': 'of',\n            '<': 'kleiner dan',\n            '>': 'groter dan',\n            '∑': 'som',\n            '¤': 'valuta'\n        },\n\n        'pl': {\n            '∆': 'delta',\n            '∞': 'nieskonczonosc',\n            '♥': 'milosc',\n            '&': 'i',\n            '|': 'lub',\n            '<': 'mniejsze niz',\n            '>': 'wieksze niz',\n            '∑': 'suma',\n            '¤': 'waluta'\n        },\n\n        'pt': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amor',\n            '&': 'e',\n            '|': 'ou',\n            '<': 'menor que',\n            '>': 'maior que',\n            '∑': 'soma',\n            '¤': 'moeda'\n        },\n\n        'ro': {\n            '∆': 'delta',\n            '∞': 'infinit',\n            '♥': 'dragoste',\n            '&': 'si',\n            '|': 'sau',\n            '<': 'mai mic ca',\n            '>': 'mai mare ca',\n            '∑': 'suma',\n            '¤': 'valuta'\n        },\n\n        'ru': {\n            '∆': 'delta',\n            '∞': 'beskonechno',\n            '♥': 'lubov',\n            '&': 'i',\n            '|': 'ili',\n            '<': 'menshe',\n            '>': 'bolshe',\n            '∑': 'summa',\n            '¤': 'valjuta'\n        },\n\n        'sk': {\n            '∆': 'delta',\n            '∞': 'nekonecno',\n            '♥': 'laska',\n            '&': 'a',\n            '|': 'alebo',\n            '<': 'menej ako',\n            '>': 'viac ako',\n            '∑': 'sucet',\n            '¤': 'mena'\n        },\n\n        'sr': {},\n\n        'tr': {\n            '∆': 'delta',\n            '∞': 'sonsuzluk',\n            '♥': 'ask',\n            '&': 've',\n            '|': 'veya',\n            '<': 'kucuktur',\n            '>': 'buyuktur',\n            '∑': 'toplam',\n            '¤': 'para birimi'\n        },\n\n        'uk': {\n            '∆': 'delta',\n            '∞': 'bezkinechnist',\n            '♥': 'lubov',\n            '&': 'i',\n            '|': 'abo',\n            '<': 'menshe',\n            '>': 'bilshe',\n            '∑': 'suma',\n            '¤': 'valjuta'\n        },\n\n        'vn': {\n            '∆': 'delta',\n            '∞': 'vo cuc',\n            '♥': 'yeu',\n            '&': 'va',\n            '|': 'hoac',\n            '<': 'nho hon',\n            '>': 'lon hon',\n            '∑': 'tong',\n            '¤': 'tien te'\n        }\n    };\n\n    var uricChars = [';', '?', ':', '@', '&', '=', '+', '$', ',', '/'].join('');\n\n    var uricNoSlashChars = [';', '?', ':', '@', '&', '=', '+', '$', ','].join('');\n\n    var markChars = ['.', '!', '~', '*', \"'\", '(', ')'].join('');\n\n    /**\n     * getSlug\n     * @param  {string} input input string\n     * @param  {object|string} opts config object or separator string/char\n     * @api    public\n     * @return {string}  sluggified string\n     */\n    var getSlug = function getSlug(input, opts) {\n        var separator = '-';\n        var result = '';\n        var diatricString = '';\n        var convertSymbols = true;\n        var customReplacements = {};\n        var maintainCase;\n        var titleCase;\n        var truncate;\n        var uricFlag;\n        var uricNoSlashFlag;\n        var markFlag;\n        var symbol;\n        var langChar;\n        var lucky;\n        var i;\n        var ch;\n        var l;\n        var lastCharWasSymbol;\n        var lastCharWasDiatric;\n        var allowedChars = '';\n\n        if (typeof input !== 'string') {\n            return '';\n        }\n\n        if (typeof opts === 'string') {\n            separator = opts;\n        }\n\n        symbol = symbolMap.en;\n        langChar = langCharMap.en;\n\n        if (typeof opts === 'object') {\n            maintainCase = opts.maintainCase || false;\n            customReplacements = (opts.custom && typeof opts.custom === 'object') ? opts.custom : customReplacements;\n            truncate = (+opts.truncate > 1 && opts.truncate) || false;\n            uricFlag = opts.uric || false;\n            uricNoSlashFlag = opts.uricNoSlash || false;\n            markFlag = opts.mark || false;\n            convertSymbols = (opts.symbols === false || opts.lang === false) ? false : true;\n            separator = opts.separator || separator;\n\n            if (uricFlag) {\n                allowedChars += uricChars;\n            }\n\n            if (uricNoSlashFlag) {\n                allowedChars += uricNoSlashChars;\n            }\n\n            if (markFlag) {\n                allowedChars += markChars;\n            }\n\n            symbol = (opts.lang && symbolMap[opts.lang] && convertSymbols) ?\n                symbolMap[opts.lang] : (convertSymbols ? symbolMap.en : {});\n\n            langChar = (opts.lang && langCharMap[opts.lang]) ?\n                langCharMap[opts.lang] :\n                opts.lang === false || opts.lang === true ? {} : langCharMap.en;\n\n            // if titleCase config is an Array, rewrite to object format\n            if (opts.titleCase && typeof opts.titleCase.length === 'number' && Array.prototype.toString.call(opts.titleCase)) {\n                opts.titleCase.forEach(function (v) {\n                    customReplacements[v + ''] = v + '';\n                });\n\n                titleCase = true;\n            } else {\n                titleCase = !!opts.titleCase;\n            }\n\n            // if custom config is an Array, rewrite to object format\n            if (opts.custom && typeof opts.custom.length === 'number' && Array.prototype.toString.call(opts.custom)) {\n                opts.custom.forEach(function (v) {\n                    customReplacements[v + ''] = v + '';\n                });\n            }\n\n            // custom replacements\n            Object.keys(customReplacements).forEach(function (v) {\n                var r;\n\n                if (v.length > 1) {\n                    r = new RegExp('\\\\b' + escapeChars(v) + '\\\\b', 'gi');\n                } else {\n                    r = new RegExp(escapeChars(v), 'gi');\n                }\n\n                input = input.replace(r, customReplacements[v]);\n            });\n\n            // add all custom replacement to allowed charlist\n            for (ch in customReplacements) {\n                allowedChars += ch;\n            }\n        }\n\n        allowedChars += separator;\n\n        // escape all necessary chars\n        allowedChars = escapeChars(allowedChars);\n\n        // trim whitespaces\n        input = input.replace(/(^\\s+|\\s+$)/g, '');\n\n        lastCharWasSymbol = false;\n        lastCharWasDiatric = false;\n\n        for (i = 0, l = input.length; i < l; i++) {\n            ch = input[i];\n\n            if (isReplacedCustomChar(ch, customReplacements)) {\n                // don't convert a already converted char\n                lastCharWasSymbol = false;\n            } else if (langChar[ch]) {\n                // process language specific diactrics chars conversion\n                ch = lastCharWasSymbol && langChar[ch].match(/[A-Za-z0-9]/) ? ' ' + langChar[ch] : langChar[ch];\n\n                lastCharWasSymbol = false;\n            } else if (ch in charMap) {\n                // the transliteration changes entirely when some special characters are added\n                if (i + 1 < l && lookAheadCharArray.indexOf(input[i + 1]) >= 0) {\n                    diatricString += ch;\n                    ch = '';\n                } else if (lastCharWasDiatric === true) {\n                    ch = diatricMap[diatricString] + charMap[ch];\n                    diatricString = '';\n                } else {\n                    // process diactrics chars\n                    ch = lastCharWasSymbol && charMap[ch].match(/[A-Za-z0-9]/) ? ' ' + charMap[ch] : charMap[ch];\n                }\n\n                lastCharWasSymbol = false;\n                lastCharWasDiatric = false;\n            } else if (ch in diatricMap) {\n                diatricString += ch;\n                ch = '';\n                // end of string, put the whole meaningful word\n                if (i === l - 1) {\n                    ch = diatricMap[diatricString];\n                }\n                lastCharWasDiatric = true;\n            } else if (\n                // process symbol chars\n                symbol[ch] && !(uricFlag && uricChars\n                    .indexOf(ch) !== -1) && !(uricNoSlashFlag && uricNoSlashChars\n                    // .indexOf(ch) !== -1) && !(markFlag && markChars\n                    .indexOf(ch) !== -1)) {\n                ch = lastCharWasSymbol || result.substr(-1).match(/[A-Za-z0-9]/) ? separator + symbol[ch] : symbol[ch];\n                ch += input[i + 1] !== void 0 && input[i + 1].match(/[A-Za-z0-9]/) ? separator : '';\n\n                lastCharWasSymbol = true;\n            } else {\n                if (lastCharWasDiatric === true) {\n                    ch = diatricMap[diatricString] + ch;\n                    diatricString = '';\n                    lastCharWasDiatric = false;\n                } else if (lastCharWasSymbol && (/[A-Za-z0-9]/.test(ch) || result.substr(-1).match(/A-Za-z0-9]/))) {\n                    // process latin chars\n                    ch = ' ' + ch;\n                }\n                lastCharWasSymbol = false;\n            }\n\n            // add allowed chars\n            result += ch.replace(new RegExp('[^\\\\w\\\\s' + allowedChars + '_-]', 'g'), separator);\n        }\n\n        if (titleCase) {\n            result = result.replace(/(\\w)(\\S*)/g, function (_, i, r) {\n                var j = i.toUpperCase() + (r !== null ? r : '');\n                return (Object.keys(customReplacements).indexOf(j.toLowerCase()) < 0) ? j : j.toLowerCase();\n            });\n        }\n\n        // eliminate duplicate separators\n        // add separator\n        // trim separators from start and end\n        result = result.replace(/\\s+/g, separator)\n            .replace(new RegExp('\\\\' + separator + '+', 'g'), separator)\n            .replace(new RegExp('(^\\\\' + separator + '+|\\\\' + separator + '+$)', 'g'), '');\n\n        if (truncate && result.length > truncate) {\n            lucky = result.charAt(truncate) === separator;\n            result = result.slice(0, truncate);\n\n            if (!lucky) {\n                result = result.slice(0, result.lastIndexOf(separator));\n            }\n        }\n\n        if (!maintainCase && !titleCase) {\n            result = result.toLowerCase();\n        }\n\n        return result;\n    };\n\n    /**\n     * createSlug curried(opts)(input)\n     * @param   {object|string} opts config object or input string\n     * @return  {Function} function getSlugWithConfig()\n     **/\n    var createSlug = function createSlug(opts) {\n\n        /**\n         * getSlugWithConfig\n         * @param   {string} input string\n         * @return  {string} slug string\n         */\n        return function getSlugWithConfig(input) {\n            return getSlug(input, opts);\n        };\n    };\n\n    /**\n     * escape Chars\n     * @param   {string} input string\n     */\n    var escapeChars = function escapeChars(input) {\n        return input.replace(/[-\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n    };\n\n    /**\n     * check if the char is an already converted char from custom list\n     * @param   {char} ch character to check\n     * @param   {object} customReplacements custom translation map\n     */\n    var isReplacedCustomChar = function (ch, customReplacements) {\n        for (var c in customReplacements) {\n            if (customReplacements[c] === ch) {\n                return true;\n            }\n        }\n    };\n\n    if (typeof module !== 'undefined' && module.exports) {\n\n        // export functions for use in Node\n        module.exports = getSlug;\n        module.exports.createSlug = createSlug;\n    } else if (typeof define !== 'undefined' && define.amd) {\n\n        // export function for use in AMD\n        define([], function () {\n            return getSlug;\n        });\n    } else {\n\n        // don't overwrite global if exists\n        try {\n            if (root.getSlug || root.createSlug) {\n                throw 'speakingurl: globals exists /(getSlug|createSlug)/';\n            } else {\n                root.getSlug = getSlug;\n                root.createSlug = createSlug;\n            }\n        } catch (e) {}\n    }\n})(this);","( function( window, undefined ) {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * Handles managing all events for whatever you plug it into. Priorities for hooks are based on lowest to highest in\r\n\t * that, lowest priority hooks are fired first.\r\n\t */\r\n\tvar EventManager = function() {\r\n\t\tvar slice = Array.prototype.slice;\r\n\t\t\r\n\t\t/**\r\n\t\t * Maintain a reference to the object scope so our public methods never get confusing.\r\n\t\t */\r\n\t\tvar MethodsAvailable = {\r\n\t\t\tremoveFilter : removeFilter,\r\n\t\t\tapplyFilters : applyFilters,\r\n\t\t\taddFilter : addFilter,\r\n\t\t\tremoveAction : removeAction,\r\n\t\t\tdoAction : doAction,\r\n\t\t\taddAction : addAction\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Contains the hooks that get registered with this EventManager. The array for storage utilizes a \"flat\"\r\n\t\t * object literal such that looking up the hook utilizes the native object literal hash.\r\n\t\t */\r\n\t\tvar STORAGE = {\r\n\t\t\tactions : {},\r\n\t\t\tfilters : {}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Adds an action to the event manager.\r\n\t\t *\r\n\t\t * @param action Must contain namespace.identifier\r\n\t\t * @param callback Must be a valid callback function before this action is added\r\n\t\t * @param [priority=10] Used to control when the function is executed in relation to other callbacks bound to the same hook\r\n\t\t * @param [context] Supply a value to be used for this\r\n\t\t */\r\n\t\tfunction addAction( action, callback, priority, context ) {\r\n\t\t\tif( typeof action === 'string' && typeof callback === 'function' ) {\r\n\t\t\t\tpriority = parseInt( ( priority || 10 ), 10 );\r\n\t\t\t\t_addHook( 'actions', action, callback, priority, context );\r\n\t\t\t}\r\n\r\n\t\t\treturn MethodsAvailable;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Performs an action if it exists. You can pass as many arguments as you want to this function; the only rule is\r\n\t\t * that the first argument must always be the action.\r\n\t\t */\r\n\t\tfunction doAction( /* action, arg1, arg2, ... */ ) {\r\n\t\t\tvar args = slice.call( arguments );\r\n\t\t\tvar action = args.shift();\r\n\r\n\t\t\tif( typeof action === 'string' ) {\r\n\t\t\t\t_runHook( 'actions', action, args );\r\n\t\t\t}\r\n\r\n\t\t\treturn MethodsAvailable;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Removes the specified action if it contains a namespace.identifier & exists.\r\n\t\t *\r\n\t\t * @param action The action to remove\r\n\t\t * @param [callback] Callback function to remove\r\n\t\t */\r\n\t\tfunction removeAction( action, callback ) {\r\n\t\t\tif( typeof action === 'string' ) {\r\n\t\t\t\t_removeHook( 'actions', action, callback );\r\n\t\t\t}\r\n\r\n\t\t\treturn MethodsAvailable;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Adds a filter to the event manager.\r\n\t\t *\r\n\t\t * @param filter Must contain namespace.identifier\r\n\t\t * @param callback Must be a valid callback function before this action is added\r\n\t\t * @param [priority=10] Used to control when the function is executed in relation to other callbacks bound to the same hook\r\n\t\t * @param [context] Supply a value to be used for this\r\n\t\t */\r\n\t\tfunction addFilter( filter, callback, priority, context ) {\r\n\t\t\tif( typeof filter === 'string' && typeof callback === 'function' ) {\r\n\t\t\t\tpriority = parseInt( ( priority || 10 ), 10 );\r\n\t\t\t\t_addHook( 'filters', filter, callback, priority, context );\r\n\t\t\t}\r\n\r\n\t\t\treturn MethodsAvailable;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Performs a filter if it exists. You should only ever pass 1 argument to be filtered. The only rule is that\r\n\t\t * the first argument must always be the filter.\r\n\t\t */\r\n\t\tfunction applyFilters( /* filter, filtered arg, arg2, ... */ ) {\r\n\t\t\tvar args = slice.call( arguments );\r\n\t\t\tvar filter = args.shift();\r\n\r\n\t\t\tif( typeof filter === 'string' ) {\r\n\t\t\t\treturn _runHook( 'filters', filter, args );\r\n\t\t\t}\r\n\r\n\t\t\treturn MethodsAvailable;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Removes the specified filter if it contains a namespace.identifier & exists.\r\n\t\t *\r\n\t\t * @param filter The action to remove\r\n\t\t * @param [callback] Callback function to remove\r\n\t\t */\r\n\t\tfunction removeFilter( filter, callback ) {\r\n\t\t\tif( typeof filter === 'string') {\r\n\t\t\t\t_removeHook( 'filters', filter, callback );\r\n\t\t\t}\r\n\r\n\t\t\treturn MethodsAvailable;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Removes the specified hook by resetting the value of it.\r\n\t\t *\r\n\t\t * @param type Type of hook, either 'actions' or 'filters'\r\n\t\t * @param hook The hook (namespace.identifier) to remove\r\n\t\t * @private\r\n\t\t */\r\n\t\tfunction _removeHook( type, hook, callback, context ) {\r\n\t\t\tvar handlers, handler, i;\r\n\t\t\t\r\n\t\t\tif ( !STORAGE[ type ][ hook ] ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ( !callback ) {\r\n\t\t\t\tSTORAGE[ type ][ hook ] = [];\r\n\t\t\t} else {\r\n\t\t\t\thandlers = STORAGE[ type ][ hook ];\r\n\t\t\t\tif ( !context ) {\r\n\t\t\t\t\tfor ( i = handlers.length; i--; ) {\r\n\t\t\t\t\t\tif ( handlers[i].callback === callback ) {\r\n\t\t\t\t\t\t\thandlers.splice( i, 1 );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfor ( i = handlers.length; i--; ) {\r\n\t\t\t\t\t\thandler = handlers[i];\r\n\t\t\t\t\t\tif ( handler.callback === callback && handler.context === context) {\r\n\t\t\t\t\t\t\thandlers.splice( i, 1 );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Adds the hook to the appropriate storage container\r\n\t\t *\r\n\t\t * @param type 'actions' or 'filters'\r\n\t\t * @param hook The hook (namespace.identifier) to add to our event manager\r\n\t\t * @param callback The function that will be called when the hook is executed.\r\n\t\t * @param priority The priority of this hook. Must be an integer.\r\n\t\t * @param [context] A value to be used for this\r\n\t\t * @private\r\n\t\t */\r\n\t\tfunction _addHook( type, hook, callback, priority, context ) {\r\n\t\t\tvar hookObject = {\r\n\t\t\t\tcallback : callback,\r\n\t\t\t\tpriority : priority,\r\n\t\t\t\tcontext : context\r\n\t\t\t};\r\n\r\n\t\t\t// Utilize 'prop itself' : http://jsperf.com/hasownproperty-vs-in-vs-undefined/19\r\n\t\t\tvar hooks = STORAGE[ type ][ hook ];\r\n\t\t\tif( hooks ) {\r\n\t\t\t\thooks.push( hookObject );\r\n\t\t\t\thooks = _hookInsertSort( hooks );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thooks = [ hookObject ];\r\n\t\t\t}\r\n\r\n\t\t\tSTORAGE[ type ][ hook ] = hooks;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Use an insert sort for keeping our hooks organized based on priority. This function is ridiculously faster\r\n\t\t * than bubble sort, etc: http://jsperf.com/javascript-sort\r\n\t\t *\r\n\t\t * @param hooks The custom array containing all of the appropriate hooks to perform an insert sort on.\r\n\t\t * @private\r\n\t\t */\r\n\t\tfunction _hookInsertSort( hooks ) {\r\n\t\t\tvar tmpHook, j, prevHook;\r\n\t\t\tfor( var i = 1, len = hooks.length; i < len; i++ ) {\r\n\t\t\t\ttmpHook = hooks[ i ];\r\n\t\t\t\tj = i;\r\n\t\t\t\twhile( ( prevHook = hooks[ j - 1 ] ) &&  prevHook.priority > tmpHook.priority ) {\r\n\t\t\t\t\thooks[ j ] = hooks[ j - 1 ];\r\n\t\t\t\t\t--j;\r\n\t\t\t\t}\r\n\t\t\t\thooks[ j ] = tmpHook;\r\n\t\t\t}\r\n\r\n\t\t\treturn hooks;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Runs the specified hook. If it is an action, the value is not modified but if it is a filter, it is.\r\n\t\t *\r\n\t\t * @param type 'actions' or 'filters'\r\n\t\t * @param hook The hook ( namespace.identifier ) to be ran.\r\n\t\t * @param args Arguments to pass to the action/filter. If it's a filter, args is actually a single parameter.\r\n\t\t * @private\r\n\t\t */\r\n\t\tfunction _runHook( type, hook, args ) {\r\n\t\t\tvar handlers = STORAGE[ type ][ hook ], i, len;\r\n\t\t\t\r\n\t\t\tif ( !handlers ) {\r\n\t\t\t\treturn (type === 'filters') ? args[0] : false;\r\n\t\t\t}\r\n\r\n\t\t\tlen = handlers.length;\r\n\t\t\tif ( type === 'filters' ) {\r\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\t\t\targs[ 0 ] = handlers[ i ].callback.apply( handlers[ i ].context, args );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\t\t\thandlers[ i ].callback.apply( handlers[ i ].context, args );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ( type === 'filters' ) ? args[ 0 ] : true;\r\n\t\t}\r\n\r\n\t\t// return all of the publicly available methods\r\n\t\treturn MethodsAvailable;\r\n\r\n\t};\r\n\t\r\n\t\r\n\twindow.hooksManager = window.hooksManager || new EventManager();\r\n\r\n} )( window );","(function ($) {\r\n    if (!Element.prototype.scrollIntoViewIfNeeded) {\r\n        Element.prototype.scrollIntoViewIfNeeded = function (centerIfNeeded) {\r\n            centerIfNeeded = arguments.length === 0 ? true : !!centerIfNeeded;\r\n\r\n            var parent = this.parentNode,\r\n                parentComputedStyle = window.getComputedStyle(parent, null),\r\n                parentBorderTopWidth = parseInt(parentComputedStyle.getPropertyValue('border-top-width')),\r\n                parentBorderLeftWidth = parseInt(parentComputedStyle.getPropertyValue('border-left-width')),\r\n                overTop = this.offsetTop - parent.offsetTop < parent.scrollTop,\r\n                overBottom = (this.offsetTop - parent.offsetTop + this.clientHeight - parentBorderTopWidth) > (parent.scrollTop + parent.clientHeight),\r\n                overLeft = this.offsetLeft - parent.offsetLeft < parent.scrollLeft,\r\n                overRight = (this.offsetLeft - parent.offsetLeft + this.clientWidth - parentBorderLeftWidth) > (parent.scrollLeft + parent.clientWidth),\r\n                alignWithTop = overTop && !overBottom;\r\n\r\n            if ((overTop || overBottom) && centerIfNeeded) {\r\n                parent.scrollTop = this.offsetTop - parent.offsetTop - parent.clientHeight / 2 - parentBorderTopWidth + this.clientHeight / 2;\r\n            }\r\n\r\n            if ((overLeft || overRight) && centerIfNeeded) {\r\n                parent.scrollLeft = this.offsetLeft - parent.offsetLeft - parent.clientWidth / 2 - parentBorderLeftWidth + this.clientWidth / 2;\r\n            }\r\n\r\n            if ((overTop || overBottom || overLeft || overRight) && !centerIfNeeded) {\r\n                this.scrollIntoView(alignWithTop);\r\n            }\r\n        };\r\n    }\r\n\r\n    $.fn.tagName = function () {\r\n        if (!this[0])\r\n            return null;\r\n        if (this[0] && this[0].nodeName) {\r\n            return this[0].nodeName.toLowerCase();\r\n        }\r\n        return null;\r\n    };\r\n\r\n    $.fn.insertAt = function (index, $parent) {\r\n        return this.each(function () {\r\n            if ($(this).parent().is($parent)) {\r\n                var siblings = $(this).siblings();\r\n                if (index < siblings.length) {\r\n                    siblings.eq(index).before(this);\r\n                } else {\r\n                    siblings.last().after(this);\r\n                }\r\n            } else {\r\n                if (index === 0 || !$parent.children().length) {\r\n                    $parent.prepend(this);\r\n                } else {\r\n                    if (index >= $parent.children().length) {\r\n                        $parent.append(this);\r\n                    } else {\r\n                        $parent.children().eq(index - 1).after(this);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    if (!NodeList.prototype.forEach) {\r\n        NodeList.prototype.forEach = Array.prototype.forEach;\r\n        HTMLCollection.prototype.forEach = Array.prototype.forEach; // Because of https://bugzilla.mozilla.org/show_bug.cgi?id=14869\r\n\r\n    }\r\n\r\n    if (!Array.from) {\r\n        Array.from = function (object) {\r\n            return [].slice.call(object);\r\n        };\r\n    }\r\n\r\n\r\n})(jQuery);\r\n\r\n(function ($, root) {\r\n\r\n    wp.customize.bind(\"save-request-params\", function (query) {\r\n        query.customize_post_id = CP_Customizer.preview.data().pageID;\r\n        if (CP_Customizer && CP_Customizer.hooks) {\r\n            query = CP_Customizer.hooks.applyFilters('save-request-params', query);\r\n        }\r\n        return query;\r\n    });\r\n\r\n    function translateCompanionString(text) {\r\n\r\n        if (!text || !_.isString(text)) {\r\n            return text;\r\n        }\r\n\r\n        if (root.__materialisCustomizerStrings[text] !== undefined) {\r\n            return root.__materialisCustomizerStrings[text];\r\n        } else {\r\n            //in debug mode\r\n            if (CP_Customizer.options('SCRIPT_DEBUG')) {\r\n                console.warn(\"[Not translated] \" + text);\r\n            }\r\n            return text;\r\n        }\r\n    }\r\n\r\n    var CP_Customizer = {\r\n            events: {\r\n                \"PREVIEW_LOADED\": \"PREVIEW_LOADED\",\r\n                \"ADD_FIXED_OVERLAYS\": \"ADD_FIXED_OVERLAYS\",\r\n                \"RIGHT_SECTION_CLOSED\": \"RIGHT_SECTION_CLOSED\",\r\n                \"ELEMENT_DECORATED\": \"ELEMENT_DECORATED\",\r\n                \"CONTENT_ROW_REMOVED\": \"CONTENT_ROW_REMOVED\",\r\n                \"DOCUMENT_READY\": \"DOCUMENT_READY\",\r\n                \"STATE_UPDATED\": \"STATE_UPDATED\",\r\n                \"FOCUS_CONTROL\": \"FOCUS_CONTROL\"\r\n            },\r\n\r\n            getSlug: window.getSlug,\r\n\r\n            wpApi: wp.customize,\r\n\r\n            MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER ? Number.MAX_SAFE_INTEGER : 9007199254740991,\r\n\r\n            hooks: window.hooksManager,\r\n\r\n            CONTENT_ELEMENTS: 'p,h1,h2,h3,h4,h5,h6,a,span,i,hr,img,ul,div.spacer',\r\n            TEXT_ELEMENTS: \"p,h1,h2,h3,h4,h5,h6,span\",\r\n            THEME_MOD_NODES: '[data-theme],[data-theme-src],[data-theme-mdi]',\r\n\r\n            translateCompanionString: translateCompanionString,\r\n\r\n            data: function () {\r\n                return root.cpCustomizerGlobal.pluginOptions.data;\r\n            },\r\n\r\n            addContentElementsSelectors: function (selectors) {\r\n                if (!_.isArray(selectors)) {\r\n                    selectors = [selectors]\r\n                }\r\n\r\n                this.CONTENT_ELEMENTS = this.CONTENT_ELEMENTS.split(',').concat(selectors).join(',')\r\n            },\r\n\r\n            IO: {\r\n                get: function (action, data) {\r\n                    return this.send({\r\n                        data: _.isObject(action) ? action : _.extend(data || {}, {action: action}),\r\n                        type: 'GET'\r\n                    });\r\n                },\r\n                post: function (action, data) {\r\n                    return this.send({\r\n                        data: _.isObject(action) ? action : _.extend(data || {}, {action: action})\r\n                    });\r\n                },\r\n\r\n\r\n                customGet: function (url, data) {\r\n                    data = _.isObject(data) ? data : {};\r\n                    var options = {\r\n                        type: \"GET\",\r\n                        data: data\r\n                    };\r\n\r\n\r\n                    return CP_Customizer.IO.customSend(url, options);\r\n                },\r\n                customPost: function (url, data) {\r\n                    data = _.isObject(data) ? data : {};\r\n                    var options = {\r\n                        type: \"POST\",\r\n                        data: data\r\n                    };\r\n\r\n                    return CP_Customizer.IO.customSend(url, options);\r\n                },\r\n\r\n                customSend: function (url, options) {\r\n\r\n                    options = _.defaults(options || {}, {\r\n                        type: 'POST',\r\n                        url: url\r\n                    });\r\n\r\n                    return CP_Customizer.IO.send(options);\r\n                },\r\n\r\n                rest: {\r\n                    get: function (route, data) {\r\n                        data = _.isObject(data) ? data : {};\r\n                        var options = {\r\n                            type: \"GET\",\r\n                            data: data\r\n                        };\r\n\r\n\r\n                        return CP_Customizer.IO.rest.send(route, options);\r\n                    },\r\n                    post: function (route, data) {\r\n                        data = _.isObject(data) ? data : {};\r\n                        var options = {\r\n                            type: \"POST\",\r\n                            data: data\r\n                        };\r\n\r\n                        return CP_Customizer.IO.rest.send(route, options);\r\n                    },\r\n\r\n                    send: function (route, options) {\r\n                        var url = CP_Customizer.options('restURL');\r\n\r\n                        options = _.defaults(options || {}, {\r\n                            type: 'POST',\r\n                            url: CP_Customizer.utils.phpTrim(url, '/') + \"/\" + CP_Customizer.utils.phpTrim(route, '/')\r\n                        });\r\n\r\n                        return CP_Customizer.IO.send(options);\r\n                    }\r\n                },\r\n\r\n                send: function (action, options) {\r\n                    var promise, deferred;\r\n                    if (_.isObject(action)) {\r\n                        options = action;\r\n                    } else {\r\n                        options = options || {};\r\n                        options.data = _.extend(options.data || {}, {action: action});\r\n                    }\r\n\r\n                    options = _.defaults(options || {}, {\r\n                        type: 'POST',\r\n                        url: wp.ajax.settings.url,\r\n                        context: this,\r\n                        _: Date.now(),\r\n                        xhrFields: {\r\n                            withCredentials: true\r\n                        }\r\n                    });\r\n\r\n                    deferred = $.Deferred(function (deferred) {\r\n                        // Transfer success/error callbacks.\r\n                        if (options.success)\r\n                            deferred.done(options.success);\r\n                        if (options.error)\r\n                            deferred.fail(options.error);\r\n\r\n                        delete options.success;\r\n                        delete options.error;\r\n\r\n                        deferred.jqXHR = $.ajax(options).done(function (response) {\r\n                            deferred.resolveWith(this, [response, deferred.jqXHR]);\r\n                        }).fail(function () {\r\n                            deferred.rejectWith(this, arguments);\r\n                        });\r\n                    });\r\n\r\n                    promise = deferred.promise();\r\n                    promise.abort = function () {\r\n                        deferred.jqXHR.abort();\r\n                        return this;\r\n                    };\r\n\r\n                    return promise;\r\n                }\r\n            },\r\n\r\n\r\n            options: function (key, defaultValue) {\r\n                var result = root.cpCustomizerGlobal.pluginOptions;\r\n\r\n                if (key) {\r\n                    var keyParts = key.split(':');\r\n                    for (var i = 0; i < keyParts.length; i++) {\r\n                        var part = keyParts[i];\r\n\r\n                        if (!_.isUndefined(result[part])) {\r\n                            result = result[part];\r\n                        } else {\r\n                            result = defaultValue;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n\r\n            __exportsCache: {},\r\n            getSectionExports: function (sectionId) {\r\n\r\n                if (sectionId.jquery) {\r\n                    sectionId = sectionId.attr('data-export-id');\r\n                }\r\n\r\n                if (this.__exportsCache[sectionId]) {\r\n                    return this.__exportsCache[sectionId];\r\n                }\r\n\r\n                var sectionData = CP_Customizer.options('data:sections', []).filter(function (s) {\r\n                    return s.id === sectionId\r\n                }).pop();\r\n\r\n                var modules = {},\r\n                    module = {},\r\n                    exports = {};\r\n\r\n                if (sectionData && sectionData.export) {\r\n                    try {\r\n                        eval(sectionData.export);\r\n\r\n                        if (!_.isUndefined(modules.export)) {\r\n                            exports = modules.export;\r\n                        } else {\r\n                            if (!_.isUndefined(module.exports)) {\r\n                                exports = module.exports;\r\n                            }\r\n                        }\r\n                    } catch (e) {\r\n                        console.warn('invalid section ' + sectionId + ' exports');\r\n                    }\r\n\r\n                }\r\n\r\n                this.__exportsCache[sectionId] = exports;\r\n                return exports || {};\r\n            },\r\n\r\n\r\n            slugPrefix: function () {\r\n                return root.cpCustomizerGlobal.pluginOptions.slugPrefix;\r\n            },\r\n\r\n\r\n            log: function (name, data, type) {\r\n\r\n                if (!CP_Customizer.options('SCRIPT_DEBUG', false) && !top.SCRIPT_DEBUG) {\r\n                    return;\r\n                }\r\n\r\n                type = type || 'log';\r\n\r\n                var colors = {\r\n                    'log': 'background-color:#03a9f4; color:#ffffff',\r\n                    'error': 'background-color:#ff0000; color:#ffffff'\r\n                };\r\n\r\n                if (!data) {\r\n                    data = 'NO DATA';\r\n                }\r\n\r\n                console.groupCollapsed('%c  ' + name + '  ', colors[type]);\r\n                console[type](data);\r\n                console.groupEnd();\r\n            },\r\n\r\n\r\n            logError: function (name, data) {\r\n                this.log(name, data, 'error');\r\n            },\r\n\r\n\r\n            bind: function (event, callback) {\r\n                this.on(event, callback, false);\r\n            },\r\n            unbind: function (event, callback) {\r\n                this.off(event, callback);\r\n            },\r\n\r\n            on: function (event, callback, async) {\r\n\r\n                event = event.split(' ').map(function (ev) {\r\n                    return 'cp_customizer.' + ev;\r\n                }).join(' ');\r\n\r\n                if (async) {\r\n                    var originalCallback = callback;\r\n\r\n                    callback = function () {\r\n                        var args = Array.from(arguments);\r\n                        var cb = this.callback;\r\n\r\n                        setTimeout(function () {\r\n                            cb.apply(this, args);\r\n                        }, 0);\r\n\r\n                    }.bind({\r\n                        callback: originalCallback\r\n                    });\r\n                }\r\n\r\n                $(window).bind(event, callback);\r\n            },\r\n\r\n            off: function (event, callback) {\r\n                event = event.split(' ').map(function (ev) {\r\n                    return 'cp_customizer.' + ev;\r\n                }).join(' ');\r\n                $(window).unbind(event, callback);\r\n            },\r\n\r\n            one: function (event, callback) {\r\n                event = event.split(' ').map(function (ev) {\r\n                    return 'cp_customizer.' + ev;\r\n                }).join(' ');\r\n                $(window).one(event, callback);\r\n            },\r\n\r\n\r\n            trigger: function (event, data) {\r\n                $(window).trigger('cp_customizer.' + event, data);\r\n            },\r\n\r\n            showLoader: function () {\r\n                $('div#cp-full-screen-loader').addClass('active');\r\n                jQuery('select').each(function () {\r\n                    var $select = $(this);\r\n                    if ($select.data() && $select.data().selectize) {\r\n                        $select.data().selectize.blur();\r\n                    }\r\n                });\r\n            },\r\n\r\n            hideLoader: function () {\r\n                $('div#cp-full-screen-loader').removeClass('active');\r\n            },\r\n\r\n            jsTPL: {},\r\n\r\n            __containerDataHandlers: {},\r\n\r\n            addContainerDataHandler: function (selector, getter, setter) {\r\n                this.__containerDataHandlers[selector] = {\r\n                    getter: getter,\r\n                    setter: setter\r\n                };\r\n            },\r\n\r\n            __containerDataFilters: [],\r\n\r\n            addContainerDataFilter: function (callback) {\r\n                this.__containerDataFilters.push(callback);\r\n            },\r\n\r\n\r\n            __modules: [],\r\n            __modulesLoaded: false,\r\n            addModule: function (callback) {\r\n                var self = this;\r\n\r\n                if (this.__modulesLoaded) {\r\n                    callback(this);\r\n                } else {\r\n                    this.__modules.push(callback);\r\n                }\r\n            },\r\n\r\n            popUp: function (title, elementID, data) {\r\n                var selector = \"#TB_inline?inlineId=\" + elementID;\r\n                var query = [];\r\n\r\n\r\n                $.each(data || {}, function (key, value) {\r\n                    query.push(key + \"=\" + value);\r\n                });\r\n\r\n                selector = query.length ? selector + \"&\" : selector + \"\";\r\n                selector += query.join(\"&\");\r\n\r\n                root.tb_show(title, selector);\r\n\r\n                root.jQuery('#TB_window').css({\r\n                    'z-index': '5000001',\r\n                    'transform': 'opacity .4s',\r\n                    'opacity': 0\r\n                });\r\n\r\n                root.jQuery('#TB_overlay').css({\r\n                    'z-index': '5000000'\r\n                });\r\n\r\n\r\n                setTimeout(function () {\r\n                    root.jQuery('#TB_window').css({\r\n                        'margin-top': -1 * ((root.jQuery('#TB_window').outerHeight() + 50) / 2),\r\n                        'opacity': 1\r\n                    });\r\n                    root.jQuery('#TB_window').find('#cp-item-ok').focus();\r\n                }, 0);\r\n\r\n                if (data && data.class) {\r\n                    root.jQuery('#TB_window').addClass(data.class);\r\n                }\r\n\r\n                return root.jQuery('#TB_window');\r\n            },\r\n\r\n\r\n            popUpInfo: function (title, content, data) {\r\n                var id = _.uniqueId('temp-popup-text');\r\n\r\n                var tempContainer = $('<div id=\"' + id + '\" />').hide();\r\n                tempContainer.appendTo($('body'));\r\n                tempContainer.append('<div>' + content + '</div>');\r\n\r\n                return this.popUp(title, id, data);\r\n\r\n            },\r\n\r\n            popupPrompt: function (title, text, value, callback, extraHTML) {\r\n\r\n                if (extraHTML) {\r\n                    extraHTML = '<div class=\"prompt-extra\">' + extraHTML + '</div>';\r\n                } else {\r\n                    extraHTML = '';\r\n                }\r\n\r\n                var content = '' +\r\n                    '<div class=\"prompt-wrapper\">' +\r\n                    '   <h4 class=\"prompt-title\">' + text + '</h4>' +\r\n                    '   <div class=\"prompt-content\">' +\r\n                    '      <input value=\"' + CP_Customizer.utils.htmlEscape(value) + '\" type=\"text\">' +\r\n                    '   </div>' +\r\n                    '   ' + extraHTML +\r\n                    '   <div class=\"prompt-footer\">' +\r\n                    '      <button class=\"submit button button-primary\"> ' + root.CP_Customizer.translateCompanionString(\"OK\") + '</button>' +\r\n                    '      <button class=\"cancel button button-secondary\">' + root.CP_Customizer.translateCompanionString(\"Cancel\") + '</button>' +\r\n                    '   </div>' +\r\n                    '</div>';\r\n\r\n                var data = {\r\n                    width: \"400\",\r\n                    class: \"popup-400\"\r\n                };\r\n\r\n                var $content = this.popUpInfo(title, content, data);\r\n\r\n                function onClose(canceled) {\r\n                    var newValue = $content.find('input').val().trim();\r\n\r\n                    if (canceled) {\r\n                        newValue = null;\r\n                    }\r\n\r\n                    if (_.isFunction(callback)) {\r\n                        callback(newValue, value)\r\n                    }\r\n                    CP_Customizer.closePopUps();\r\n                }\r\n\r\n                $content.on('keypress', 'input', function () {\r\n                    if (event.which !== 13) {\r\n                        return true;\r\n                    }\r\n                    onClose();\r\n                });\r\n\r\n                $content.on('click', 'button.submit', function () {\r\n                    onClose();\r\n                });\r\n\r\n\r\n                $content.on('click', 'button.cancel', function () {\r\n                    onClose(true);\r\n                });\r\n\r\n            },\r\n\r\n            popupSelectPrompt: function (title, text, value, options, callback, emptySelection, extraHTML) {\r\n                var select = '<select>';\r\n\r\n\r\n                if (emptySelection) {\r\n                    select += \"<option value='' >\" + emptySelection + \"</option>\";\r\n                }\r\n\r\n                for (var i in options) {\r\n                    var selectedAttr = (i === value) ? \"selected\" : \"\";\r\n                    select += \"<option \" + CP_Customizer.utils.htmlEscape(selectedAttr) + \" value='\" + i + \"' >\" + options[i] + \"</option>\";\r\n                }\r\n\r\n                select += '</select>';\r\n                if (extraHTML) {\r\n                    extraHTML = '<div class=\"prompt-extra\">' + extraHTML + '</div>';\r\n                } else {\r\n                    extraHTML = '';\r\n                }\r\n\r\n                var content = '' +\r\n                    '<div class=\"prompt-wrapper\">' +\r\n                    '   <h4 class=\"prompt-title\">' + text + '</h4>' +\r\n                    '   <div class=\"prompt-content\">' +\r\n                    '       ' + select +\r\n                    '   </div>' +\r\n                    '   ' + extraHTML +\r\n                    '   <div class=\"prompt-footer\">' +\r\n                    '      <button class=\"submit button button-primary\"> ' + root.CP_Customizer.translateCompanionString(\"OK\") + '</button>' +\r\n                    '      <button class=\"cancel button button-secondary\">' + root.CP_Customizer.translateCompanionString(\"Cancel\") + '</button>' +\r\n                    '   </div>' +\r\n                    '</div>';\r\n\r\n                var data = {\r\n                    width: \"400\",\r\n                    class: \"popup-400\"\r\n                };\r\n\r\n                var $content = this.popUpInfo(title, content, data);\r\n\r\n                function onClose(canceled) {\r\n                    var newValue = $content.find('select').val();\r\n\r\n                    if (canceled) {\r\n                        newValue = null;\r\n                    }\r\n\r\n                    if (_.isFunction(callback)) {\r\n                        callback(newValue, value)\r\n                    }\r\n                    CP_Customizer.closePopUps();\r\n                }\r\n\r\n                $content.on('click', 'button.submit', function () {\r\n                    onClose();\r\n                });\r\n\r\n\r\n                $content.on('click', 'button.cancel', function () {\r\n                    onClose(true);\r\n                });\r\n\r\n                return $content;\r\n\r\n            },\r\n\r\n            closePopUps: function () {\r\n                root.tb_remove();\r\n                root.jQuery('#TB_overlay').css({\r\n                    'z-index': '-1'\r\n                });\r\n            },\r\n\r\n            openMultiImageManager: function (title, callback, single) {\r\n                var node = false;\r\n                var interestWindow = root;\r\n                custom_uploader = interestWindow.wp.media.frames.file_frame = interestWindow.wp.media({\r\n                    title: title,\r\n                    button: {\r\n                        text: root.CP_Customizer.translateCompanionString('Choose Images')\r\n                    },\r\n                    multiple: !single\r\n                });\r\n                //When a file is selected, grab the URL and set it as the text field's value\r\n                custom_uploader.on('select', function () {\r\n                    var attachment = custom_uploader.state().get('selection').toJSON();\r\n                    callback(attachment);\r\n                });\r\n                custom_uploader.off('close.cp').on('close.cp', function () {\r\n                    callback(false);\r\n                });\r\n                //Open the uploader dialog\r\n                custom_uploader.open();\r\n\r\n                custom_uploader.content.mode('browse');\r\n                // Show Dialog over layouts frame\r\n                interestWindow.jQuery(interestWindow.wp.media.frame.views.selector).parent().css({\r\n                    'z-index': '16000000'\r\n                });\r\n            },\r\n\r\n            openImageManager: function (callback, multi) {\r\n                this.openMultiImageManager('Image Manager', function (obj) {\r\n                    if ($('iframe').length) {\r\n                        $('iframe').get(0).focus();\r\n                    }\r\n                    if (!obj) {\r\n                        return;\r\n                    }\r\n                    for (var i = 0; i < obj.length; i++) {\r\n                        var link = obj[i].url;\r\n                        callback(link);\r\n                    }\r\n                }, !multi);\r\n            },\r\n\r\n            openMediaCustomFrame: function (extender, mode, title, single, callback) {\r\n                var interestWindow = root;\r\n\r\n                var frame = extender(interestWindow.wp.media.view.MediaFrame.Select);\r\n\r\n                var custom_uploader = new frame({\r\n                    title: title,\r\n                    button: {\r\n                        text: title\r\n                    },\r\n                    multiple: !single\r\n                });\r\n\r\n\r\n                //When a file is selected, grab the URL and set it as the text field's value\r\n                custom_uploader.on('select', function () {\r\n                    attachment = custom_uploader.state().get('selection').toJSON();\r\n                    custom_uploader.content.mode('browse');\r\n                    callback(attachment);\r\n                });\r\n\r\n\r\n                custom_uploader.on('close', function () {\r\n                    custom_uploader.content.mode('browse');\r\n                    callback(false);\r\n                });\r\n\r\n                //Open the uploader dialog\r\n                custom_uploader.open();\r\n                custom_uploader.content.mode(mode);\r\n                // Show Dialog over layouts frame\r\n                interestWindow.jQuery(custom_uploader.views.selector).parent().css({\r\n                    'z-index': '16000000'\r\n                });\r\n\r\n            },\r\n\r\n            openMIManager: function (title, callback, single) {\r\n                var node = false;\r\n                var interestWindow = root;\r\n\r\n                // if (!interestWindow.wp.media.cp.FAFrame) {\r\n                var frame = interestWindow.wp.media.cp.extendFrameWithMDI(interestWindow.wp.media.view.MediaFrame.Select);\r\n                var custom_uploader = new frame({\r\n                    title: title,\r\n                    button: {\r\n                        text: root.CP_Customizer.translateCompanionString('Choose Icon')\r\n                    },\r\n                    multiple: !single\r\n                });\r\n                interestWindow.wp.media.cp.MIFrame = custom_uploader;\r\n\r\n                // }\r\n\r\n\r\n                //When a file is selected, grab the URL and set it as the text field's value\r\n                interestWindow.wp.media.cp.MIFrame.on('select', function () {\r\n                    attachment = custom_uploader.state().get('selection').toJSON();\r\n                    interestWindow.wp.media.cp.MIFrame.content.mode('browse');\r\n                    callback(attachment);\r\n                });\r\n                interestWindow.wp.media.cp.MIFrame.on('close', function () {\r\n                    interestWindow.wp.media.cp.MIFrame.content.mode('browse');\r\n                    callback(false);\r\n                });\r\n\r\n                //Open the uploader dialog\r\n                interestWindow.wp.media.cp.MIFrame.open();\r\n                interestWindow.wp.media.cp.MIFrame.content.mode('cp_material_icons');\r\n                // Show Dialog over layouts frame\r\n                interestWindow.jQuery(custom_uploader.views.selector).parent().css({\r\n                    'z-index': '16000000'\r\n                });\r\n\r\n            },\r\n\r\n            openCropableImageManager: function (width, height, flexible, callback) {\r\n                var control = new root.wp.customize.CroppedImageControl('custom_image_cropper[' + Date.now() + ']',\r\n                    {params: {}});\r\n\r\n                control.params = {\r\n                    button_labels: {\r\n                        frame_title: root.CP_Customizer.translateCompanionString(\"Select Image\")\r\n                    },\r\n                    height: height,\r\n                    width: width\r\n\r\n                };\r\n\r\n                flexible = _.isUndefined(flexible) ? true : flexible;\r\n\r\n                if (flexible) {\r\n                    control.params = _.extend(control.params, {\r\n                        flex_width: width,\r\n                        flex_height: height\r\n                    });\r\n                }\r\n\r\n                control.initFrame();\r\n                control.frame.setState('library').open();\r\n                control.frame.content.mode('browse');\r\n\r\n                function fixCropKeyPressBug() {\r\n                    setTimeout(function () {\r\n                        root.jQuery(top.document).unbind(root.jQuery.imgAreaSelect.keyPress);\r\n                    }, 100);\r\n                }\r\n\r\n                control.setImageFromAttachment = function (attachment) {\r\n                    callback([attachment]);\r\n                    fixCropKeyPressBug();\r\n                };\r\n\r\n                control.frame.on('close', function () {\r\n                    fixCropKeyPressBug();\r\n                });\r\n\r\n\r\n                root.jQuery(control.frame.views.selector).parent().css({\r\n                    'z-index': '16000000'\r\n                });\r\n\r\n                root.jQuery(control.frame.views.selector).find('.instructions').remove();\r\n\r\n\r\n                control.frame.on('content:create:crop', function () {\r\n                    var c = control;\r\n                    var state = c.frame.state();\r\n                    var __createCropToolbar = state.createCropToolbar;\r\n                    state.createCropToolbar = function () {\r\n                        state.set('canSkipCrop', true);\r\n                        __createCropToolbar.apply(state, arguments);\r\n                    };\r\n\r\n                });\r\n            },\r\n\r\n            openGalleryImageManager: function (options, callback) {\r\n                var interestWindow = root;\r\n                options = _.extend({\r\n                    \"shortocode\": false,\r\n                    \"ids\": [],\r\n                    \"columns\": \"5\",\r\n                    \"state\": 'gallery-edit',\r\n                    \"size\": \"medium\",\r\n                    \"link\": \"file\"\r\n                }, options);\r\n\r\n\r\n                if (_.isArray(options.ids)) {\r\n                    options.ids = options.ids.join(\",\");\r\n                }\r\n\r\n                if (_.isEmpty(options.ids.trim())) {\r\n                    options.ids = 'fake-' + Date.now();\r\n                }\r\n\r\n                var shortcode = \"[gallery\";\r\n                $.each(options, function (index, val) {\r\n                    shortcode += \" \" + index + '=\"' + val + '\"';\r\n                });\r\n                shortcode += \"]\";\r\n\r\n                var gallery = interestWindow.wp.media.gallery;\r\n                var frame = gallery.edit(shortcode);\r\n\r\n\r\n                frame.state(options.state).on('update', function (selection) {\r\n                    var ids = selection.map(function (model) {\r\n                        return model.id\r\n                    });\r\n                    callback(selection, ids);\r\n                });\r\n\r\n\r\n                // if (options.mediaSidebar === false) {\r\n                //     frame.$el.find('.media-sidebar').hide();\r\n                //     frame.$el.find('.media-sidebar').siblings('.media-toolbar ul').css('right', '0px');\r\n                // } else {\r\n                //     frame.$el.find('.media-sidebar').siblings('.media-toolbar ul').css('right', '');\r\n                //     frame.$el.find('.media-sidebar').show();\r\n                // }\r\n\r\n                interestWindow.jQuery(frame.views.selector).parent().css({\r\n                    'z-index': '16000000'\r\n                });\r\n\r\n                if (options.ids.match(/fake-\\d+/)) {\r\n                    frame.setState('gallery-library')\r\n                }\r\n            },\r\n\r\n            openMediaBrowser: function (type, callback, data) {\r\n                var cb;\r\n                if (callback instanceof jQuery) {\r\n                    cb = function (response) {\r\n\r\n                        if (!response) {\r\n                            return;\r\n                        }\r\n\r\n                        var value = response[0].url;\r\n                        if (data !== \"multiple\") {\r\n                            if (type == \"icon\") {\r\n                                value = response[0].mdi;\r\n                            }\r\n                            callback.val(value).trigger('change');\r\n                        }\r\n                    };\r\n                } else {\r\n                    cb = function () {\r\n                        callback.apply(this, arguments);\r\n                        CP_Customizer.preview.blur();\r\n                    }\r\n                }\r\n\r\n                switch (type) {\r\n                    case \"image\":\r\n                        // this.openMultiImageManager('Change image', cb, data);\r\n                        this.openCropableImageManager(data.width || this.MAX_SAFE_INTEGER, data.height || this.MAX_SAFE_INTEGER, true, cb);\r\n                        break;\r\n                    case \"cropable\":\r\n                        this.openCropableImageManager(data.width, data.height, data.flexible, cb);\r\n                        break;\r\n                    case \"icon\":\r\n                        this.openMIManager(root.CP_Customizer.translateCompanionString('Change Material Icon'), cb);\r\n                        break;\r\n                    case \"gallery\":\r\n                        this.openGalleryImageManager(data, cb);\r\n                        break;\r\n                }\r\n            },\r\n\r\n            getCustomizerRootEl: function () {\r\n                return root.jQuery(root.document.body).find('form#customize-controls');\r\n            },\r\n\r\n            openRightSidebar: function (elementId, options) {\r\n                options = options || {};\r\n                this.hideRightSidebar();\r\n                var $form = this.getCustomizerRootEl();\r\n                var $container = $form.find('#' + elementId + '-popup');\r\n\r\n                $('body').addClass('cp-right-section-opened');\r\n                if ($container.length) {\r\n                    $container.addClass('active');\r\n\r\n                    if (options.floating && !_(options.y).isUndefined()) {\r\n                        $container.css({\r\n                            top: options.y\r\n                        });\r\n                    }\r\n                } else {\r\n                    $container = $('<li id=\"' + elementId + '-popup\" class=\"customizer-right-section active\"> <span data-close-right-sidebar=\"true\" title=\"' + root.CP_Customizer.translateCompanionString(\"Close Panel\") + '\" class=\"close-panel\"></span> </li>');\r\n\r\n                    if (options.floating) {\r\n                        $container.addClass('floating');\r\n                    }\r\n\r\n                    $toAppend = $form.find('li#accordion-section-' + elementId + ' > ul');\r\n\r\n                    if ($toAppend.length === 0) {\r\n                        $toAppend = $form.find('#sub-accordion-section-' + elementId);\r\n                    }\r\n\r\n\r\n                    if ($toAppend.length === 0) {\r\n                        $toAppend = $('<div class=\"control-wrapper\" />');\r\n                        $toAppend.append($form.find('#customize-control-' + elementId).children());\r\n                    }\r\n\r\n                    $form.append($container);\r\n                    $container.append($toAppend);\r\n\r\n                    if (options.floating && !_(options.y).isUndefined()) {\r\n                        $container.css({\r\n                            top: options.y\r\n                        });\r\n                    }\r\n\r\n\r\n                    $container.find('span.close-panel').click(CP_Customizer.hideRightSidebar);\r\n\r\n                }\r\n\r\n                if (options.focus) {\r\n                    $container.find(options.focus)[0].scrollIntoViewIfNeeded();\r\n                }\r\n\r\n                $container.css('left', jQuery('#customize-header-actions')[0].offsetWidth + 1);\r\n\r\n                CP_Customizer.hooks.doAction('right_sidebar_opened', elementId, options, $container);\r\n\r\n                $form.find('span[data-close-right-sidebar=\"true\"]').click(function (event) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    CP_Customizer.hideRightSidebar();\r\n                });\r\n\r\n                $form.find('li.accordion-section').unbind('click.right-section').bind('click.right-section', function (event) {\r\n                    if ($(event.target).is('li') || $(event.target).is('.accordion-section-title')) {\r\n                        if ($(event.target).closest('.customizer-right-section').length === 0) {\r\n                            CP_Customizer.hideRightSidebar();\r\n                        }\r\n                    }\r\n                });\r\n\r\n            },\r\n\r\n            hideRightSidebar: function () {\r\n                var $form = root.jQuery(root.document.body).find('#customize-controls');\r\n                var $visibleSection = $form.find('.customizer-right-section.active');\r\n                if ($visibleSection.length) {\r\n                    $visibleSection.removeClass('active');\r\n                    root.CP_Customizer.trigger(root.CP_Customizer.events.RIGHT_SECTION_CLOSED, [$visibleSection]);\r\n                }\r\n\r\n            },\r\n\r\n            isRightSidebarVisible: function (sectionID) {\r\n                var $form = root.jQuery(root.document.body).find('#customize-controls');\r\n                return $form.find('#' + sectionID + '-popup').hasClass('active');\r\n            },\r\n\r\n            updateState: function (force, forceOverlays) {\r\n\r\n                function callback() {\r\n                    CP_Customizer.trigger('STATE_UPDATED');\r\n                }\r\n\r\n                if (force) {\r\n                    this._setContent(callback);\r\n                } else {\r\n                    this.setContent(callback);\r\n                }\r\n\r\n                this.overlays.hoverOverlay().hide();\r\n                this.overlays.updateAllOverlays(forceOverlays);\r\n            },\r\n\r\n\r\n            __changesetUpdate: _.debounce(function (callback) {\r\n                var changeSet = root.CP_Customizer.wpApi.requestChangesetUpdate.apply(root.CP_Customizer.wpApi);\r\n                if (_.isFunction(callback)) {\r\n                    changeSet.then(callback);\r\n                }\r\n            }, 10),\r\n\r\n            __requestCachedCbs: [],\r\n            requestChangesetUpdate: function (cb) {\r\n                if (_.isFunction(cb)) {\r\n                    this.__requestCachedCbs.push(cb);\r\n                }\r\n                var self = this;\r\n                this.__changesetUpdate(function () {\r\n                    while (self.__requestCachedCbs.length) {\r\n                        var cb = self.__requestCachedCbs.shift();\r\n                        cb.call(self);\r\n                    }\r\n                });\r\n            },\r\n\r\n            // if the mod is not set create a dirty one\r\n            __onSetForcedTransport: {},\r\n            setMod: function (mod, value, transport, reqCB) {\r\n\r\n                mod = CP_Customizer.utils.phpTrim(mod, \"|\");\r\n\r\n                var initialMod = mod;\r\n                var modParts = mod.split('|');\r\n                mod = modParts.shift();\r\n\r\n                var setting = root.wp.customize(mod);\r\n                value = _.clone(value);\r\n                if (!setting) {\r\n                    mod = \"CP_AUTO_SETTING[\" + mod + \"]\";\r\n                    setting = root.wp.customize(mod);\r\n                    if (!setting) {\r\n                        setting = wp.customize.create(mod, mod, {}, {\r\n                            type: 'theme_mod',\r\n                            transport: (transport || 'postMessage'),\r\n                            previewer: wp.customize.previewer\r\n                        });\r\n                    }\r\n                }\r\n\r\n                var oldTransport = setting.transport;\r\n                if (!this.__onSetForcedTransport[setting.id]) {\r\n                    this.__onSetForcedTransport[setting.id] = oldTransport;\r\n                }\r\n\r\n                if (transport) {\r\n                    setting.transport = transport;\r\n                }\r\n\r\n                var oldValue = _.clone(setting._value);\r\n\r\n                var jsonEncoded = false;\r\n                try {\r\n                    var parsed = decodeURI(oldValue);\r\n                    parsed = JSON.parse(parsed);\r\n\r\n                    if (_.isObject(parsed) || _.isArray(parsed)) {\r\n                        oldValue = parsed;\r\n                        jsonEncoded = true;\r\n                    }\r\n                } catch (e) {\r\n\r\n                }\r\n\r\n                if (_.isObject(oldValue)) {\r\n                    setting._value = undefined; // force no value before set( forces the setting to set the value )\r\n                }\r\n\r\n                if (modParts.length) {\r\n\r\n                    if (!oldValue || _.isEmpty(oldValue)) {\r\n                        oldValue = CP_Customizer.preview.data('mod_defaults')[mod];\r\n                    }\r\n\r\n                    var path = modParts.join('.');\r\n                    value = CP_Customizer.utils.setToPath(oldValue, path, value);\r\n                }\r\n\r\n                var control = wp.customize.control(mod);\r\n\r\n\r\n                if (jsonEncoded) {\r\n                    value = encodeURI(JSON.stringify(value));\r\n                }\r\n\r\n                if (_.isBoolean(oldValue)) {\r\n                    try {\r\n                        value = JSON.parse(value);\r\n                    } catch (e) {\r\n\r\n                    }\r\n                }\r\n\r\n                setting.set(value);\r\n\r\n                // update control\r\n\r\n                if (control) {\r\n                    var type = control.params.type;\r\n                    if (type === \"radio-html\") {\r\n                        jQuery(control.container.find('input[value=\"' + value + '\"]')).prop('checked', true);\r\n                    } else {\r\n                        if (type === \"kirki-spacing\") {\r\n                            for (var prop in value) {\r\n                                if (value.hasOwnProperty(prop)) {\r\n                                    jQuery(control.container.find('.' + prop + ' input')).prop('value', value[prop]);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if (type.match('kirki')) {\r\n                                kirkiSetSettingValue(mod, value);\r\n                            } else {\r\n                                if (type == \"gradient-control-pro\") {\r\n                                    control.setValue(value);\r\n                                } else {\r\n                                    if (type == \"repeater\") {\r\n                                        control.setValue(value);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var self = this;\r\n                var changeSetCB = function () {\r\n                    if (self.__onSetForcedTransport[setting.id]) {\r\n                        setting.transport = self.__onSetForcedTransport[setting.id];\r\n                        self.__onSetForcedTransport[setting.id] = null;\r\n                    }\r\n\r\n                    if (_.isFunction(reqCB)) {\r\n                        reqCB(initialMod, setting.id);\r\n                    }\r\n\r\n                };\r\n\r\n                if (_.isFunction(reqCB)) {\r\n                    this.requestChangesetUpdate(changeSetCB);\r\n                } else {\r\n                    setting.transport = oldTransport;\r\n                }\r\n\r\n            },\r\n\r\n            getMod: function (mod, defaultValue) {\r\n                var setting = root.wp.customize(mod);\r\n                if (!setting) {\r\n                    mod = \"CP_AUTO_SETTING[\" + mod + \"]\";\r\n                    setting = root.wp.customize(mod);\r\n                }\r\n\r\n                if (!setting) {\r\n                    return defaultValue;\r\n                }\r\n\r\n                return _.clone(setting.get());\r\n            },\r\n\r\n            cleanModValue: function (value) {\r\n\r\n                if (_.isString(value)) {\r\n\r\n                    // remove extra mdi classes ( e.g. \"mdi mdi mdi\" )\r\n                    value = value.replace(/(mdi\\s(mdi\\s)+)/ig, 'mdi ');\r\n\r\n                    // trim all spaces\r\n                    value = value.trim();\r\n                }\r\n\r\n                return value;\r\n            },\r\n\r\n            onModChange: function (mod, callback) {\r\n                var autoMod = \"CP_AUTO_SETTING[\" + mod + \"]\";\r\n                var modCallback = _.debounce(function (value) {\r\n                    if (_.isFunction(callback)) {\r\n                        value.bind(callback);\r\n                    }\r\n                }, 100);\r\n\r\n\r\n                CP_Customizer.wpApi(mod, modCallback);\r\n                CP_Customizer.wpApi(autoMod, modCallback);\r\n\r\n            },\r\n\r\n            setMultipleMods: function (mods, transport, finishCb) {\r\n\r\n                CP_Customizer.log('Set Multiple Mods', mods);\r\n\r\n                if (_.isEmpty(mods)) {\r\n                    if (finishCb) finishCb();\r\n                    return;\r\n                }\r\n\r\n                $(root).off('blur.wp-customize-changeset-update');\r\n                var modsIDs = Object.getOwnPropertyNames(mods);\r\n                var modsDone = [];\r\n\r\n                var reqCB = function (mod) {\r\n                    if (modsDone.indexOf(mod) === -1) {\r\n                        modsDone.push(mod);\r\n                    }\r\n\r\n                    if (_.difference(modsIDs, modsDone).length === 0) {\r\n                        if (_.isFunction(finishCb)) {\r\n                            finishCb();\r\n                        }\r\n                    }\r\n                };\r\n\r\n\r\n                _.each(mods, function (value, mod) {\r\n                    CP_Customizer.setMod(mod, value, transport, reqCB);\r\n                });\r\n            },\r\n\r\n            _currentContentValues: {},\r\n            _setContent: function (callback) {\r\n                var previewJQuery = CP_Customizer.preview.jQuery();\r\n\r\n                if (root.CP_Customizer.preview.data().maintainable) {\r\n                    var content = root.CP_Customizer.preview.getContent().trim();\r\n                    var setting = root.wp.customize('page_content');\r\n                    if (!setting) {\r\n                        return;\r\n                    }\r\n\r\n                    var value = setting.get();\r\n                    if (_.isString(value)) {\r\n                        value = JSON.parse(decodeURIComponent(value));\r\n                    }\r\n\r\n                    if (_.isArray(value) && _.isEmpty(value)) {\r\n                        value = {};\r\n                    }\r\n\r\n                    if (!value) {\r\n                        value = {};\r\n                    }\r\n\r\n                    value[root.CP_Customizer.preview.data().pageID] = content;\r\n\r\n                    setting.set(encodeURIComponent(JSON.stringify(value)));\r\n                }\r\n\r\n                var modsToSet = {};\r\n\r\n                this.preview.find(\"[data-theme-href]\").each(function () {\r\n                    var prop = jQuery(this).attr('data-theme-href');\r\n                    var val = jQuery(this).attr('href').trim();\r\n\r\n                    modsToSet[prop] = CP_Customizer.preview.cleanURL(val);\r\n                });\r\n\r\n                this.preview.find(\"[data-theme-target]\").each(function () {\r\n                    var prop = jQuery(this).attr('data-theme-target');\r\n                    var val = jQuery(this).attr('target') || \"_self\";\r\n\r\n                    modsToSet[prop] = val.trim();\r\n                });\r\n\r\n\r\n                this.preview.find(\"[data-theme-src]\").each(function () {\r\n                    var prop = jQuery(this).attr('data-theme-src');\r\n                    var val = jQuery(this).attr('src');\r\n                    // root.CP_Customizer.setMod(prop, val.trim());\r\n                    modsToSet[prop] = val.trim();\r\n                });\r\n\r\n                this.preview.find(\"[data-theme-mdi]\").each(function () {\r\n                    var prop = jQuery(this).attr('data-theme-mdi');\r\n                    var val = jQuery(this).attr('class').match(/mdi\\-[a-z\\-]+/ig).pop();\r\n                    // root.CP_Customizer.setMod(prop, val.trim());\r\n                    modsToSet[prop] = val.trim();\r\n                });\r\n\r\n                if (root.CP_Customizer.options().mods) {\r\n                    for (var selector in root.CP_Customizer.options().mods) {\r\n                        var $el = this.preview.find(selector);\r\n                        var modData = root.CP_Customizer.options().mods[selector];\r\n                        if (modData.atts) {\r\n                            for (var attr in modData.atts) {\r\n                                // $el.attr('data-theme-' + attr, modData.atts[attr]);\r\n                                var prop = $el.attr('data-theme-' + attr);\r\n                                var val = root.CP_Customizer.hooks.applyFilters('temp_attr_mod_value', $el.attr(attr) || \"\", attr, $el);\r\n                                // root.CP_Customizer.setMod(prop, val.trim());\r\n                                modsToSet[prop] = val.trim();\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n\r\n                this.preview.find(\"[data-dynamic-mod='true'],[data-dynamic-mod='true'] *\").each(function () {\r\n                    var atts = Array.from(this.attributes),\r\n                        $el = root.CP_Customizer.preview.find(this);\r\n\r\n                    for (var i = 0; i < atts.length; i++) {\r\n                        var attr = atts[i].name,\r\n                            prop = atts[i].value;\r\n\r\n                        if (attr.indexOf('data-theme-') === 0) {\r\n                            attr = attr.replace('data-theme-', '');\r\n                            var fallback = \"\";\r\n\r\n                            var value = $el.attr(attr);\r\n\r\n                            // logica inversa aici false daca exista, true daca nu\r\n                            if (attr === 'data-reiki-hidden') {\r\n                                fallback = \"true\";\r\n\r\n                                if (value) {\r\n                                    value = 'false';\r\n                                }\r\n\r\n                            }\r\n\r\n                            if (attr.trim() === 'href') {\r\n                                value = CP_Customizer.preview.cleanURL(value);\r\n                            }\r\n\r\n                            var val = root.CP_Customizer.hooks.applyFilters('temp_attr_mod_value', _.isUndefined(value) ? fallback : value, attr, $el);\r\n\r\n                            modsToSet[prop] = CP_Customizer.cleanModValue(val);\r\n                        }\r\n\r\n                    }\r\n                });\r\n\r\n                this.preview.find(\"[data-theme]\").each(function () {\r\n\r\n                    var prop = jQuery(this).attr('data-theme');\r\n\r\n                    if (!previewJQuery(this).data('was-changed')) {\r\n                        if (previewJQuery('[data-theme=\"' + prop + '\"]').length > 1) {\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    // root.CP_Customizer.preview.cleanNode(toSave);\r\n                    // var toSave = jQuery(this).clone();\r\n\r\n                    var toSave = jQuery(this).clone();\r\n                    var val = root.CP_Customizer.preview.getContent($(this));\r\n                    // root.CP_Customizer.setMod(prop, val);\r\n                    modsToSet[prop] = val.trim();\r\n                    previewJQuery(this).data('was-changed', false);\r\n                });\r\n\r\n                root.CP_Customizer.cleanClose();\r\n\r\n                // update only when you find a change\r\n                var uniqueMods = {};\r\n                var self = this;\r\n                _.each(modsToSet, function (value, mod) {\r\n                    if (self._currentContentValues[mod] !== value) {\r\n                        uniqueMods[mod] = value;\r\n                        self._currentContentValues[mod] = value;\r\n                    }\r\n                });\r\n\r\n                CP_Customizer.setMultipleMods(uniqueMods, 'postMessage', callback);\r\n\r\n            },\r\n\r\n            setContent: _.debounce(function (callback) {\r\n                this._setContent(callback);\r\n            }, 200),\r\n\r\n            save: function () {\r\n\r\n                CP_Customizer.preview.blur();\r\n\r\n                $(root.document).find('body').addClass('saving');\r\n                $(root.document).find('input#save').prop('disabled', true);\r\n\r\n                var self = this;\r\n                var callback = function () {\r\n                    wp.customize.previewer.save();\r\n                };\r\n                self._setContent(callback);\r\n\r\n            },\r\n\r\n            cleanClose: function () {\r\n\r\n            },\r\n\r\n            __saveTimeout: false,\r\n\r\n            markSave: _.debounce(function () {\r\n                var self = this;\r\n                clearTimeout(self.__saveTimeout);\r\n\r\n                self.__saveTimeout = setTimeout(function () {\r\n                    self.setContent();\r\n                }, 500);\r\n            }, 200),\r\n\r\n\r\n            parseShortcode: function (shortcode) {\r\n                shortcode = shortcode.replace('[', '').replace(']', '');\r\n\r\n                var tag = shortcode.split(' ')[0].trim();\r\n                var shortcodeAttrs = shortcode.match(/(\\s(.*?)=\")(.*?)(\")/ig);\r\n                var response = {\r\n                    tag: tag,\r\n                    attrs: {}\r\n                };\r\n                if (!shortcodeAttrs) {\r\n                    return response;\r\n                }\r\n                for (var i = 0; i < shortcodeAttrs.length; i++) {\r\n                    var attr = shortcodeAttrs[i].trim();\r\n                    response.attrs[attr.split('=')[0]] = attr.split('=\"')[1].slice(0, -1)\r\n                }\r\n                return response;\r\n\r\n            },\r\n\r\n            isShortcodeContent: function ($node) {\r\n                return root.jQuery($node).closest('[data-content-shortcode]').length > 0;\r\n            },\r\n\r\n            isShortcodeEditable: function ($node) {\r\n                var isEditableByTag = root.jQuery($node).closest('[data-content-shortcode][data-editable=\"true\"]').length > 0;\r\n                var tag = CP_Customizer.getNodeShortcode(root.jQuery($node).closest('[data-content-shortcode]'));\r\n\r\n                return CP_Customizer.hooks.applyFilters('is_shortcode_editable', isEditableByTag, tag);\r\n            },\r\n\r\n            isOnCanvasMod: function (node) {\r\n                node = $(node)[0];\r\n                var hasThemeModAtt = Array.from(node.attributes).map(function (a) {\r\n\r\n                    return (a.name.toLowerCase().indexOf('data-theme') !== -1);\r\n\r\n                }).reduce(function (a, b) {\r\n                    return a || b;\r\n                });\r\n\r\n                return hasThemeModAtt;\r\n            },\r\n\r\n            nodeWrapsShortcode: function ($node, tag) {\r\n                var shortcode = this.getNodeShortcode($node);\r\n\r\n                if (shortcode) {\r\n                    return (shortcode.tag === tag.trim());\r\n                }\r\n\r\n                return false;\r\n            },\r\n\r\n            getNodeShortcode: function ($node) {\r\n                if (!$node.attr('data-content-shortcode')) {\r\n                    return undefined;\r\n                }\r\n\r\n                return this.parseShortcode($node.attr('data-content-shortcode'));\r\n            },\r\n\r\n            nodeContainsShortcode: function ($node, tag) {\r\n                var $containers = $node.find('[data-content-shortcode]');\r\n\r\n                for (var i = 0; i < $containers.length; i++) {\r\n                    if (CP_Customizer.nodeWrapsShortcode($containers.eq(i), tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            },\r\n\r\n            renderNodeShortcodes: function ($node) {\r\n                $node = $($node); // make sure the node is wrapped with jqury\r\n                var $nodes = $node.find('[data-content-shortcode]');\r\n                if ($node.is('[data-content-shortcode]')) {\r\n                    $nodes = $nodes.add($node);\r\n                }\r\n                var self = this;\r\n                $nodes.each(function () {\r\n                    self.updateNodeShortcode($(this), \"[\" + $(this).attr('data-content-shortcode') + \"]\");\r\n                })\r\n            },\r\n            updateNodeShortcode: function ($node, shortcode, noRerender, context) {\r\n                if (!$node.attr('data-content-shortcode')) {\r\n                    return undefined;\r\n                }\r\n\r\n                var attrShortcode = CP_Customizer.utils.phpTrim(shortcode, '[]');\r\n                $node.attr('data-content-shortcode', attrShortcode);\r\n\r\n                if (noRerender !== true) {\r\n                    if (!context) {\r\n                        context = {\r\n                            query: CP_Customizer.preview.data().queryVars\r\n                        }\r\n                    }\r\n\r\n                    (function ($node) {\r\n                        CP_Customizer.preview.pauseObserver();\r\n                        CP_Customizer.preview.blur();\r\n\r\n                        var currentChangeset = CP_Customizer.utils.deepClone(wp.customize.previewer.query());\r\n\r\n                        var data = _.extend(currentChangeset, {\r\n                            action: 'cp_shortcode_refresh',\r\n                            shortcode: btoa(shortcode),\r\n                            context: context,\r\n                            _: Date.now()\r\n                        });\r\n\r\n                        $node.html('<div class=\"shortcode-temp-placeholder\"></div>');\r\n                        jQuery.ajax({\r\n                            url: ajaxurl,\r\n                            method: 'POST',\r\n                            data: data\r\n                        }).done(function (response) {\r\n                            $node.empty();\r\n                            $node.html(response);\r\n\r\n                            CP_Customizer.hideLoader();\r\n                            CP_Customizer.preview.decorateMods($node);\r\n                            CP_Customizer.preview.decorateElements($node);\r\n\r\n                            _.delay(function () {\r\n                                root.CP_Customizer.hooks.doAction(\"shortcode_updated\", $node, shortcode);\r\n                                root.CP_Customizer.updateState();\r\n                            }, 0);\r\n                        });\r\n                        CP_Customizer.preview.restartObserver();\r\n                    })($node);\r\n                }\r\n\r\n                CP_Customizer.updateState();\r\n                return true;\r\n            },\r\n\r\n            updateNodeFromShortcodeObject: function ($node, shortcodeObj, noRerender, context) {\r\n                var shortcode = '[' + shortcodeObj.tag + ' ';\r\n\r\n                for (var a in shortcodeObj.attrs) {\r\n                    shortcode += a + '=\"' + shortcodeObj.attrs[a] + '\" ';\r\n                }\r\n\r\n                shortcode += ']';\r\n\r\n                return this.updateNodeShortcode($node, shortcode, noRerender, context);\r\n            },\r\n\r\n            preview: {\r\n                frame: function () {\r\n                    var frame = wp.customize.previewer.targetWindow.get();\r\n\r\n                    if (!frame) {\r\n                        frame = wp.customize.previewer.container.find('iframe')[0];\r\n\r\n                        if (frame) {\r\n                            frame = frame.contentWindow;\r\n                        } else {\r\n                            frame = null;\r\n                        }\r\n                    }\r\n\r\n                    return frame;\r\n                },\r\n\r\n                currentDevice: function () {\r\n                    return jQuery('.active[data-device]').data('device');\r\n                },\r\n\r\n\r\n                __observerFunctionsToPause: [\"prepareFormPreview\", \"prepareLinkPreview\"],\r\n                __observerOriginalFunctions: {},\r\n\r\n                pauseObserver: function () {\r\n                    var previewApi = CP_Customizer.preview.frame().wp.customize;\r\n\r\n                    this.__observerOriginalFunctions = {};\r\n                    var self = CP_Customizer.preview;\r\n                    _.each(self.__observerFunctionsToPause, function (fn) {\r\n                        if (_.isFunction(previewApi[fn])) {\r\n                            self.__observerOriginalFunctions[fn] = previewApi[fn];\r\n                            previewApi[fn] = function () {\r\n                            };\r\n                        }\r\n                    });\r\n                },\r\n\r\n                restartObserver: _.debounce(function () {\r\n                    var previewApi = CP_Customizer.preview.frame().wp.customize;\r\n\r\n                    var self = CP_Customizer.preview;\r\n                    _.each(self.__observerFunctionsToPause, function (fn) {\r\n                        if (_.isFunction(previewApi[fn]) && _.isFunction(self.__observerOriginalFunctions[fn])) {\r\n                            previewApi[fn] = self.__observerOriginalFunctions[fn];\r\n                        }\r\n                    });\r\n                }, 100),\r\n\r\n\r\n                addSilentExecution: function (callback) {\r\n                    return _.compose(this.pauseObserver, callback, this.restartObserver);\r\n                },\r\n\r\n                silentCall: function (callback) {\r\n                    var args = arguments.length > 1 ? arguments[1] : undefined;\r\n                    var context = arguments.length > 2 ? arguments[2] : this;\r\n\r\n                    callback = this.addSilentExecution(callback);\r\n\r\n                    return callback.apply(context, arguments);\r\n                },\r\n\r\n\r\n                refresh: _.throttle(function () {\r\n                    CP_Customizer.wpApi.previewer.refresh();\r\n                }, 100),\r\n\r\n                data: function (key, defaultValue) {\r\n\r\n                    if (!this.frame()) {\r\n                        return {};\r\n                    }\r\n\r\n                    var result = this.frame().cpCustomizerPreview || {};\r\n\r\n                    if (key) {\r\n                        var keyParts = key.split(':');\r\n                        for (var i = 0; i < keyParts.length; i++) {\r\n                            var part = keyParts[i];\r\n\r\n                            if (!_.isUndefined(result[part])) {\r\n                                result = result[part];\r\n                            } else {\r\n                                result = defaultValue;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return result;\r\n                },\r\n\r\n                getChangesetURL: function () {\r\n                    var changeset = wp.customize.settings.changeset.uuid ? \"?changeset_uuid=\" + wp.customize.settings.changeset.uuid : \"\";\r\n\r\n                    if (changeset) {\r\n                        changeset += \"&cp__changeset__preview=\" + Date.now();\r\n                    }\r\n\r\n                    return window.location.origin + window.location.pathname + changeset;\r\n                },\r\n\r\n                isPageMaintainable: function () {\r\n                    return this.data.maintainable;\r\n                },\r\n\r\n                // http://stackoverflow.com/questions/7451468/contenteditable-div-how-can-i-determine-if-the-cursor-is-at-the-start-or-end-o/7478420#7478420\r\n                getSelectionTextInfo: function (el) {\r\n                    var atStart = false, atEnd = false;\r\n                    var window = this.frame();\r\n                    var document = this.frame().document;\r\n                    var selRange, testRange;\r\n                    if (window.getSelection) {\r\n                        var sel = window.getSelection();\r\n                        if (sel.rangeCount) {\r\n                            selRange = sel.getRangeAt(0);\r\n                            testRange = selRange.cloneRange();\r\n\r\n                            testRange.selectNodeContents(el);\r\n                            testRange.setEnd(selRange.startContainer, selRange.startOffset);\r\n                            atStart = (testRange.toString() == \"\");\r\n\r\n                            testRange.selectNodeContents(el);\r\n                            testRange.setStart(selRange.endContainer, selRange.endOffset);\r\n                            atEnd = (testRange.toString() == \"\");\r\n                        }\r\n                    } else if (document.selection && document.selection.type != \"Control\") {\r\n                        selRange = document.selection.createRange();\r\n                        testRange = selRange.duplicate();\r\n\r\n                        testRange.moveToElementText(el);\r\n                        testRange.setEndPoint(\"EndToStart\", selRange);\r\n                        atStart = (testRange.text == \"\");\r\n\r\n                        testRange.moveToElementText(el);\r\n                        testRange.setEndPoint(\"StartToEnd\", selRange);\r\n                        atEnd = (testRange.text == \"\");\r\n                    }\r\n\r\n                    return {atStart: atStart, atEnd: atEnd};\r\n                },\r\n\r\n                isCustomFrontPage: function () {\r\n                    return this.data.isFrontPage;\r\n                },\r\n\r\n                jQuery: function (data) {\r\n                    if (data) {\r\n                        return this.frame().jQuery(data);\r\n                    }\r\n                    return this.frame().jQuery;\r\n                },\r\n\r\n                getPageContainerSelector: function () {\r\n\r\n                    if (!root.CP_Customizer.preview.data().maintainable) {\r\n                        '';\r\n                    }\r\n\r\n                    var startSelector = \"#cp_customizer_content_area_start\";\r\n\r\n                    var attrName = 'data-cp-content-container-' + top.CP_Customizer.slugPrefix();\r\n                    var $parent = this.jQuery(startSelector).parent();\r\n                    if (!$parent.attr(attrName)) {\r\n                        $parent.attr(attrName, _.uniqueId(\"page-content-container-\"));\r\n                    }\r\n\r\n                    selector = \"[\" + attrName + \"='\" + $parent.attr(attrName) + \"']\";\r\n\r\n                    selector = CP_Customizer.hooks.applyFilters('page_content_container_selector', selector);\r\n\r\n                    return selector;\r\n                },\r\n\r\n                getRootNode: function () {\r\n                    if (!wp.customize('page_content')) {\r\n                        return this.jQuery(\"<div/>\");\r\n                    }\r\n\r\n                    return this.find(this.getPageContainerSelector());\r\n                },\r\n\r\n                find: function (query) {\r\n                    var $ = this.jQuery();\r\n                    return $(query);\r\n                },\r\n\r\n                getSectionByDataId: function (id) {\r\n                    return this.find('[data-id=\"' + id + '\"]');\r\n                },\r\n\r\n                getNodeSection: function (node) {\r\n                    var $node = CP_Customizer.preview.jQuery(node);\r\n                    if ($node.is('[data-id]')) {\r\n                        return $node;\r\n                    } else {\r\n                        return $node.closest('[data-id]');\r\n                    }\r\n                },\r\n\r\n                getNodeAbsSelector: function (node, relativeSelector) {\r\n                    var section = this.getNodeSection(node),\r\n                        sectionId = \"[data-id='\" + section.attr('data-id') + \"']\",\r\n                        absSelector = sectionId + ' ' + relativeSelector;\r\n\r\n                    return absSelector.replace(/\\s\\s?/, ' ').trim();\r\n                },\r\n\r\n                getNodeSectionId: function (node) {\r\n                    var section = this.getNodeSection(node);\r\n                    return section.attr('data-id');\r\n                },\r\n\r\n                getNodeExportId: function (node) {\r\n                    var section = this.getNodeSection(node);\r\n                    return section.attr('data-export-id');\r\n                },\r\n\r\n                getThemeMods: function ($container) {\r\n                    if (!$container || $container.is(this.getRootNode())) {\r\n                        $container = this.jQuery('body');\r\n                    }\r\n\r\n                    var themeModNodesSelector = root.CP_Customizer.hooks.applyFilters('theme_mod_nodes_selector', root.CP_Customizer.THEME_MOD_NODES);\r\n\r\n                    if (root.CP_Customizer.options().mods) {\r\n                        for (var m in root.CP_Customizer.options().mods) {\r\n                            themeModNodesSelector += ',' + m;\r\n                        }\r\n                    }\r\n\r\n                    $themeModNodes = $container.find(themeModNodesSelector);\r\n\r\n                    if ($container.is(themeModNodesSelector)) {\r\n                        $themeModNodes.add($container);\r\n                    }\r\n\r\n                    return $themeModNodes;\r\n                },\r\n\r\n                getContentNodes: function (filter) {\r\n                //replaced children() with contents() to also get html comments for gutenberg blocks\r\n                var nodes = this.getRootNode().contents().toArray();\r\n                    nodes.html = function () {\r\n                        return this.map(function (node) {\r\n                        if (node.nodeType == Node.COMMENT_NODE) {\r\n                            return \"<!--\" + node.textContent + \"-->\";\r\n                        } else {\r\n                            return node.outerHTML;\r\n                        }\r\n                        }).join('');\r\n                    };\r\n\r\n                    return nodes;\r\n                },\r\n\r\n                getContent: function ($node) {\r\n\r\n                    $node = $node || this.getContentNodes();\r\n                    var nodesHML = $node.html().//remove all gutenberg block comments they will be added back by decorate\r\n                    replace(/<!-- \\/?wp:extendstudio\\/materialis -->/gi, '').\r\n                    replace(/[\\w-]+=\"gutenberg-section-\\d+\"/gi, '').\r\n                    replace(/[\\w-]+=\"Gutenberg\"/gi, '');\r\n                                        \r\n                    var $currentNodes = $('<div/>').append(nodesHML);\r\n\r\n                    $currentNodes.find('.reiki-customizer-ordering-overlay').remove();\r\n\r\n                    // cleanup inline styling, leaving only background properties and typography\r\n                    $currentNodes[0].querySelectorAll('[style]').forEach(function (el) {\r\n                        var style = el.getAttribute('style'),\r\n                            whitelistedProps = root.CP_Customizer.options('cssAllowedProperties'),\r\n                            inlineCss = {},\r\n                            styleProps = style.split(';');\r\n\r\n                        for (var i = 0; i < styleProps.length; i++) {\r\n                            var propParts = styleProps[i].split(':'),\r\n                                prop = (propParts.shift() || \"\").trim(),\r\n                                value = (propParts || []).join(':').trim();\r\n\r\n                            if (prop && value) {\r\n                                inlineCss[prop] = value;\r\n                            }\r\n\r\n                        }\r\n\r\n                        var inlineCssText = \"\";\r\n\r\n                        for (var prop in inlineCss) {\r\n                            inlineCssText += prop + ': ' + inlineCss[prop] + '; ';\r\n                        }\r\n\r\n                        if (inlineCssText.trim()) {\r\n                            el.setAttribute('style', inlineCssText.trim());\r\n                        } else {\r\n                            el.removeAttribute('style');\r\n                        }\r\n\r\n                        el.removeAttribute('data-mce-style');\r\n\r\n                    });\r\n\r\n\r\n                    $currentNodes[0].querySelectorAll('[data-content-shortcode]').forEach(function (el) {\r\n                        el.innerHTML = '[' + CP_Customizer.utils.phpTrim(el.getAttribute('data-content-shortcode')) + ']';\r\n                    });\r\n\r\n\r\n                    $currentNodes[0].querySelectorAll('[data-attr-shortcode]').forEach(function (el) {\r\n                        var attr = el.getAttribute('data-attr-shortcode');\r\n                        var parts = attr.split(',');\r\n\r\n                        for (var i = 0; i < parts.length; i++) {\r\n                            var part = parts[i].trim();\r\n                            part = part.split(':');\r\n                            el.setAttribute(part[0].trim(), '[' + part[1].trim() + ']');\r\n                        }\r\n                    });\r\n\r\n\r\n                    this.cleanNode($currentNodes);\r\n\r\n                    CP_Customizer.hooks.doAction('clean_nodes', $currentNodes);\r\n\r\n                    $currentNodes[0].querySelectorAll('*').forEach(function (el) {\r\n                        var attributes = el.attributes;\r\n                        for (var i = 0; i < attributes.length; i++) {\r\n                            var attrName = attributes.item(i).name;\r\n                            if (attrName.match(/scrollreveal/)) {\r\n                                el.removeAttribute(attrName);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    $currentNodes.find('*').not('[data-cpid]').remove();\r\n\r\n                    // $currentNodes.find('*').not('[data-cpid]').each(function () {\r\n                    //     var $el = $(this);\r\n\r\n                    //     if ($el.attr('data-cp-remove-this')) {\r\n                    //         $el.remove();\r\n                    //     }\r\n\r\n                    //     if (this.previousSibling && this.previousSibling.nodeType === 8) {\r\n                    //         var commentText = this.previousSibling.textContent,\r\n                    //             shortcode = \"\",\r\n                    //             startComment = \"\";\r\n\r\n                    //         this.previousSibling.parentNode.removeChild(this.previousSibling);\r\n                    //         if (commentText.match(/cp-shortcode:(.*?):(.*)/)) {\r\n                    //             shortcode = commentText.match(/cp-shortcode:(.*?):(.*)/).pop();\r\n                    //             startComment = commentText;\r\n                    //         }\r\n\r\n                    //         var nextSibling = this.nextSibling;\r\n\r\n                    //         while (nextSibling) {\r\n                    //             if (nextSibling.nodeType === 8) {\r\n                    //                 var commentText = nextSibling.textContent;\r\n\r\n                    //                 if (commentText.trim() === startComment.trim()) {\r\n                    //                     nextSibling.parentNode.removeChild(nextSibling);\r\n                    //                     break;\r\n                    //                 }\r\n                    //             }\r\n\r\n                    //             $(nextSibling).attr('data-cp-remove-this', '1');\r\n                    //             nextSibling = nextSibling.nextSibling;\r\n                    //         }\r\n\r\n                    //         this.outerHTML = shortcode;\r\n                    //     } else {\r\n                    //         $el.remove();\r\n                    //     }\r\n                    // });\r\n\r\n                    $currentNodes.find('br').each(function () {\r\n                        if (!this.nextSibling) {\r\n                            $(this).remove();\r\n                        }\r\n                    });\r\n\r\n                    CP_Customizer.hooks.applyFilters('get_content', $currentNodes);\r\n                \r\n\t                //gutenberg\r\n                    this.decorateSectionsForGutenberg($currentNodes.find('[data-id][data-export-id]'));\r\n                    return $currentNodes.html().replace(/data-cpid=\"[^\"]+\"/gi, '');                    ;\r\n                },\r\n\r\n                __cleanNode: function (el) {\r\n                    el.removeAttribute('data-content-editable');\r\n                    el.removeAttribute('data-content-code-editable');\r\n                    el.removeAttribute('data-container-editable');\r\n\t                el.removeAttribute('data-non-editable');\r\n                    el.removeAttribute('contenteditable');\r\n                    el.removeAttribute('spellcheck');\r\n\r\n                    el.classList.remove('ui-sortable');\r\n                    el.classList.remove('ui-sortable-disabled');\r\n                    el.classList.remove('ui-sortable-handle');\r\n                    el.classList.remove('customize-unpreviewable');\r\n\r\n                    var elClass = el.getAttribute('class');\r\n                    if (elClass) {\r\n                        // remove the tinymce (mce-*) classes;\r\n                        elClass = elClass.replace(/mce\\-[a-z\\-]+/ig, \"\").trim();\r\n\r\n                        // remove multiple spaces in class names\r\n                        elClass = elClass.replace(/\\s\\s+/g, ' ');\r\n\r\n                        el.setAttribute('class', elClass);\r\n                    }\r\n\r\n                    if (el.id && el.id.indexOf('mce_') === 0) {\r\n                        el.removeAttribute('id');\r\n                    }\r\n\r\n                    // preview styles\r\n                    el.removeAttribute('data-preview-empty');\r\n\r\n                    // clean node url\r\n\r\n                    if (el.getAttribute('href')) {\r\n                        var href = CP_Customizer.preview.cleanURL(el.getAttribute('href'));\r\n                        el.setAttribute('href', href)\r\n                    }\r\n                },\r\n\r\n\r\n                getNodeClasses: function (node) {\r\n                    var $clone = $(node).clone();\r\n                    this.__cleanNode($clone[0]);\r\n                    return Array.from($clone[0].classList);\r\n                },\r\n\r\n                cleanNode: function ($node) {\r\n\r\n                $node[0].querySelectorAll('[data-content-editable], [data-content-code-editable], [data-container-editable], [data-non-editable]').forEach(function (el) {\r\n                        root.CP_Customizer.preview.__cleanNode(el);\r\n                    });\r\n\r\n                    $node[0].querySelectorAll('.ui-sortable,.ui-sortable-disabled,.ui-sortable-handle').forEach(function (el) {\r\n                        root.CP_Customizer.preview.__cleanNode(el);\r\n                    });\r\n\r\n                    root.CP_Customizer.preview.__cleanNode($node[0]);\r\n\r\n                    return $node;\r\n                },\r\n\r\n                cleanURL: function (url) {\r\n\r\n                    var startsWithDoubleSlash = (url.indexOf('//') === 0);\r\n                    var startsWithSlash = (url.indexOf('/') === 0);\r\n\r\n                    var queryKeys = Object.getOwnPropertyNames(CP_Customizer.wpApi.previewer.query());\r\n                    queryKeys = _.unique(queryKeys.concat([\r\n                        'customize_theme',\r\n                        'customize_changeset_uuid',\r\n                        'customize_messenger_channel',\r\n                        'customize_autosaved'\r\n                    ]));\r\n\r\n                    url = CP_Customizer.utils.removeUrlQueryStrings(url, queryKeys);\r\n\r\n                    // clean url\r\n                    url = CP_Customizer.utils.phpTrim(url, '/').trim() || \"#\";\r\n\r\n                    // add // or / depending on how url received\r\n                    if (startsWithDoubleSlash) {\r\n                        url = '//' + url;\r\n                    } else {\r\n                        if (startsWithSlash) {\r\n                            url = '/' + url;\r\n                        }\r\n                    }\r\n\r\n                    return url;\r\n                },\r\n\r\n                fixWronglyWrappedTextNodes: function ($node) {\r\n                    $($node).find('div').each(function () {\r\n                        var hasOnlyTextInside = Array.from(this).map(function (item) {\r\n                            return ([8, 3].indexOf(item.nodeType) !== -1)\r\n                        }).reduce(function (a, b) {\r\n                            return a && b\r\n                        }, true);\r\n\r\n                        if (hasOnlyTextInside) {\r\n                            if (this.innerHTML.trim().length) {\r\n                                this.outerHTML = this.innerHTML + '<br/>';\r\n                            } else {\r\n                                $(this).remove();\r\n                            }\r\n                        }\r\n                    });\r\n                },\r\n\r\n                markNode: function ($node, prefix) {\r\n\r\n                    CP_Customizer.preview.pauseObserver();\r\n                    prefix = prefix || 'new_cp_node_';\r\n\r\n                    $($node).find(\"*\").andSelf().each(function () {\r\n                        $(this).attr('data-cpid', _.uniqueId(prefix));\r\n                    });\r\n\r\n                    CP_Customizer.preview.restartObserver();\r\n                },\r\n\r\n                insertNode: function ($node, $parent, index) {\r\n\r\n                    CP_Customizer.preview.silentCall(function () {\r\n                        index = (index !== undefined) ? index : $parent.children().length;\r\n                        jQuery($node).insertAt(index, $parent);\r\n\r\n                        this.decorateElements($node);\r\n                        this.markNode($node);\r\n\r\n                        root.CP_Customizer.updateState();\r\n\r\n                        $parent.removeAttr('data-preview-empty');\r\n\r\n                        CP_Customizer.hooks.doAction('after_node_insert', $node);\r\n                    });\r\n                },\r\n\r\n                replaceNode: function ($node, $newNode) {\r\n\r\n                    CP_Customizer.preview.silentCall(function () {\r\n                        jQuery($node).replaceWith($newNode);\r\n\r\n                        this.decorateElements($newNode);\r\n                        this.markNode($newNode);\r\n\r\n                        root.CP_Customizer.updateState();\r\n\r\n                    });\r\n                },\r\n\r\n                hideNode: function ($node) {\r\n                    $node.attr('data-reiki-hidden', 'true');\r\n\r\n                    var $parent = $node.parent();\r\n                    if ($parent.children(':visible').length === 0) {\r\n                        $parent.attr('data-preview-empty', 1);\r\n                    } else {\r\n                        $parent.removeAttr('data-preview-empty');\r\n                    }\r\n                },\r\n\r\n                showNode: function ($node) {\r\n                    $node.removeAttr('data-reiki-hidden');\r\n\r\n                    var $parent = $node.parent();\r\n                    if ($parent.children(':visible').length === 0) {\r\n                        $parent.attr('data-preview-empty', 1);\r\n                    } else {\r\n                        $parent.removeAttr('data-preview-empty');\r\n                    }\r\n                },\r\n\r\n                isNodeVisible: function ($node) {\r\n                    return !($node.is('[data-reiki-hidden]'));\r\n                },\r\n\r\n                removeNode: function ($node, skipUpdate) {\r\n                    CP_Customizer.preview.pauseObserver();\r\n                    var $parent = $node.parent();\r\n                    $node.remove();\r\n\r\n                    if (!skipUpdate) {\r\n                        root.CP_Customizer.updateState();\r\n                    }\r\n\r\n                    if ($parent.children().length === 0) {\r\n                        $parent.attr('data-preview-empty', 1);\r\n                    } else {\r\n                        $parent.removeAttr('data-preview-empty');\r\n                    }\r\n\r\n                    _.delay(function () {\r\n                        root.CP_Customizer.overlays.hideMovableOverlays();\r\n                        var addOverlay = root.CP_Customizer.overlays.addOverlay();\r\n                        root.CP_Customizer.overlays.updateOverlay(addOverlay, addOverlay.data().node, false, true);\r\n                    }, 10);\r\n\r\n                    CP_Customizer.preview.restartObserver();\r\n                },\r\n\r\n\r\n                insertContentSection: function (newRow, index) {\r\n                    index = _.isNumber(index) ? index : undefined;\r\n\r\n                    if (_.isUndefined(index) && this.getRootNode().children('[data-id][data-label]').length) {\r\n                        index = this.getRootNode().children('[data-id][data-label]').last().index() + 1;\r\n                    }\r\n\r\n                    this.insertNode(newRow, this.getRootNode(), index);\r\n                \t//this.decorateSectionsForGutenberg(newRow);\r\n                    this.decorateElements(newRow);\r\n\r\n\r\n                    function colorize(row) {\r\n                        var hasColor = (tinycolor(row.css('background-color')).getAlpha() !== 0);\r\n\r\n                        if (!hasColor && !row.is('[data-bg=\"transparent\"]')) {\r\n                            var prevSection = row.prev('[data-id][data-label]');\r\n\r\n                            if (!prevSection.length) {\r\n                                row.css('background-color', '#ffffff');\r\n                                return;\r\n                            }\r\n\r\n                            var isPrevTransparent = (tinycolor(prevSection.css('background-color')).getAlpha() === 0);\r\n                            var isPrevWhite = (tinycolor(prevSection.css('background-color')).toHex().toUpperCase() === \"FFFFFF\" || tinycolor(prevSection.css('background-color')).toHex().toUpperCase() === \"FFF\");\r\n\r\n                            if (isPrevTransparent || isPrevWhite) {\r\n                                row.css('background-color', '#F5FAFD');\r\n                            } else {\r\n                                row.css('background-color', '#ffffff');\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    colorize(newRow);\r\n\r\n\r\n                    CP_Customizer.renderNodeShortcodes(newRow);\r\n                    // CP_Customizer.hooks.doAction('after_node_insert', newRow);\r\n                    this.jQuery('html, body').animate({\r\n                        'scrollTop': newRow.offset().top\r\n                    });\r\n\r\n                    var exports = CP_Customizer.getSectionExports(newRow.attr('data-export-id'));\r\n                    if (exports.afterInsert && _.isFunction(exports.afterInsert)) {\r\n                        CP_Customizer.one(CP_Customizer.events.STATE_UPDATED, function () {\r\n                            exports.afterInsert(newRow);\r\n                        });\r\n                    }\r\n\r\n                    CP_Customizer.updateState();\r\n\r\n                },\r\n\r\n                editContainerData: function () {\r\n                    var item = $(this),\r\n                        fields = [],\r\n                        elements = item.find('[data-content-code-editable],[data-theme-href],[data-theme],[data-theme-mdi]');\r\n\r\n\r\n                    item.blur();\r\n\r\n                    if (CP_Customizer.hooks.applyFilters('custom_container_data_handle', false, item)) {\r\n                        CP_Customizer.hooks.doAction('custom_container_data_handle', item);\r\n                        CP_Customizer.preview.blur();\r\n                        return;\r\n                    }\r\n\r\n                    if (!elements.length) {\r\n                        elements = item.filter('.mdi');\r\n                    }\r\n\r\n                    CP_Customizer.overlays.updateOverlay(CP_Customizer.overlays.hoverOverlay(), item);\r\n\r\n                    if (item.is('[data-content-code-editable]') || item.is('[data-bg=\"image\"]')) {\r\n                        elements = elements.add(item);\r\n                    }\r\n\r\n                    elements = elements.filter(function (index, elem) {\r\n                        var result = true;\r\n                        elem = $(elem);\r\n\r\n                        for (var i = 0; i < CP_Customizer.__containerDataFilters.length; i++) {\r\n                            var filter = CP_Customizer.__containerDataFilters[i];\r\n                            if (false === filter.call(elem, elem)) {\r\n                                result = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                        return result;\r\n\r\n                    });\r\n\r\n                    elements.each(function (index, elem) {\r\n                        var result = false,\r\n                            setter = false,\r\n                            $elem = $(this);\r\n\r\n                        for (var selector in CP_Customizer.__containerDataHandlers) {\r\n                            if ($elem.is(selector)) {\r\n                                result = CP_Customizer.__containerDataHandlers[selector].getter.call($elem, $elem);\r\n                                setter = CP_Customizer.__containerDataHandlers[selector].setter;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        result = root.CP_Customizer.hooks.applyFilters('container_data_element', result, $elem);\r\n                        if (result !== false) {\r\n                            if (!_.isArray(result)) {\r\n                                result = [result];\r\n                            }\r\n\r\n                            for (var i = 0; i < result.length; i++) {\r\n                                result[i].id = 'item_no_' + index + '_' + i;\r\n                                result[i].setter = setter;\r\n                                result[i].node = $elem;\r\n                            }\r\n\r\n                            fields = fields.concat(result);\r\n                        }\r\n\r\n                    });\r\n\r\n                    var content = '';\r\n                    for (var i = 0; i < fields.length; i++) {\r\n                        var field = fields[i],\r\n                            type = field.type || 'text';\r\n\r\n                        var $fieldContent = $(CP_Customizer.jsTPL[type] ? CP_Customizer.jsTPL[type](field) : '');\r\n\r\n                        if (field.classes) {\r\n                            $fieldContent.addClass(field.classes);\r\n                        }\r\n\r\n                        if (field.ready && _.isFunction(field.ready)) {\r\n                            field.ready($fieldContent);\r\n                        }\r\n\r\n                        $fieldContent.addClass(type);\r\n\r\n                        content += $('<div />').append($fieldContent).html();\r\n                    }\r\n\r\n                    var popupContainer = $('#cp-container-editor');\r\n\r\n\r\n                    function setContent() {\r\n                        for (var i = 0; i < fields.length; i++) {\r\n                            var field = fields[i],\r\n                                value = {},\r\n                                node = field.node\r\n                            if (field.getValue) {\r\n                                value = field.getValue($('[id=\"' + field.id + '\"]'));\r\n                            } else {\r\n                                var _values = $('[id^=\"' + field.id + '\"]').filter('input,textarea,select').map(function (index, elem) {\r\n                                    return {\r\n                                        key: $(this).attr('id').replace(field.id + \"__\", ''),\r\n                                        value: $(this).is('[type=checkbox]') ? this.checked : $(this).val()\r\n                                    };\r\n                                }).toArray();\r\n\r\n                                _(_values).each(function (v) {\r\n                                    value[v.key] = v.value;\r\n                                });\r\n\r\n                                if (_values.length === 1 && value.hasOwnProperty(field.id)) {\r\n                                    value = value[field.id];\r\n                                }\r\n                            }\r\n\r\n                            if (field.setter) {\r\n                                field.setter.call(node, node, value, field.type, field);\r\n                                root.CP_Customizer.hooks.doAction('container_data_element_setter', node, value, field);\r\n                            }\r\n                        }\r\n\r\n                        if (node.is('[data-theme]')) {\r\n                            CP_Customizer.preview.jQuery(node).data('was-changed', true);\r\n                        }\r\n\r\n\r\n                        if (node.closest('[data-theme]').length) {\r\n                            CP_Customizer.preview.jQuery(node.closest('[data-theme]')).data('was-changed', true);\r\n                        }\r\n\r\n\r\n                        CP_Customizer.closePopUps();\r\n                        CP_Customizer.updateState();\r\n                    }\r\n\r\n\r\n                    setContent = CP_Customizer.preview.addSilentExecution(setContent);\r\n\r\n                    popupContainer.find('[id=\"cp-item-ok\"]').off().click(setContent);\r\n\r\n                    popupContainer.find('[id=\"cp-item-cancel\"]').off().click(function () {\r\n                        CP_Customizer.closePopUps();\r\n                    });\r\n\r\n                    popupContainer.find('#cp-items').html(content);\r\n\r\n                    CP_Customizer.popUp(root.CP_Customizer.translateCompanionString('Manage Content'), \"cp-container-editor\", {\r\n                        class: \"data-edit-popup\"\r\n                    });\r\n\r\n                    CP_Customizer.preview.blur(true);\r\n\r\n                },\r\n\r\n                __dataContainers: ['[data-container-editable]', '[data-type=group]'],\r\n\r\n                addDataContainerSelector: function (selector) {\r\n                    this.__dataContainers.push(selector);\r\n                },\r\n\r\n                registerContainerDataHandler: function (selector, handler) {\r\n                    CP_Customizer.preview.addDataContainerSelector(selector);\r\n                    var context = {\r\n                        selector: selector,\r\n                        handler: handler\r\n                    };\r\n\r\n                    CP_Customizer.hooks.addFilter('custom_container_data_handle', function (value, $item) {\r\n                        if ($item.is(this.selector)) {\r\n                            value = true;\r\n                        }\r\n                        return value;\r\n\r\n                    }.bind(context));\r\n\r\n                    CP_Customizer.hooks.addAction('custom_container_data_handle', function ($item) {\r\n                        if ($item.is(this.selector)) {\r\n                            this.handler($item);\r\n                        }\r\n                    }.bind(context));\r\n                },\r\n\r\n\r\n                getContainersSelector: function (addSelectors) {\r\n                    var result = _.clone(this.__dataContainers);\r\n\r\n                    if (_.isArray(addSelectors)) {\r\n                        result = result.concat(addSelectors);\r\n                    } else {\r\n                        if (_.isString(addSelectors)) {\r\n                            result.push(addSelectors);\r\n                        }\r\n                    }\r\n\r\n                    return result.join(',');\r\n                },\r\n\r\n\r\n                addContentBinds: function () {\r\n                    var $ = this.jQuery(),\r\n                        document = this.frame().document,\r\n                        window = this.frame();\r\n\r\n                    $(document).on('mouseover.hoveroverlay', this.getContainersSelector('[data-widgets-area],[data-bg=\"image\"]'), _.debounce(function () {\r\n                   \t\tif (this.hasAttribute(\"data-non-editable\")) return false;\r\n                        var node = $(this);\r\n                        var hoverOverlay = root.CP_Customizer.overlays.hoverOverlay();\r\n\r\n                        if (node.closest('[data-type=group]').length) {\r\n                            node = $(this).closest('[data-type=group]');\r\n                        }\r\n\r\n                        if (node.closest('[data-content-shortcode]').length) {\r\n                            node = node.closest('[data-content-shortcode]');\r\n                        }\r\n\r\n                        root.CP_Customizer.overlays.assignNode(hoverOverlay, node, true);\r\n                        hoverOverlay.show();\r\n\r\n                        var structureAllowsRemoving = (node.parents('[data-type=row]').length || node.parents('[data-type=column]').length)/* && node.siblings().length*/;\r\n                        var isFixed = (node.is('[data-fixed]') || node.parents('[data-fixed]').length);\r\n\r\n                        isFixed = CP_Customizer.hooks.applyFilters('is_fixed_element', isFixed, node);\r\n\r\n                        if (structureAllowsRemoving && !isFixed && node.is(root.CP_Customizer.CONTENT_ELEMENTS)) {\r\n                            hoverOverlay.find('.remove').show();\r\n                        } else {\r\n                            hoverOverlay.find('.remove').hide();\r\n                        }\r\n                    }, 1));\r\n\r\n\r\n                    $(document).on('mouseover.hoveroverlay', '[data-content-editable], .page-content i.mdi, body [data-content-item-container=\"true\"]', _.debounce(function () {\r\n\t\t\t\t\t\tif (this.hasAttribute(\"data-non-editable\")) return false;\r\n                        var node = $(this);\r\n\r\n                        if (node.parent().is('[data-content-item-container=\"true\"]')) {\r\n                            return;\r\n                        }\r\n\r\n                        var hoverOverlay = root.CP_Customizer.overlays.hoverOverlay();\r\n\r\n                        if (node.closest('[data-type=group]').length) {\r\n                            node = $(this).closest('[data-type=group]');\r\n                        }\r\n\r\n                        root.CP_Customizer.overlays.assignNode(hoverOverlay, node);\r\n                        hoverOverlay.show();\r\n\r\n                        if (CP_Customizer.isShortcodeContent(node)) {\r\n                            hoverOverlay.find('.remove').hide();\r\n\r\n                            if (!CP_Customizer.isOnCanvasMod(node)) {\r\n                                hoverOverlay.hide();\r\n                            }\r\n                        } else {\r\n                            var inRow = node.parents('[data-type=row]').length || node.parents('[data-type=column]').length;\r\n                            if (inRow && !node.is('[data-fixed]') && !node.closest('[data-fixed]').length) {\r\n                                hoverOverlay.find('.remove').show();\r\n                            } else {\r\n                                hoverOverlay.find('.remove').hide();\r\n                            }\r\n                        }\r\n\r\n\r\n                    }, 1));\r\n\r\n                    $(document).on('mouseover.hoveroverlay', '.page-content [data-content-shortcode]', function () {\r\n\r\n                        if (CP_Customizer.isShortcodeEditable($(this))) {\r\n                            var overlay = root.CP_Customizer.overlays.hoverOverlay();\r\n                            root.CP_Customizer.overlays.assignNode(overlay, $(this));\r\n                            overlay.show();\r\n                        }\r\n                    });\r\n\r\n\r\n                    $(document).on('mouseover', root.CP_Customizer.preview.getPageContainerSelector() + ' > div', function () {\r\n                        root.CP_Customizer.trigger('content.section.hovered', [$(this)]);\r\n                    });\r\n\r\n\r\n                    $(document).on('mouseover', '[data-type=\"richtext\"]', function () {\r\n                        var hoverOverlay = root.CP_Customizer.overlays.hoverOverlay();\r\n                        root.CP_Customizer.overlays.assignNode(hoverOverlay, $(this), true);\r\n\r\n                    });\r\n\r\n\r\n                    $(document).on('mouseover.addoverlay', '.page-content [data-type=\"row\"] > div, [data-theme] [data-type=\"row\"] > div, .page-content [data-type=\"column\"]', function () {\r\n\r\n                        if ($(this).closest(\"[data-type=\\\"row\\\"]\").is('[data-fixed]')) {\r\n                            return;\r\n                        }\r\n\r\n                        if ($(this).find('[data-type=column]').length) {\r\n                            return;\r\n                        }\r\n\r\n                        if ($(this).closest('[data-content-shortcode]').length) {\r\n                            return;\r\n                        }\r\n\r\n                        var addOverlay = root.CP_Customizer.overlays.addOverlay();\r\n                        root.CP_Customizer.overlays.assignNode(addOverlay, $(this));\r\n                        addOverlay.show();\r\n                    });\r\n\r\n\r\n                    $(document).on('mouseover.rowitemoverlay', '.page-content [data-type=\"row\"] > div, [data-theme] [data-type=\"row\"] > div, .page-content [data-type=\"row\"] > div, [data-theme] [data-type=\"row\"] > div * ', function () {\r\n                            var node = $(this);\r\n\r\n                            if (!node.parent().is('[data-type=\"row\"]')) {\r\n                                var parents = node.parentsUntil('[data-type=\"row\"]');\r\n                                node = parents.last();\r\n                            }\r\n\r\n                            if (CP_Customizer.isShortcodeContent(node)) {\r\n                                return;\r\n                            }\r\n\r\n\r\n                            var itemOverlay = root.CP_Customizer.overlays.rowItemHoverOverlay();\r\n                            root.CP_Customizer.overlays.assignNode(itemOverlay, node);\r\n                            itemOverlay.show();\r\n                        }\r\n                    );\r\n\r\n                    $(window).on('scroll', root.CP_Customizer.overlays.updateAllOverlays);\r\n                    $(window).on('resize', _(root.CP_Customizer.overlays.updateAllOverlays).debounce(50));\r\n\r\n                    $(document).on('click', this.getContainersSelector(), root.CP_Customizer.preview.editContainerData);\r\n\r\n                    $(document).on('click', 'body [data-content-editable]', function () {\r\n                        $(this).focus();\r\n                    });\r\n\r\n                    $(document).on('click', 'img[data-content-editable], [data-bg=\"image\"]', function () {\r\n\r\n\r\n                        var self = $(this),\r\n                            type = \"image\",\r\n                            data = {};\r\n\r\n                        if (self.is(CP_Customizer.preview.getContainersSelector())) {\r\n                            return;\r\n                        }\r\n\r\n                        var section = CP_Customizer.preview.getNodeSection(self);\r\n                        var sectionExports = CP_Customizer.getSectionExports(section);\r\n\r\n                        var flexible = _.isUndefined(sectionExports.maintainCropPropotion) ? true : sectionExports.maintainCropPropotion;\r\n\r\n                        if (self.is('[data-size-flexible=false]')) {\r\n                            flexible = false;\r\n                        }\r\n\r\n                        if (self.attr('data-size')) {\r\n                            var size = self.attr('data-size').split('x');\r\n                            type = \"cropable\";\r\n                            data = {\r\n                                width: size[0],\r\n                                height: size[1] ? size[1] : size[0],\r\n                                flexible: flexible\r\n                            };\r\n                        } else {\r\n                            data = {\r\n                                width: self.width(),\r\n                                height: self.height(),\r\n                                flexible: true\r\n                            };\r\n                        }\r\n\r\n                        root.CP_Customizer.openMediaBrowser(type, setterCB, data);\r\n\r\n                        function setterCB(src) {\r\n                            if (!src) {\r\n                                return;\r\n                            }\r\n                            if (self.is('img')) {\r\n                                self.attr('src', src[0].url);\r\n\r\n                                // remove attributes added by other plugins like JetPack\r\n                                self.removeAttr('srcset');\r\n                                self.removeAttr('src-orig');\r\n                                self.removeAttr('width');\r\n                                self.removeAttr('height');\r\n\r\n                            } else {\r\n                                self.css('background-image', 'url(' + src[0].url + ')');\r\n                            }\r\n\r\n                            root.CP_Customizer.markSave();\r\n                        }\r\n                    });\r\n\r\n                    $(document).on('click', 'i.mdi', function () {\r\n                        if (CP_Customizer.hooks.applyFilters('can_edit_icon', true, $(this))) {\r\n                            CP_Customizer.preview.editContainerData.apply(this);\r\n                        }\r\n                    });\r\n\r\n                    var cachedValue = \"\";\r\n                    $(document).on('mousedown', '.page-content [data-content-editable]', function (event) {\r\n                        cachedValue = $(this).text();\r\n                    });\r\n\r\n\r\n                    $(document).on('mouseup', '.page-content [data-content-editable]', function () {\r\n                        if ($(this).text() !== cachedValue) {\r\n                            root.CP_Customizer.markSave();\r\n                            cachedValue = $(this).text();\r\n                        } else {\r\n                            cachedValue = \"\";\r\n                        }\r\n                    });\r\n\r\n                    //Check for IE ('Trident')\r\n                    var contentEditableInputEvent = /Trident/.test(navigator.userAgent) ? 'textinput' : 'input';\r\n\r\n\r\n                    $(document).on(contentEditableInputEvent, 'body [data-content-editable]', function () {\r\n                        if ($(this).is('[data-theme]')) {\r\n                            $(this).data('was-changed', true);\r\n                            return;\r\n                        }\r\n\r\n                        root.CP_Customizer.overlays.updateOverlay(root.CP_Customizer.overlays.hoverOverlay(), $(this), false, true);\r\n                        root.CP_Customizer.markSave();\r\n                    });\r\n\r\n\r\n                    $(document).on('blur', 'body [data-theme]', function () {\r\n                        if ($(this).data('was-changed')) {\r\n                            root.CP_Customizer.markSave();\r\n                        }\r\n                    });\r\n\r\n                    var elementsSpecificSelector = CP_Customizer.TEXT_ELEMENTS.split(',').map(function (item) {\r\n                        var result = CP_Customizer.preview.getPageContainerSelector() + ' ' + item;\r\n\r\n                        result += \", [data-theme] \" + item;\r\n                        return result;\r\n                    });\r\n\r\n                    elementsSpecificSelector.push('[data-theme]');\r\n\r\n                    elementsSpecificSelector = elementsSpecificSelector.join(',');\r\n\r\n                    var elementsOnFocusLeave = _.debounce(function () {\r\n                        var $this = $(this);\r\n                        root.CP_Customizer.preview.markNode($this);\r\n\r\n                        if ($this.is(root.CP_Customizer.CONTENT_ELEMENTS) && $this.html().trim().length === 0) {\r\n                            $this.attr('data-preview-empty', 1);\r\n                        }\r\n                    }, 10);\r\n\r\n                    $(document).on('blur focusout', elementsSpecificSelector, elementsOnFocusLeave);\r\n\r\n                    $(document).on('focus', elementsSpecificSelector, function (event) {\r\n                        var $this = $(this);\r\n                        $this.removeAttr('data-preview-empty');\r\n\r\n                        if ($this.is('.mdi')) {\r\n                            event.preventDefault();\r\n                            event.stopPropagation();\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n\r\n                    $(document).on('keydown.cp', '[contenteditable=true]', function (event) {\r\n\r\n                        var editedNode = this;\r\n\r\n                        _.delay(function () {\r\n                            root.CP_Customizer.overlays.updateOverlay(root.CP_Customizer.overlays.hoverOverlay(), $(editedNode), false, true);\r\n                            $(editedNode).removeAttr('data-preview-empty');\r\n                        }, 20);\r\n\r\n                    });\r\n\r\n                    $(document).on('keypress.cp', '[contenteditable=true]', function (event) {\r\n\r\n                        if (event.which !== 13)\r\n                            return true;\r\n\r\n                        var document = CP_Customizer.preview.frame().document;\r\n\r\n                        var docFragment = document.createDocumentFragment();\r\n                        //add a new line\r\n                        var newEle = document.createTextNode('\\n');\r\n                        docFragment.appendChild(newEle);\r\n                        //add the br, or p, or something else\r\n                        newEle = document.createElement('br');\r\n                        docFragment.appendChild(newEle);\r\n\r\n                        var caretPosition = root.CP_Customizer.preview.getSelectionTextInfo(this);\r\n\r\n                        //make the br replace selection\r\n                        var range = window.getSelection().getRangeAt(0);\r\n                        range.deleteContents();\r\n                        range.insertNode(docFragment);\r\n                        //create a new range\r\n                        range = document.createRange();\r\n                        range.setStartAfter(newEle);\r\n                        range.collapse(true);\r\n                        //make the cursor there\r\n                        var sel = window.getSelection();\r\n                        sel.removeAllRanges();\r\n                        sel.addRange(range);\r\n\r\n                        event.preventDefault();\r\n\r\n                        $(this).trim();\r\n\r\n                        root.CP_Customizer.overlays.updateOverlay(root.CP_Customizer.overlays.hoverOverlay(), $(this), false, true);\r\n\r\n                        return false;\r\n\r\n                    });\r\n\r\n                    $(document).on('blur.cpmarksave', '[contenteditable=true]', _.debounce(function (event) {\r\n\r\n                        if (!$(this).data('cpFocused')) {\r\n                            return;\r\n                        }\r\n\r\n                        $(this).data('cpFocused', false);\r\n\r\n                        root.CP_Customizer.preview.markNode($(this));\r\n                        root.CP_Customizer.markSave();\r\n                    }, 800));\r\n\r\n                    $(window).bind('keydown', function (event) {\r\n                        if (event.ctrlKey || event.metaKey) {\r\n                            var key = String.fromCharCode(event.which).toLowerCase();\r\n                            if (key === \"s\") {\r\n                                event.preventDefault();\r\n                                event.stopPropagation();\r\n                                root.CP_Customizer.save();\r\n                            }\r\n                        }\r\n                    });\r\n\r\n\r\n                },\r\n                // http://stackoverflow.com/questions/1125292/how-to-move-cursor-to-end-of-contenteditable-entity\r\n                placeCursorAtEnd: function (contentEditableElement) {\r\n                    try {\r\n                        var range, selection,\r\n                            document = this.frame().document,\r\n                            window = this.frame();\r\n                        if (document.createRange) //Firefox, Chrome, Opera, Safari, IE 9+\r\n                        {\r\n                            range = document.createRange(); //Create a range (a range is a like the selection but invisible)\r\n                            range.selectNodeContents(contentEditableElement); //Select the entire contents of the element with the range\r\n                            range.collapse(false); //collapse the range to the end point. false means collapse to end rather than the start\r\n                            selection = window.getSelection(); //get the selection object (allows you to change selection)\r\n                            selection.removeAllRanges(); //remove any selections already made\r\n                            selection.addRange(range); //make the range you have just created the visible selection\r\n                        } else if (document.selection) //IE 8 and lower\r\n                        {\r\n                            range = document.body.createTextRange(); //Create a range (a range is a like the selection but invisible)\r\n                            range.moveToElementText(contentEditableElement); //Select the entire contents of the element with the range\r\n                            range.collapse(false); //collapse the range to the end point. false means collapse to end rather than the start\r\n                            range.select(); //Select the range (make it the visible selection\r\n                        }\r\n                    } catch (e) {\r\n\r\n                    }\r\n                },\r\n\r\n\r\n                decorateMods: function ($container) {\r\n\r\n                    // decorate default mods\r\n                    CP_Customizer.preview.pauseObserver();\r\n                    $container = $container ? this.jQuery($container) : this.find('body');\r\n                    var defaultMods = root.CP_Customizer.preview.getThemeMods($container);\r\n                    var preview = this;\r\n                    defaultMods.each(function () {\r\n                        var $el = $(this);\r\n                        if ($el.is('[data-theme]')) {\r\n                            preview.markNode($el);\r\n                            $el.find('[data-type=\"row\"] > div').each(preview.enableSortable);\r\n                        }\r\n                    });\r\n\r\n                    if (root.CP_Customizer.options().mods) {\r\n                        for (var selector in root.CP_Customizer.options().mods) {\r\n                            var $el = this.find(selector);\r\n                            var modData = root.CP_Customizer.options().mods[selector];\r\n                            if (modData.type) {\r\n                                $el.attr(modData.type, modData.mod);\r\n\r\n                                if (modData.type === \"data-theme\") {\r\n                                    preview.markNode($el);\r\n                                    $el.find('[data-type=\"row\"] > div').each(this.enableSortable);\r\n                                }\r\n                            }\r\n\r\n                            if (modData.atts) {\r\n                                for (var attr in modData.atts) {\r\n                                    $el.attr('data-theme-' + attr, modData.atts[attr]);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    CP_Customizer.preview.restartObserver();\r\n                },\r\n\r\n                //scan siblings and parent siblings until a comment node is found\r\n                getGutenbergBlockCommentStart:function (node)\r\n                {\r\n                    if (!node || (node && node.tagName == \"body\")) return false;\r\n                    if (node.nodeType == Node.COMMENT_NODE) return node;\r\n\r\n                    var previousSibling = node.previousSibling;\r\n                    var maxDepth = 10;\r\n                    while (previousSibling && \r\n                        previousSibling.nodeType != Node.COMMENT_NODE &&\r\n                        maxDepth-- > 0)\r\n                    {\r\n                        previousSibling = previousSibling.previousSibling;\r\n                    }\r\n\r\n                    if (!previousSibling || previousSibling.nodeType != Node.COMMENT_NODE) \r\n                        previousSibling = this.getGutenbergBlockCommentStart(node.parentNode);\r\n                    \r\n                    if (previousSibling.nodeType == Node.COMMENT_NODE)\r\n                    return previousSibling;\r\n                    \r\n                    return false;\r\n                },\r\n\r\n                getGutenbergBlockCommentEnd:function (node)\r\n                {\r\n                    if (!node || (node && node.tagName == \"body\")) return false;\r\n                    if (node.nodeType == Node.COMMENT_NODE) return node;\r\n\r\n                    var nextSibling = node.nextSibling;\r\n                    var maxDepth = 10;\r\n                    while (nextSibling && \r\n                        nextSibling.nodeType != Node.COMMENT_NODE &&\r\n                        maxDepth-- > 0)\r\n                    {\r\n                        nextSibling = nextSibling.nextSibling;\r\n                    }\r\n\r\n                    if (!nextSibling || nextSibling.nodeType != Node.COMMENT_NODE) \r\n                        nextSibling =  this.getGutenbergBlockCommentEnd(node.parentNode);\r\n                    \r\n                    if (nextSibling.nodeType == Node.COMMENT_NODE)\r\n                    return nextSibling;\r\n                    \r\n                    return false;\r\n                },\r\n\r\n\t            disableGutenbergBlocks: function (contentEditableElements)\r\n\t            {\r\n                    var self = this;\r\n                    console.log(self);\r\n                    var dataIdCounter = 1;\r\n\t                contentEditableElements.each(function (i, node) {\r\n\r\n\t                    //add data-non-editable also for node children for gutenberg figure > img case    \r\n\t                    function setNonEditableNodes(node, parent)\r\n\t                    {\r\n\t                        function setNode(node, parent)\r\n\t                        {\r\n\t                            $(node).removeAttr(\"data-content-editable data-container-editable data-content-code-editable contenteditable srcset sizes data-category data-label data-export-id\");\r\n                                if (parent === true) \r\n                                {\r\n                                    $(node).attr(\"data-non-editable\", true);\r\n                                }\r\n\t                        }\r\n\t                        \r\n\r\n\t                        setNode(node, parent);\r\n\t                        for (var i = 0; i < node.childNodes.length; i++) {\r\n\t                            var child = node.childNodes[i];\r\n\t                            setNonEditableNodes(child);\r\n\t                             //delete srcset andsizes attributes so that Gutenberg does not say invalid content\r\n\t                             setNode(node);\r\n\t                          }\r\n\t                    }\r\n\t                    \r\n\r\n\t                    \r\n\t                    //check previous sibling nodes until reaching comment node to skip eventual text nodes\r\n\t                    function nextNonTextNode(node)\r\n\t                    {\r\n\t                        var nextSibling = node;\r\n\t                        var maxDepth = 10;\r\n\t                        while (nextSibling && \r\n\t                            (nextSibling.nodeType == Node.COMMENT_NODE ||\r\n\t                            nextSibling.nodeType == Node.TEXT_NODE) &&\r\n\t                            maxDepth-- > 0)\r\n\t                        {\r\n\t                            nextSibling = nextSibling.nextSibling;\r\n\t                        }\r\n\r\n\t                        return nextSibling;\r\n\t                    }\r\n\r\n\t                    var commentNode = self.getGutenbergBlockCommentStart(node);\r\n\t                    var sectionNode;\r\n\t                    \r\n\t                    if ((commentNode && commentNode.nodeType == Node.COMMENT_NODE) && //check if section has wp:comment\r\n\t                    commentNode.textContent.indexOf(\"wp:\") != -1 && //check if gutenberg block\r\n                        commentNode.textContent.indexOf(\"wp:extendstudio/materialis\") == -1 && //check if not materialis block\r\n                        commentNode.textContent.indexOf(\"wp:extendstudio/mesmerize\") == -1) //check if not mesmerize block\r\n\t                    {\r\n\t                        //set gutenberg block as non editable\r\n\t                        sectionNode = nextNonTextNode(commentNode);\r\n\t                        setNonEditableNodes(sectionNode, true);\r\n\t                    }\r\n\t                });                \r\n\t            },\r\n\t            \r\n                decorateElements: function ($container) {\r\n\r\n\r\n                    CP_Customizer.preview.pauseObserver();\r\n\r\n                    var $ = root.CP_Customizer.preview.jQuery(),\r\n                        self = this;\r\n\r\n                    var elementsContainers = root.CP_Customizer.hooks.applyFilters('decorable_elements_containers', [root.CP_Customizer.preview.getPageContainerSelector(), '[data-dynamic-mod-container]']);\r\n                    $container = $container ? $($container) : root.CP_Customizer.preview.find(elementsContainers.join(','));\r\n\r\n\r\n                    $(function () {\r\n                        var $toDecorate = $(\"\");\r\n                        $toDecorate = $toDecorate.add($container);\r\n                        // $toDecorate = $toDecorate.add($('[data-theme]'));\r\n                        CP_Customizer.overlays.addFixedOverlays($toDecorate);\r\n                    });\r\n\r\n\r\n                    $container.find('a').unbind('click').click(function (event) {\r\n                        event.preventDefault();\r\n                        event.stopImmediatePropagation();\r\n                        event.stopPropagation();\r\n\r\n                        if ($(this).is('[data-container-editable]') || $(this).is('[data-type=group]')) {\r\n                            self.editContainerData.apply(this);\r\n                        }\r\n\r\n                        return false;\r\n                    });\r\n                    var elements = $container.find(root.CP_Customizer.CONTENT_ELEMENTS).filter(function () {\r\n                        return root.CP_Customizer.preview.data().maintainable;\r\n                    });\r\n\r\n                    if ($container.is(root.CP_Customizer.CONTENT_ELEMENTS)) {\r\n                        if (elements.length) {\r\n                            elements.add($container);\r\n                        } else {\r\n                            elements = $container;\r\n                        }\r\n                    }\r\n\r\n\r\n                    elements = elements.filter(function (item) {\r\n                        if ($(this).closest('[data-content-shortcode]').length) {\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    elements = elements.add(root.CP_Customizer.preview.getThemeMods($container).filter(root.CP_Customizer.CONTENT_ELEMENTS));\r\n                    elements.filter('a').each(function () {\r\n                        var $el = $(this);\r\n\r\n                        if ($el.closest(root.CP_Customizer.preview.getPageContainerSelector()).length) {\r\n                            $el.attr('data-container-editable', true);\r\n                        }\r\n\r\n                        if ($el.is('[data-theme]')) {\r\n                            $el.attr('data-container-editable', true);\r\n                        }\r\n\r\n                    });\r\n                    elements.filter('ul').attr('data-container-editable', true);\r\n                    elements = elements.filter(function (item) {\r\n                        if (this.tagName === \"SPAN\" && $(this).parents(CP_Customizer.TEXT_ELEMENTS).length) {\r\n                            return false;\r\n                        }\r\n\r\n                        if ($(this).parents(root.CP_Customizer.preview.getContainersSelector()).length) {\r\n                            $(this).attr('data-content-code-editable', true);\r\n                            return false;\r\n                        }\r\n\r\n                        if ($(this).is(root.CP_Customizer.preview.getContainersSelector())) {\r\n                            $(this).attr('data-content-code-editable', true);\r\n                            return false;\r\n                        }\r\n\r\n                        return true;\r\n                    });\r\n\r\n                    elements.not('i.mdi,a').attr('data-content-editable', true);\r\n                    elements.not('i.mdi,hr,a').attr('contenteditable', true);\r\n\r\n                    elements.filter('i.mdi').each(function () {\r\n                        if ($(this).parent().is(root.CP_Customizer.CONTENT_ELEMENTS)) {\r\n                            return;\r\n                        }\r\n\r\n                        $(this).attr('data-content-editable', true);\r\n                        $(this).attr('contenteditable', true);\r\n                    });\r\n\r\n                    var contentEditableElements = $container.find('[contenteditable=\"true\"]');\r\n\r\n                    if ($container.is('[contentededitable=true]')) {\r\n                        contentEditableElements.add($container);\r\n                    }\r\n\r\n                    contentEditableElements = contentEditableElements.add(root.CP_Customizer.preview.getThemeMods($container).filter('[contenteditable=\"true\"]'));\r\n\r\n\r\n                    var handlePasteEvent = function (e) {\r\n                        var $ = CP_Customizer.preview.jQuery();\r\n\r\n                        var text = '';\r\n                        var that = $(this);\r\n                        var document = CP_Customizer.preview.frame().document;\r\n\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n\r\n                        if (e.clipboardData) {\r\n                            text = e.clipboardData.getData('text/plain');\r\n                        } else if (window.clipboardData) {\r\n                            text = window.clipboardData.getData('Text');\r\n                        } else if (e.originalEvent.clipboardData) {\r\n                            text = $('<div></div>').text(e.originalEvent.clipboardData.getData('text'));\r\n                        }\r\n\r\n                        var textContainer = $('<div/>').append(text);\r\n\r\n                        CP_Customizer.preview.fixWronglyWrappedTextNodes(textContainer);\r\n\r\n                        text = textContainer[0].innerHTML.replace(/\\r\\n/g, '<br/>').replace(/\\r/g, '<br/>').replace(/\\n/g, '<br/>');\r\n\r\n                        if (document.queryCommandSupported('insertText')) {\r\n                            document.execCommand('insertHTML', false, text);\r\n                            return false;\r\n                        }\r\n                        else { // IE > 7\r\n                            that.find('*').each(function () {\r\n                                $(this).addClass('within');\r\n                            });\r\n\r\n                            setTimeout(function () {\r\n                                // nochmal alle durchlaufen\r\n                                that.find('*').each(function () {\r\n                                    // wenn das element keine klasse 'within' hat, dann unwrap\r\n                                    // http://api.jquery.com/unwrap/\r\n                                    $(this).not('.within').contents().unwrap();\r\n                                });\r\n                                root.CP_Customizer.preview.markNode(that);\r\n                            }, 1);\r\n                        }\r\n                        root.CP_Customizer.markSave();\r\n                    };\r\n\r\n                    contentEditableElements.filter('*').each(function () {\r\n                        if (!CP_Customizer.IS_PRO) {\r\n                            this.addEventListener('paste', handlePasteEvent);\r\n                        }\r\n                    });\r\n\r\n                    $container.find('[data-type=\"row\"] > div, [data-type=column]').each(this.enableSortable);\r\n\r\n                    if ($container.is('[data-type=\"row\"] > div, [data-type=column]')) {\r\n                        this.enableSortable.call($container);\r\n                    }\r\n\r\n                    if ($container.closest('.ui-sortable').length) {\r\n                        try {\r\n                            $container.closest('.ui-sortable').sortable('refresh');\r\n                            $container.closest('.ui-sortable').sortable('disable');\r\n                        } catch (e) {\r\n\r\n                        }\r\n                    }\r\n\r\n               \t    this.disableGutenbergBlocks($container.find('[contenteditable=\"true\"], [data-content-code-editable=\"true\"], [class^=wp-]'));\r\n                    root.CP_Customizer.trigger(root.CP_Customizer.events.ELEMENT_DECORATED, [$container]);\r\n                    CP_Customizer.preview.restartObserver();\r\n   \t\t         },\r\n\r\n\t            decorateSectionsForGutenberg: function(sections){\r\n\t                 var sections = sections ? sections : CP_Customizer.preview.getSections();\r\n\r\n\t                 //adds gutenberg block html comment\r\n\t                sections.each(function (i, node) {\r\n\t                    //skip decorate if node already has comment\r\n\t                    if (node.previousSibling && \r\n\t                        node.previousSibling.nodeType == Node.COMMENT_NODE &&\r\n\t                        node.previousSibling.textContent.indexOf(\" wp:extendstudio/materialis\") != -1) \r\n\t                    return;\r\n\r\n\t                    var commentOpen = document.createComment(\" wp:extendstudio/materialis \");\r\n\t                    var commentClose = document.createComment(\" /wp:extendstudio/materialis \");\r\n\t                    node.before(commentOpen);\r\n\t                    node.after(commentClose);\r\n\t                 });\r\n                },\r\n\r\n                enableSortable: function () {\r\n                    var $ = CP_Customizer.preview.jQuery();\r\n                    var $this = $(this);\r\n\r\n                    if ($this.find('[data-type=column]').length) {\r\n                        return;\r\n                    }\r\n\r\n                    if ($this.parent().is('[data-content-shortcode]')) {\r\n                        return;\r\n                    }\r\n\r\n\r\n                    if ($this.children().length === 0) {\r\n                        if ($this.is(root.CP_Customizer.CONTENT_ELEMENTS) && $this.html().trim().length === 0) {\r\n                            $this.attr('data-preview-empty', 1);\r\n                        }\r\n                    }\r\n\r\n                    $this.sortable({\r\n                        axis: \"y\",\r\n                        start: function (event, ui) {\r\n                            ui.helper.css({\r\n                                'display': 'block',\r\n                            });\r\n                        },\r\n                        stop: function (evt, ui) {\r\n                            $this.sortable('disable');\r\n                            $('.node-hover-overlay[is-dragging=true]').removeAttr('is-dragging');\r\n                            $(ui.item).data('reikidragging', false);\r\n                            ui.item.removeAttr(\"style\");//button drag left:0px fix\r\n\r\n                            function refreshOverlay() {\r\n                                root.CP_Customizer.overlays.assignNode(root.CP_Customizer.overlays.hoverOverlay(), $(ui.item));\r\n                                root.CP_Customizer.overlays.updateOverlay(root.CP_Customizer.overlays.hoverOverlay(), $(ui.item));\r\n                            }\r\n\r\n                            ui.item.css('display', '');\r\n                            ui.item.css('transition', '');\r\n                            setTimeout(refreshOverlay, 10);\r\n                            $('[contenteditable]').attr('contenteditable', true);\r\n                            root.CP_Customizer.isSorting = false;\r\n                            root.CP_Customizer.updateState();\r\n                        },\r\n                        deactivate: function (evt, ui) {\r\n                            $('.node-hover-overlay[is-dragging=true]').removeAttr('is-dragging');\r\n                        },\r\n                        cursorAt: {\r\n                            left: 0,\r\n                            top: 0\r\n                        }\r\n\r\n                    });\r\n                    $this.sortable('disable');\r\n                },\r\n\r\n                showTextElementCUI: function (node) {\r\n                    CP_Customizer.preview.pauseObserver();\r\n\r\n                    $(node).off('paste.cp_customizer').on('paste.cp_customizer', function (event) {\r\n                        var clipboardData = null;\r\n                        var mimeType = \"\";\r\n                        var window = CP_Customizer.preview.frame();\r\n                        var document = window.document;\r\n\r\n\r\n                        event.preventDefault();\r\n                        // event.stopPropagation();\r\n                        // event.stopImmediatePropagation();\r\n\r\n                        if (event.clipboardData) {\r\n                            clipboardData = event.clipboardData;\r\n                            mimeType = 'text/plain';\r\n                        } else if (window.clipboardData) {\r\n                            clipboardData = window.clipboardData;\r\n                            mimeType = 'Text';\r\n                        } else if (event.originalEvent.clipboardData) {\r\n                            clipboardData = event.originalEvent.clipboardData;\r\n                            mimeType = 'text';\r\n                        }\r\n\r\n                        var text = clipboardData.getData(mimeType);\r\n                        text = CP_Customizer.utils.wpautop(text.replace(/\\n\\s*\\n/g, '\\n'));\r\n                        var textContainer = $('<div/>').append(text);\r\n\r\n                        CP_Customizer.preview.fixWronglyWrappedTextNodes(textContainer);\r\n\r\n                        text = textContainer[0].innerHTML;\r\n\r\n                        if (document.queryCommandSupported('insertText')) {\r\n                            document.execCommand('insertHTML', false, text);\r\n                            return false;\r\n                        }\r\n                        else { // IE > 7\r\n                            that.find('*').each(function () {\r\n                                $(this).addClass('within');\r\n                            });\r\n\r\n                            setTimeout(function () {\r\n                                // nochmal alle durchlaufen\r\n                                that.find('*').each(function () {\r\n                                    // wenn das element keine klasse 'within' hat, dann unwrap\r\n                                    // http://api.jquery.com/unwrap/\r\n                                    $(this).not('.within').contents().unwrap();\r\n                                });\r\n                            }, 1);\r\n                        }\r\n\r\n                    });\r\n\r\n                    node = $(node)[0];\r\n\r\n                    var cui = this.getTextElementCUI();\r\n\r\n                    if (!cui) {\r\n                        CP_Customizer.logError('TinyMCE Editor not found');\r\n                        return;\r\n                    }\r\n\r\n                    cui.hidden = false;\r\n                    cui.target = node;\r\n                    cui.bodyElement = node;\r\n                    cui.show();\r\n                    cui.fire('focusin');\r\n                    cui.undoManager.clear();\r\n                    cui.theme.panel.getEl().classList.add('cp-tinymce-inline');\r\n                    cui.theme.panel.getEl().style.display = \"block\";\r\n\r\n\r\n                    var docWidth = Math.min(CP_Customizer.preview.frame().innerWidth, CP_Customizer.preview.jQuery('html').width()),\r\n                        cuiRect = cui.theme.panel.getEl().getBoundingClientRect(),\r\n                        nodeWidth = CP_Customizer.preview.jQuery(node).width(),\r\n                        nodeOffsetLeft = CP_Customizer.preview.jQuery(node).offset().left;\r\n\r\n\r\n                    var newLeft = (nodeOffsetLeft - (cuiRect.width - nodeWidth) * 0.5);\r\n\r\n                    if (newLeft < 0) {\r\n                        newLeft = nodeOffsetLeft;\r\n                    }\r\n\r\n                    if (newLeft + cuiRect.width > docWidth) {\r\n                        newLeft = nodeOffsetLeft + nodeWidth - cuiRect.width;\r\n\r\n                    }\r\n                    cui.theme.panel.getEl().style.left = newLeft + 'px';\r\n\r\n                },\r\n\r\n                hideTextElementCUI: function () {\r\n                    var cui = this.getTextElementCUI();\r\n\r\n                    if (!cui) {\r\n                        CP_Customizer.logError('TinyMCE Editor not found');\r\n                        return;\r\n                    }\r\n\r\n\r\n                    if (cui.theme && cui.theme.panel) {\r\n                        cui.theme.panel.getEl().style.display = \"none\";\r\n                    }\r\n\r\n                    if (cui.getBody()) {\r\n                        cui.fire('focusout');\r\n                        // cui.hide();\r\n                    }\r\n                },\r\n\r\n                getFonts: function () {\r\n\r\n                    var defaultFonts = {\r\n                        \"Arial\": \"arial,helvetica,sans-serif\",\r\n                        \"Arial Black\": \"arial black,sans-serif\",\r\n                        \"Andale Mono\": \"andale mono,monospace\",\r\n                        // \"Book Antiqua\": \"book antiqua,palatino,serif\",\r\n                        // \"Comic Sans MS\": \"comic sans ms,sans-serif\",\r\n                        // \"Courier New\": \"courier new,courier,monospace\",\r\n                        // \"Georgia\": \"georgia,palatino,serif\",\r\n                        // \"Helvetica\": \"helvetica,arial,sans-serif\",\r\n                        // \"Impact\": \"impact,sans-serif\",\r\n                        // \"Symbol\": \"symbol\",\r\n                        \"Tahoma\": \"tahoma,arial,helvetica,sans-serif\",\r\n                        \"Terminal\": \"terminal,monaco,monospace\",\r\n                        \"Times New Roman\": \"times new roman,times,serif\",\r\n                        // \"Trebuchet MS\": \"trebuchet ms,geneva,sans-serif\",\r\n                        \"Verdana\": \"verdana,geneva,sans-serif\"\r\n                        // \"Webdings\": \"webdings\",\r\n                        // \"Wingdings\": \"wingdings,zapf dingbats\"\r\n                    };\r\n\r\n                    var googleFonts = {};\r\n\r\n                    if (root.CP_Customizer.pluginOptions.data.fonts) {\r\n                        for (var font in root.CP_Customizer.pluginOptions.data.fonts) {\r\n                            googleFonts[font] = font + \",arial,helvetica,sans-serif\";\r\n                        }\r\n                    }\r\n\r\n                    googleFonts = root.CP_Customizer.hooks.applyFilters('tinymce_google_fonts', googleFonts);\r\n\r\n                    var fonts = _.extend(googleFonts, defaultFonts);\r\n\r\n                    fonts.toTinyMCEFormat = function () {\r\n                        var result = [];\r\n                        for (var font in this) {\r\n                            if (_.isString(this[font])) {\r\n                                result.push(font + \"=\" + this[font]);\r\n                            }\r\n                        }\r\n\r\n                        return result.join(';');\r\n                    };\r\n\r\n                    return fonts;\r\n                },\r\n\r\n                getNodeFont: function (node) {\r\n                    var $node = this.jQuery(node)\r\n                    var font = $node.css('font-family');\r\n                    var fontArray = font.replace(/[\\'\\\"]/g, '').replace(/\\s/g, '').toLowerCase().split(',');\r\n                    var fonts = this.getFonts();\r\n\r\n                    if (_.isObject(fonts)) {\r\n                        for (var name in fonts) {\r\n                            if (_.isString(fonts[name])) {\r\n                                var _fontArray = fonts[name].replace(/[\\'\\\"]/g, '').replace(/\\s/g, '').toLowerCase().split(',');\r\n                                if (_.difference(_fontArray, fontArray).length === 0) {\r\n                                    return name;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return font;\r\n                },\r\n\r\n                getFontWeights: function (font) {\r\n                    var fonts = CP_Customizer.utils.getValue('web_fonts');\r\n\r\n                    if (fonts) {\r\n                        for (var i = 0; i < fonts.length; i++) {\r\n                            var _font = fonts[i];\r\n                            if (_font.family.toLowerCase() === font.toLowerCase()) {\r\n                                var weights = [];\r\n                                for (var w = 0; w < _font.weights.length; w++) {\r\n                                    var weight = _font.weights[w];\r\n                                    if (weight === 'normal' || weight === 'regular') {\r\n                                        weight = '400';\r\n                                    } else {\r\n                                        try {\r\n                                            weight = parseInt(weight).toString();\r\n                                        } catch (e) {\r\n\r\n                                        }\r\n                                    }\r\n\r\n                                    if (weights.indexOf(weight) === -1) {\r\n                                        weights.push(weight);\r\n                                    }\r\n                                }\r\n                                return weights;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return ['100', '200', '300', '400', '500', '600', '700', '800', '900'];\r\n                },\r\n\r\n                getTextElementCUI: function () {\r\n                    var editorID = 'cp-tinymce-cui-editor';\r\n                    var editor = root.CP_Customizer.preview.frame().tinymce ? root.CP_Customizer.preview.frame().tinymce.get(editorID) : 'cp-editor-not-found';\r\n\r\n                    if (editor === 'cp-editor-not-found') {\r\n                        return undefined;\r\n                    }\r\n\r\n                    var self = this;\r\n                    if (!editor) {\r\n                        this.jQuery('body').after('<div id=\"' + editorID + '\"></div>');\r\n                        var options = {\r\n                            \"selector\": \"#\" + editorID,\r\n                            inline: true,\r\n                            style_formats_merge: true,\r\n                            extended_valid_elements: 'span',\r\n                            \"formats\": {\r\n                                alignment: {selector: 'p,h1,h2,h3,h4,h5,h6', styles: {textAlign: '%value'}},\r\n                                fontweight: {inline: 'span', styles: {fontWeight: '%value'}},\r\n                                fontsize: {inline: 'span', styles: {fontSize: '%value'}},\r\n                                fontcolor: {inline: 'span', styles: {color: '%value'}},\r\n                                italic: {inline: 'span', styles: {fontStyle: 'italic'}},\r\n\r\n                            },\r\n                            \"menubar\": false,\r\n                            \"theme\": \"modern\",\r\n                            \"skin\": \"lightgray\",\r\n                            \"toolbar\": 'fontselect addwebfont font-weight font-size-popup | italic underline strikethrough superscript subscript alignment  font-color-popup | removeformat',\r\n                            \"font_formats\": this.getFonts().toTinyMCEFormat(),\r\n                            \"paste_as_text\": true,\r\n                            \"forced_root_block\": false,\r\n                            setup: function (ed) {\r\n                                var bm;\r\n\r\n                                ed.addButton('font-weight', {\r\n                                    type: 'listbox',\r\n                                    text: root.CP_Customizer.translateCompanionString('Font Weight'),\r\n                                    icon: false,\r\n                                    onselect: function (e) {\r\n                                        ed.formatter.apply('fontweight', {value: this.value()});\r\n                                    },\r\n                                    values: [\r\n                                        {text: 'Thin (100)', value: '100'},\r\n                                        {text: 'Extra light (200)', value: '200'},\r\n                                        {text: 'Light (300)', value: '300'},\r\n                                        {text: 'Normal (400)', value: '400'},\r\n                                        {text: 'Medium (500)', value: '500'},\r\n                                        {text: 'Semi Bold (600)', value: '600'},\r\n                                        {text: 'Bold (700)', value: '700'},\r\n                                        {text: 'Extra Bold (800)', value: '800'},\r\n                                        {text: 'Black (900)', value: '900'}\r\n                                    ],\r\n                                    onPostRender: function () {\r\n\r\n                                        // add font control separator//\r\n                                        var fontControl = ed.theme.panel.controlIdLookup['mceu_0'];\r\n                                        fontControl.on('showMenu', function (e) {\r\n                                            var items = this.menu.items();\r\n                                            for (var i in items) {\r\n                                                var item = items[i];\r\n\r\n                                                if (!_.isFunction(item.text)) {\r\n                                                    continue;\r\n                                                }\r\n\r\n                                                if (item.text().raw.toLowerCase() == 'arial') {\r\n                                                    item.$el.addClass('first-system-font');\r\n                                                }\r\n                                            }\r\n                                        });\r\n\r\n                                        var btn = this;\r\n                                        ed.on('NodeChange', _.debounce(function (e) {\r\n                                            var weight = jQuery(e.element || ed.selection.getNode()).css('font-weight');\r\n                                            if (weight === \"bold\") weight = \"700\";\r\n                                            if (weight === \"normal\") weight = \"400\";\r\n                                            btn.value(weight);\r\n                                        }, 10));\r\n\r\n                                        btn.on('show', function (e) {\r\n                                            ed.theme.panel.getEl().style.display = \"block\";\r\n                                            e.control.$el.css({top: this.$el.offset().top + 34, left: this.$el.offset().left})\r\n                                        });\r\n\r\n                                        btn.on('showMenu', function () {\r\n                                            var font = CP_Customizer.preview.getNodeFont(ed.selection.getNode());\r\n                                            var weights = CP_Customizer.preview.getFontWeights(font);\r\n                                            for (var i in btn.menu.items()) {\r\n                                                var item = btn.menu.items()[i];\r\n\r\n                                                if (!_.isFunction(item.value)) {\r\n                                                    continue;\r\n                                                }\r\n\r\n                                                if (weights.indexOf(item.value()) === -1) {\r\n                                                    item.$el.hide();\r\n                                                } else {\r\n                                                    item.$el.show();\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n\r\n\r\n                                ed.addButton('alignment', {\r\n                                    type: 'listbox',\r\n                                    text: root.CP_Customizer.translateCompanionString(''),\r\n                                    icon: true,\r\n                                    onselect: function (e) {\r\n                                        ed.formatter.apply('alignment', {value: this.value()});\r\n                                    },\r\n                                    values: [\r\n                                        {\r\n                                            icon: 'alignleft',\r\n                                            text: root.CP_Customizer.translateCompanionString(''),\r\n                                            value: 'left'\r\n                                        },\r\n                                        {\r\n                                            icon: 'aligncenter',\r\n                                            text: root.CP_Customizer.translateCompanionString(''),\r\n                                            value: 'center'\r\n                                        },\r\n                                        {\r\n                                            icon: 'alignright',\r\n                                            text: root.CP_Customizer.translateCompanionString(''),\r\n                                            value: 'right'\r\n                                        },\r\n                                        {\r\n                                            icon: 'alignjustify',\r\n                                            text: root.CP_Customizer.translateCompanionString(''),\r\n                                            value: 'justify'\r\n                                        }\r\n                                    ],\r\n                                    onPostRender: function () {\r\n                                        var btn = this;\r\n                                        ed.on('NodeChange', function (e) {\r\n                                            var textAlign = jQuery(ed.selection.getNode()).css('text-align');\r\n                                            btn.value(textAlign);\r\n                                            btn.icon('align' + textAlign);\r\n\r\n                                            //Disable text alignment for header elements\r\n                                            if (jQuery(e.element).parents('.header-wrapper').length)\r\n                                            {\r\n                                                btn.$el.hide();\r\n                                            } else\r\n                                            {\r\n                                                btn.$el.show();\r\n                                            }\r\n                                        });\r\n\r\n                                        btn.on('show', function (e) {\r\n                                            ed.theme.panel.getEl().style.display = \"block\";\r\n                                            e.control.$el.css({top: this.$el.offset().top + 34, left: this.$el.offset().left})\r\n                                            e.control.$el.eq(0).css('min-width', '10px');\r\n                                        });\r\n                                    }\r\n                                });\r\n\r\n                                ed.addButton('addwebfont', {\r\n                                    type: 'button',\r\n                                    icon: 'insert',\r\n                                    tooltip: root.CP_Customizer.translateCompanionString(\"Add web font\"),\r\n                                    onPostRender: function () {\r\n                                        this.on(\"click\", function () {\r\n                                            top.wp.customize.control('web_fonts').focus()\r\n                                        });\r\n                                    }\r\n                                });\r\n                                ed.addButton('font-color-popup', {\r\n                                    type: \"colorbutton\",\r\n                                    icon: false,\r\n\r\n\r\n                                    onPostRender: function () {\r\n                                        var btn = this;\r\n\r\n                                        self.jQuery(this.getEl()).spectrum({\r\n                                            showAlpha: true,\r\n\r\n                                            preferredFormat: \"rgb\",\r\n                                            showInput: true,\r\n                                            show: function () {\r\n                                                //console.log(this);\r\n\r\n                                                var colorPalette = CP_Customizer.hooks.applyFilters('spectrum_color_palette', []);\r\n\r\n\r\n                                                var color = jQuery(ed.selection.getNode()).css('color');\r\n                                                var spectrumEl = self.jQuery(btn.getEl());\r\n\r\n                                                var container = spectrumEl.spectrum(\"container\");\r\n                                                spectrumEl.spectrum(\"set\", color);\r\n\r\n                                                spectrumEl.spectrum(\"option\", \"showPalette\", colorPalette.length > 0);\r\n\r\n                                                if (colorPalette.length > 0) {\r\n\r\n                                                    // group colors a 3 per row\r\n                                                    colorPalette = CP_Customizer.utils.arrayChunk(colorPalette, 3);\r\n\r\n                                                    spectrumEl.spectrum(\"option\", \"palette\", colorPalette);\r\n                                                }\r\n\r\n\r\n                                                var offTop = container.offset().top\r\n                                                var scrollTop = self.frame().scrollY;\r\n\r\n                                                container.css({\r\n                                                    top: self.jQuery(btn.getEl()).offset().top - scrollTop + 30,\r\n                                                    \"left\": \"auto\",\r\n                                                    \"right\": CP_Customizer.preview.frame().innerWidth - jQuery(btn.getEl()).offset().left - 40\r\n                                                });\r\n\r\n                                                self.jQuery(self.jQuery('body')[0].ownerDocument).scroll(function () {\r\n                                                    var offTop = container.offset().top\r\n                                                    var scrollTop = self.jQuery('body').scrollTop();\r\n\r\n                                                    container.offset({\r\n                                                        top: self.jQuery(btn.getEl()).offset().top - scrollTop + 30\r\n                                                    });\r\n                                                });\r\n\r\n                                            },\r\n                                            change: function (color) {\r\n                                                var col = color.toRgbString();\r\n                                                btn.value(col);\r\n\r\n                                                ed.selection.moveToBookmark(bm);\r\n                                                ed.formatter.apply('fontcolor', {value: col});\r\n                                            }\r\n                                        });\r\n\r\n                                        btn.on(\"click\", function () {\r\n                                            bm = ed.selection.getBookmark();\r\n                                        });\r\n\r\n                                        ed.on('NodeChange', function (e) {\r\n                                            var color = jQuery(ed.selection.getNode()).css('color');\r\n                                            btn.color(color);\r\n                                            self.jQuery(btn.getEl()).spectrum(\"set\", color);\r\n                                        });\r\n\r\n                                        function onEditorBlur(e) {\r\n                                            self.jQuery(btn.getEl()).spectrum('hide');\r\n                                            CP_Customizer.preview.restartObserver();\r\n                                        }\r\n\r\n                                        ed.on('blur', onEditorBlur);\r\n\r\n\r\n                                    }\r\n                                });\r\n                                ed.on('focus', function (e) {\r\n                                    // _.delay(function () {\r\n                                    //     var editorEL = e.target.theme.panel.getEl(),\r\n                                    //         node = e.target.bodyElement,\r\n                                    //         margin = ($(node).width() - $(editorEL).width()) / 2;\r\n                                    //\r\n                                    //     $(editorEL).css({\r\n                                    //         'margin-left': margin\r\n                                    //     });\r\n                                    // }, 0);\r\n                                });\r\n\r\n                                updateOnEditorBlur = _.debounce(function (e) {\r\n                                    _.delay(function () {\r\n                                        var $node = $(e.target.bodyElement);\r\n                                        CP_Customizer.preview.markNode($node);\r\n\r\n                                        if ($node.is('[data-theme]')) {\r\n                                            CP_Customizer.preview.jQuery($node).data('was-changed', true);\r\n                                        }\r\n                                        CP_Customizer.updateState();\r\n                                    }, 0);\r\n                                }, 100);\r\n\r\n                                ed.on('blur', updateOnEditorBlur);\r\n\r\n                            }\r\n                        };\r\n                        root.CP_Customizer.preview.frame().tinymce.init(options);\r\n                        editor = root.CP_Customizer.preview.frame().tinymce.get(editorID);\r\n\r\n                    }\r\n\r\n                    return editor;\r\n                },\r\n\r\n                blur: function (overlayOnly) {\r\n                    var hoverOverlay = CP_Customizer.overlays.hoverOverlay();\r\n                    var hoveredNode = CP_Customizer.preview.jQuery(hoverOverlay.data().node);\r\n\r\n                    // hoverOverlay.deactivateHeatZone();\r\n\r\n                    var fakeNode = CP_Customizer.preview.jQuery(\"<p contenteditable='true' style='display: none;' />\");\r\n\r\n                    CP_Customizer.overlays.assignNode(hoverOverlay, fakeNode);\r\n\r\n                    if (overlayOnly) {\r\n                        return;\r\n                    }\r\n\r\n                    if (CP_Customizer.preview.getTextElementCUI()) {\r\n                        CP_Customizer.preview.getTextElementCUI().fire('blur');\r\n                    }\r\n\r\n\r\n                }\r\n            },\r\n\r\n            overlays: {\r\n\r\n\r\n                addFixedOverlays: function ($startNode) {\r\n                    var $ = root.CP_Customizer.preview.jQuery();\r\n\r\n                    if ($startNode.length > 1) {\r\n\r\n                        var self = this;\r\n                        $startNode.each(function () {\r\n                            self.addFixedOverlays($(this));\r\n                        });\r\n                        return;\r\n\r\n                    }\r\n                    $startNode = $startNode || $('body');\r\n\r\n                    if ($startNode.closest('[data-type=\"row\"]').length || $startNode.closest('[data-type=\"column\"]').length) {\r\n                        return;\r\n                    }\r\n\r\n                    root.CP_Customizer.trigger(root.CP_Customizer.events.ADD_FIXED_OVERLAYS, [$startNode]);\r\n\r\n                },\r\n\r\n\r\n                __fixedOverlayOptions: {},\r\n                registerFixedOverlayOptions: function (name, options) {\r\n\r\n                    if (_.isObject(name)) {\r\n                        _.each(name, function (options, key) {\r\n                            CP_Customizer.overlays.registerFixedOverlayOptions(key, options);\r\n                        });\r\n                    } else {\r\n\r\n                        if (!this.__fixedOverlayOptions.hasOwnProperty(name)) {\r\n                            this.__fixedOverlayOptions[name] = options;\r\n                        } else {\r\n                            // console.error(\"Overlay options name '\" + name + \"' already exists\");\r\n                        }\r\n                    }\r\n\r\n                },\r\n\r\n                getOverlayOptionButton: getButtonElement,\r\n\r\n                addOptionsToFixedOverlay:\r\n                    function ($container, type, node, callback) {\r\n                        var typeOptions = this.__fixedOverlayOptions[type],\r\n                            $toAppend;\r\n\r\n                        typeOptions = CP_Customizer.hooks.applyFilters('section_fixed_overlay_options', _.clone(typeOptions), type);\r\n\r\n                        if (!typeOptions) {\r\n                            console.error('Undefined typeoptions', type, node);\r\n                            return;\r\n                        }\r\n\r\n                        var jQuery = CP_Customizer.preview.jQuery();\r\n                        var _node = (typeOptions.nodeOverrider || _.identity)(node);\r\n                        for (var key in typeOptions) {\r\n                            var filteredOptions = CP_Customizer.hooks.applyFilters('section_fixed_overlay', typeOptions[key], key);\r\n                            if (typeOptions.hasOwnProperty(key)) {\r\n                                switch (key) {\r\n                                    case 'title':\r\n                                        $toAppend = getTitleElement(filteredOptions, _node, type);\r\n                                        if ($toAppend) {\r\n                                            $container.append($toAppend);\r\n                                        }\r\n                                        break;\r\n                                    case 'items':\r\n                                        $toAppend = getItemsElements(filteredOptions, _node, type);\r\n                                        $container.append($toAppend);\r\n                                        break;\r\n                                    case 'node_binds':\r\n                                        var nodeBinds = filteredOptions;\r\n                                        jQuery.each(nodeBinds, function (bind, callbacks) {\r\n                                            if (bind === \"hover\") {\r\n                                                _node.hover(\r\n                                                    function (event) {\r\n                                                        callbacks[0].bind(this)(event, jQuery(this).data().overlay);\r\n                                                    },\r\n                                                    function (event) {\r\n                                                        var isNodeRelated = jQuery(this).data().overlay.find(\"*\").andSelf().is(event.relatedTarget);\r\n                                                        if (isNodeRelated) {\r\n                                                            event.preventDefault();\r\n                                                            event.stopPropagation();\r\n                                                            return false;\r\n                                                        }\r\n\r\n                                                        callbacks[1].bind(this)(event, jQuery(this).data().overlay);\r\n                                                    }\r\n                                                );\r\n                                            } else {\r\n                                                _node.bind(bind, callbacks);\r\n                                            }\r\n                                        });\r\n                                        break;\r\n                                    case 'toolbar_binds':\r\n                                        var toolbarBinds = typeOptions[key];\r\n                                        var overlay = jQuery(node).data().overlay;\r\n                                        jQuery.each(toolbarBinds, function (bind, callbacks) {\r\n                                            if (bind === \"hover\") {\r\n                                                overlay.find('.overlay-toolbar').hover(\r\n                                                    function (event) {\r\n                                                        callbacks[0].bind(node)(event, overlay);\r\n                                                    },\r\n                                                    function (event) {\r\n                                                        callbacks[1].bind(node)(event, overlay);\r\n                                                    }\r\n                                                );\r\n                                            } else {\r\n                                                overlay.bind(bind, callbacks);\r\n                                            }\r\n                                        });\r\n                                        break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (callback) {\r\n                            callback(typeOptions);\r\n                        }\r\n                    }\r\n\r\n                ,\r\n\r\n                updateOverlay: function (overlay, node, cover, positionOnly) {\r\n                    var $ = root.CP_Customizer.preview.jQuery();\r\n                    node = $(node);\r\n                    updateControls = !positionOnly;\r\n\r\n                    if (!node || !node.length) {\r\n                        return;\r\n                    }\r\n\r\n\r\n                    if (updateControls) {\r\n                        overlay.find('.pen-overlay').css({\r\n                            width: node.outerWidth(),\r\n                            height: node.outerHeight(),\r\n                            'pointer-events': 'all',\r\n                            'display': 'block'\r\n                        });\r\n\r\n                        overlay.find('.add-element-bubble.visible').removeClass('visible');\r\n                        overlay.find('.add-element-bubble .expanded').removeClass('expanded');\r\n\r\n                        if (node.outerHeight() < 30) {\r\n                            overlay.find('.pen-overlay').addClass('small');\r\n                        } else {\r\n                            overlay.find('.pen-overlay').removeClass('small');\r\n                        }\r\n\r\n\r\n                        if (node.parent().is('.ui-sortable') && node.siblings(root.CP_Customizer.CONTENT_ELEMENTS).length && node.closest(\".page-content,[data-theme]\").length) {\r\n                            overlay.find('.move').show();\r\n                        } else {\r\n                            overlay.find('.move').hide();\r\n                        }\r\n\r\n\r\n                        if (!node.is(':visible')) {\r\n                            overlay.hide();\r\n                        } else {\r\n                            overlay.show();\r\n                        }\r\n\r\n                        overlay.find('.add').show();\r\n                        if (node.closest('[data-add-content]').length) {\r\n                            value = node.closest('[data-add-content]').attr('data-add-content');\r\n\r\n                            if (value === \"false\") {\r\n                                overlay.find('.add').hide();\r\n                            }\r\n                        }\r\n\r\n\r\n                        if (node.closest('[data-type=\"row\"]').length && node.closest('[data-type=\"row\"]').is('[data-custom-items]')) {\r\n                            overlay.find('.top-container').hide();\r\n                            overlay.find('[h-align-center]').hide();\r\n                        } else {\r\n                            overlay.find('.top-container').show();\r\n                            overlay.find('[h-align-center]').show();\r\n                        }\r\n\r\n\r\n                        if (overlay.is('.add-content-overlay')) {\r\n                            if (node.is('[data-type=\"column\"]') && node.closest('[data-type=row]').length === 0) {\r\n                                overlay.find('.remove').hide();\r\n                            } else {\r\n                                if (node.closest('[data-type=row]').children().length > 1) {\r\n                                    overlay.find('.remove').show();\r\n                                } else {\r\n                                    overlay.find('.remove').hide();\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (overlay.is('.node-hover-overlay')) {\r\n                            if (node.siblings().length === 0) {\r\n                                overlay.find('.remove').hide();\r\n                            } else {\r\n                                if (node.is(root.CP_Customizer.CONTENT_ELEMENTS)) {\r\n                                    overlay.find('.remove').show();\r\n                                } else {\r\n                                    overlay.find('.remove').hide();\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (overlay.is('.item-hover-overlay')) {\r\n                            if (node.closest('[data-type=row]').children().length > 1) {\r\n                                overlay.find('.remove').show();\r\n                            } else {\r\n                                overlay.find('.remove').hide();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                    var bounds = node[0].getBoundingClientRect();\r\n                    var scrollTop = root.CP_Customizer.preview.frame().pageYOffset;\r\n                    var scrollLeft = root.CP_Customizer.preview.frame().pageXOffset;\r\n                    overlay.css({\r\n                        left: (parseInt(bounds.left) + scrollLeft) + \"px\",\r\n                        top: (parseInt(bounds.top) + scrollTop) + \"px\"\r\n                    });\r\n\r\n                    overlay.css({\r\n                        width: node.outerWidth(),\r\n                        'position': 'absolute'\r\n                    });\r\n\r\n                    if (!cover) {\r\n                        overlay.css({\r\n                            height: 'auto',\r\n                            'background-color': ''\r\n                        });\r\n                    }\r\n\r\n                    overlay.children('.overlay-left, .overlay-right').css({\r\n                        height: node.outerHeight(),\r\n                        width: '0px'\r\n                    });\r\n                    overlay.children('.overlay-right').css({\r\n                        left: node.outerWidth() - 1,\r\n                        width: '0px'\r\n                    });\r\n                    overlay.children('.overlay-top, .overlay-bottom').css({\r\n                        height: '0px',\r\n                        width: node.outerWidth()\r\n                    });\r\n                    overlay.children('.overlay-bottom').css({\r\n                        top: node.outerHeight()\r\n                    });\r\n\r\n                    overlay.children('[align-bottom]').each(function () {\r\n                        $(this).css({\r\n                            top: node.outerHeight() - 5\r\n                        });\r\n                    });\r\n\r\n                    overlay.children('[align-top]').css({\r\n                        top: 0\r\n                    });\r\n\r\n                    overlay.children('[h-align-center]').each(function () {\r\n                        $(this).css({\r\n                            left: (node.outerWidth() - $(this).outerWidth()) / 2\r\n                        });\r\n                    });\r\n\r\n                },\r\n\r\n\r\n                updateAllOverlays: function (event) {\r\n                    var updateOnlySections = Array.from(arguments).length === 0;\r\n                    var update = function () {\r\n                        var $ = CP_Customizer.preview.jQuery();\r\n                        this.overlaysContainer.children().each(function () {\r\n                            var isSection = $(this).is('.section-overlay');\r\n\r\n                            if (updateOnlySections && !isSection) {\r\n                                return;\r\n                            }\r\n\r\n                            var node = $(this).data('node');\r\n                            if (node) {\r\n\r\n\r\n                                root.CP_Customizer.overlays.updateOverlay($(this), $(node), false, true);\r\n\r\n                                var isScrollEvent = event && event.type == 'scroll';\r\n\r\n                                if ($(this).is('.heatzone') && !isScrollEvent) {\r\n                                    $(this).removeClass('heatzone');\r\n                                }\r\n                                if (event === true) {\r\n                                    $(this).hide();\r\n                                }\r\n                            }\r\n                        });\r\n                    }.bind({\r\n                        overlaysContainer: root.CP_Customizer.overlays.overlaysContainer()\r\n                    });\r\n\r\n                    update();\r\n                    return true;\r\n                },\r\n\r\n                overlaysContainer: function () {\r\n                    var overlaysContainer = CP_Customizer.preview.find('#cp-overlays');\r\n\r\n                    if (!overlaysContainer.length) {\r\n                        overlaysContainer = CP_Customizer.preview.jQuery()('<div id=\"cp-overlays\"></div>');\r\n                        CP_Customizer.preview.find('body').append(overlaysContainer);\r\n                    }\r\n\r\n                    return overlaysContainer;\r\n                },\r\n\r\n                hoverOverlay: function () {\r\n                    var $ = root.CP_Customizer.preview.jQuery();\r\n                    var hoverOverlay = $('[data-overlay=\"cp-hoveroverlay\"]');\r\n\r\n                    if (hoverOverlay.length) {\r\n                        return hoverOverlay;\r\n                    }\r\n\r\n                    hoverOverlay = $('<div data-overlay=\"cp-hoveroverlay\" class=\"node-hover-overlay\"><div class=\"pen-overlay\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20px\" viewBox=\"0 0 20 20\"><path d=\"M13.89 3.39l2.71 2.72c.46.46.42 1.24.03 1.64l-8.01 8.02-5.56 1.16 1.16-5.58s7.6-7.63 7.99-8.03c.39-.39 1.22-.39 1.68.07zm-2.73 2.79l-5.59 5.61 1.11 1.11 5.54-5.65zm-2.97 8.23l5.58-5.6-1.07-1.08-5.59 5.6z\"></path></svg></div><span title=\"' + root.CP_Customizer.translateCompanionString(\"Move element\") + '\" class=\"move\"></span><span title=\"' + root.CP_Customizer.translateCompanionString(\"Delete element\") + '\" class=\" remove\"></span><div class=\"overlay-top overlay-border\"></div><div class=\"overlay-left overlay-border\"></div><div class=\"overlay-right overlay-border\"></div><div class=\"overlay-bottom overlay-border\"></div></div>');\r\n\r\n                    root.CP_Customizer.overlays.overlaysContainer().append(hoverOverlay);\r\n                    hoverOverlay.hide();\r\n\r\n                    hoverOverlay.find('.remove').click(function () {\r\n                        root.CP_Customizer.preview.removeNode($(hoverOverlay.data('node')));\r\n                        hoverOverlay.hide();\r\n                    });\r\n\r\n                    hoverOverlay.find('.pen-overlay').unbind('click').click(function (event) {\r\n                        var $node = $(hoverOverlay.data('node'));\r\n\r\n                        if ($node.is('[data-focus-control]')) {\r\n                            var setting = wp.customize($node.attr('data-focus-control'));\r\n                            var control = setting ? setting.findControls()[0] : null;\r\n\r\n                            if (control) {\r\n                                control.focus();\r\n                                if (control.container.closest('.customizer-right-section').length) {\r\n                                    var sidebarID = control.container.closest('.customizer-right-section').attr('id').replace('-popup', '');\r\n                                    jQuery('[data-sidebar-container=\"' + sidebarID + '\"]').click();\r\n                                    // control.container.closest('.customizer-right-section').addClass('active');\r\n                                }\r\n                            }\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if ($node.is('[data-widgets-area]')) {\r\n                            root.wp.customize.section('sidebar-widgets-' + $node.attr('data-widgets-area')).focus();\r\n                            return;\r\n                        }\r\n\r\n                        if ($node.is('hr')) {\r\n                            return;\r\n                        }\r\n\r\n                        if ($node.is('[data-content-shortcode]')) {\r\n                            var shortcodeData = CP_Customizer.parseShortcode($node.attr('data-content-shortcode'));\r\n                            CP_Customizer.hooks.doAction('shortcode_edit', $node, shortcodeData);\r\n                            CP_Customizer.hooks.doAction('shortcode_edit_' + shortcodeData.tag, $node, shortcodeData);\r\n                            return;\r\n                        }\r\n\r\n                        if (!$node.data('container-editable')) {\r\n                            $node.off();\r\n                            $(this).hide();\r\n                        }\r\n\r\n                        if ($node.is('[data-content-item-container=\"true\"]')) {\r\n                            $node = $node.children().eq(0);\r\n                        }\r\n\r\n                        $node.click();\r\n                        $node.data('cpFocused', true);\r\n\r\n                        if ($node.is(root.CP_Customizer.TEXT_ELEMENTS)) {\r\n                            $node.focus();\r\n\r\n                            _.delay(function () {\r\n                                root.CP_Customizer.preview.placeCursorAtEnd($node[0]);\r\n                            }, 5);\r\n\r\n                            CP_Customizer.hooks.doAction('text_element_clicked', $node);\r\n\r\n                            hoverOverlay.activateHeatZone();\r\n                        } else {\r\n                            CP_Customizer.hooks.doAction('element_clicked', $node);\r\n                        }\r\n\r\n                    });\r\n\r\n                    function findCenter($, el) {\r\n                        el = $(el);\r\n                        var o = el.offset();\r\n                        return {\r\n                            x: o.left + el.outerWidth() / 2,\r\n                            y: o.top + el.outerHeight() / 2\r\n                        };\r\n                    }\r\n\r\n                    function triggerDrag(el, ev) {\r\n                        var target = el,\r\n                            $ = root.CP_Customizer.preview.jQuery(),\r\n                            frame = root.CP_Customizer.preview.frame();\r\n\r\n                        var self = this,\r\n                            center = findCenter($, target),\r\n                            options = {},\r\n                            x = Math.floor(center.x),\r\n                            y = Math.floor(center.y),\r\n                            dx = options.dx || 0,\r\n                            dy = options.dy || 0;\r\n                        var coord = {\r\n                            clientX: x,\r\n                            clientY: y\r\n                        };\r\n\r\n                        var type = \"mousedown\";\r\n\r\n                        var e = $.extend({\r\n                            bubbles: true,\r\n                            cancelable: (type != \"mousemove\"),\r\n                            view: frame,\r\n                            detail: 0,\r\n                            screenX: 0,\r\n                            screenY: 0,\r\n                            clientX: 0,\r\n                            clientY: 0,\r\n                            ctrlKey: false,\r\n                            altKey: false,\r\n                            shiftKey: false,\r\n                            metaKey: false,\r\n                            button: 0,\r\n                            relatedTarget: el\r\n                        }, coord);\r\n\r\n                        // var relatedTarget = $(el).parent().data('node');\r\n\r\n                        var evt = document.createEvent(\"MouseEvents\");\r\n                        evt.initMouseEvent(type, e.bubbles, e.cancelable, e.view, e.detail,\r\n                            e.screenX, e.screenY, ev.clientX, ev.clientY,\r\n                            e.ctrlKey, e.altKey, e.shiftKey, e.metaKey,\r\n                            e.button, null);\r\n\r\n                        el.dispatchEvent(evt);\r\n                    }\r\n\r\n\r\n                    var moveHandlerCallback = function ($handle, event) {\r\n\r\n                        if (event.which !== 1) {\r\n                            return;\r\n                        }\r\n\r\n                        var overlay = $handle.closest('.node-hover-overlay');\r\n\r\n                        var $node = $(hoverOverlay.data('node'));\r\n\r\n                        if ($node.siblings().length === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        $node.blur();\r\n\r\n                        if ($node.data('reikidragging')) {\r\n                            overlay.attr('is-dragging', false);\r\n                            $node.data('reikidragging', false);\r\n                            return;\r\n                        }\r\n\r\n                        var $first = $node.parents('.ui-sortable').first();\r\n                        if ($first.data(\"ui-sortable\")) {\r\n                            $first.sortable('enable');\r\n                        }\r\n\r\n                        $node.data('reikidragging', true);\r\n                        overlay.attr('is-dragging', true);\r\n\r\n                        $('[contenteditable=\"true\"]').attr('contenteditable', false);\r\n                        $('[contenteditable=\"true\"]').blur();\r\n                        triggerDrag($node[0], event);\r\n                        root.CP_Customizer.isSorting = true;\r\n\r\n                        root.CP_Customizer.preview.hideTextElementCUI();\r\n                    };\r\n\r\n\r\n                    hoverOverlay.find('.move').off('mousedown.cp').on('mousedown.cp', function (event) {\r\n                        _(moveHandlerCallback).delay(50, $(this), event);\r\n                    });\r\n\r\n\r\n                    hoverOverlay.find('.move').off('mouseup.cp').on('mouseup.cp', function (event) {\r\n                        var overlay = $(this).closest('.node-hover-overlay');\r\n                        overlay.attr('is-dragging', false);\r\n                    });\r\n\r\n                    hoverOverlay.activateHeatZone = function () {\r\n                        var $this = $(this);\r\n                        $this.addClass('heatzone');\r\n\r\n                        var top = $this.find('.overlay-top'),\r\n                            left = $this.find('.overlay-left'),\r\n                            right = $this.find('.overlay-right'),\r\n                            bottom = $this.find('.overlay-bottom');\r\n\r\n                        if (top.find('.zone').length === 0) {\r\n                            top.append('<div class=\"zone\" />');\r\n                        }\r\n\r\n                        if (left.find('.zone').length === 0) {\r\n                            left.append('<div class=\"zone\" />');\r\n                        }\r\n\r\n                        if (right.find('.zone').length === 0) {\r\n                            right.append('<div class=\"zone\" />');\r\n                        }\r\n\r\n                        if (bottom.find('.zone').length === 0) {\r\n                            bottom.append('<div class=\"zone\" />');\r\n                        }\r\n\r\n                        var node = $this.data('node');\r\n                        var $node = CP_Customizer.preview.jQuery(node);\r\n\r\n                        var nodeRect = {\r\n                            top: $node.offset().top,\r\n                            bottom: $node.offset().top + node.offsetHeight,\r\n                            height: node.offsetHeight,\r\n                            left: node.getBoundingClientRect().left,\r\n                            right: node.getBoundingClientRect().left + node.offsetWidth,\r\n                            width: node.offsetWidth\r\n                        };\r\n\r\n                        var docHeight = $(node).closest('body').height();\r\n                        var docWidth = Math.min(CP_Customizer.preview.frame().innerWidth, CP_Customizer.preview.jQuery('html').width());\r\n\r\n\r\n                        top.find('.zone').css({\r\n                                height: nodeRect.top,\r\n                                width: docWidth,\r\n                                left: -1 * nodeRect.left\r\n                            }\r\n                        );\r\n\r\n                        bottom.find('.zone').css({\r\n                                height: docHeight - nodeRect.bottom,\r\n                                width: docWidth,\r\n                                left: -1 * nodeRect.left,\r\n                                top: '-1px'\r\n                            }\r\n                        );\r\n\r\n                        left.find('.zone').css({\r\n                                height: nodeRect.height,\r\n                                width: nodeRect.left\r\n                                //top: -1 * nodeRect.top - nodeRect.height / 2\r\n                            }\r\n                        );\r\n\r\n                        right.find('.zone').css({\r\n                                height: nodeRect.height,\r\n                                width: docWidth - nodeRect.right\r\n                                // top: -1 * nodeRect.top - nodeRect.height / 2\r\n                            }\r\n                        );\r\n\r\n                        hoverOverlay.off('click.zone').on('click.zone', '.zone', function (event) {\r\n                            hoverOverlay.removeClass('heatzone');\r\n\r\n                            event.preventDefault();\r\n                            event.stopPropagation();\r\n\r\n                            var x = event.clientX,\r\n                                y = event.clientY,\r\n                                elementMouseIsOver = CP_Customizer.preview.frame().document.elementFromPoint(x, y);\r\n\r\n                            //\r\n                            hoverOverlay.addClass('heatzone');\r\n                            CP_Customizer.preview.blur();\r\n                            _.delay(function () {\r\n                                hoverOverlay.removeClass('heatzone');\r\n                                CP_Customizer.preview.jQuery(elementMouseIsOver).trigger('mouseover');\r\n                            }, 10);\r\n                            return false;\r\n                        });\r\n                    };\r\n\r\n                    // hoverOverlay.deactivateHeatZone = function () {\r\n                    //     hoverOverlay.removeClass('heatzone');\r\n                    // };\r\n\r\n                    return hoverOverlay;\r\n\r\n                },\r\n\r\n                rowItemHoverOverlay: function () {\r\n                    var $ = root.CP_Customizer.preview.jQuery();\r\n                    var itemHoverOverlay = $('[data-overlay=\"cp-item-hover-overlay\"]');\r\n\r\n                    if (itemHoverOverlay.length) {\r\n                        return itemHoverOverlay;\r\n                    }\r\n\r\n                    itemHoverOverlay = $('<div data-overlay=\"cp-item-hover-overlay\" class=\"item-hover-overlay\"> <div h-align-right title=\"' + root.CP_Customizer.translateCompanionString(\"Delete item\") + '\" class=\"remove\"></div> </div>');\r\n\r\n                    root.CP_Customizer.overlays.overlaysContainer().append(itemHoverOverlay);\r\n\r\n                    itemHoverOverlay.hide();\r\n\r\n                    itemHoverOverlay.find('.remove').click(function () {\r\n                        var node = $(itemHoverOverlay.data('node'));\r\n                        root.CP_Customizer.preview.removeNode(node);\r\n                        root.CP_Customizer.hooks.doAction('section_list_item_refresh');\r\n                        itemHoverOverlay.hide();\r\n                    });\r\n\r\n                    return itemHoverOverlay;\r\n                },\r\n\r\n\r\n                addOverlay: function () {\r\n\r\n                    var $ = root.CP_Customizer.preview.jQuery();\r\n                    var addOverlay = $('[data-overlay=\"cp-addoverlay\"]');\r\n\r\n                    if (addOverlay.length) {\r\n                        return addOverlay;\r\n                    }\r\n\r\n                    addOverlay = $('<div data-overlay=\"cp-addoverlay\" class=\"add-content-overlay\"><div class=\"buttons\" align-bottom h-align-center><div class=\"add\" title=\"' + root.CP_Customizer.translateCompanionString(\"Add element\") + '\">' + root.CP_Customizer.translateCompanionString(\"Add element\") + '</div></div></div>');\r\n                    root.CP_Customizer.overlays.overlaysContainer().append(addOverlay);\r\n                    addOverlay.hide();\r\n\r\n                    //addOverlay.find('.add').prepend('<div class=\"add-element-bubble\"><div class=\"elements-container\"></div><i class=\"element-bubble-close\"></i></div>');\r\n                    // let's add the close button in a future update\r\n                    addOverlay.find('.add').prepend('<div class=\"add-element-bubble\"><div class=\"elements-container\"></div></div>');\r\n\r\n\r\n                    addOverlay.find('.add').click(function (event) {\r\n                        addOverlay.find('.add').find('.add-element-bubble').toggleClass('visible');\r\n                    });\r\n\r\n                    root.CP_Customizer.content.addContentItemsTo(addOverlay.find('.elements-container'));\r\n\r\n                    addOverlay.find('.elements-container').on('cp-insert-content-item', function (event, type, insertHandler) {\r\n                        event.preventDefault();\r\n                        var $node = $(addOverlay.data('node'));\r\n                        var index = $node.children().length;\r\n\r\n                        insertHandler(type, $node, index, after);\r\n\r\n                        function after($node) {\r\n                            root.CP_Customizer.preview.decorateElements($node);\r\n                            root.CP_Customizer.overlays.updateOverlay(addOverlay, $(addOverlay.data('node')));\r\n                            CP_Customizer.renderNodeShortcodes($node);\r\n                            // CP_Customizer.hooks.doAction('after_node_insert', $node);\r\n                        }\r\n                    });\r\n\r\n                    return addOverlay;\r\n                },\r\n\r\n                assignNode: function (overlay, node, cover) {\r\n                    var $ = root.CP_Customizer.preview.jQuery();\r\n                    if (overlay.attr('is-dragging') && overlay.attr('is-dragging') === \"true\") {\r\n                        return;\r\n                    }\r\n                    if ($(overlay.data('node')).is(node)) {\r\n                        return;\r\n                    } else {\r\n                        /*if (overlay.data('node') && overlay.data('node').ownerDocument.activeElement == overlay.data('node')) {\r\n                            debugger;\r\n                        $(overlay.data('node')).blur();\r\n                        }*/\r\n                    }\r\n\r\n                    overlay.data('node', $(node)[0]);\r\n\r\n                    function updateOverlay() {\r\n                        root.CP_Customizer.overlays.updateOverlay(overlay, $(node), cover);\r\n                    }\r\n\r\n                    overlay.on('reiki.update_overlays', '*', function (event) {\r\n                        setTimeout(updateOverlay, 0);\r\n                    });\r\n\r\n                    root.CP_Customizer.preview.hideTextElementCUI();\r\n                    updateOverlay();\r\n                },\r\n\r\n                hideMovableOverlays: function () {\r\n                    CP_Customizer.overlays.addOverlay().hide();\r\n                    CP_Customizer.overlays.hoverOverlay().hide();\r\n                    CP_Customizer.overlays.rowItemHoverOverlay().hide()\r\n                }\r\n\r\n            }\r\n            ,\r\n\r\n            content: {\r\n                __registeredItems: {\r\n                    'link':\r\n                        {\r\n                            icon: 'mdi-link-variant',\r\n                            tooltip: translateCompanionString('link'),\r\n                            data:\r\n                            '<a class=\"link\" data-cpid=\"new\" data-container-editable=\"true\" data-content-code-editable href=\"#\">' + translateCompanionString('new link') + '</a>',\r\n                            'after': function ($item) {\r\n                                $item.unbind('click').click(function (event) {\r\n                                    event.preventDefault();\r\n                                    event.stopImmediatePropagation();\r\n                                    event.stopPropagation();\r\n\r\n                                    if ($(this).is('[data-container-editable]') || $(this).is('[data-type=group]')) {\r\n                                        CP_Customizer.preview.editContainerData.apply(this);\r\n                                    }\r\n\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                    ,\r\n                    'button':\r\n                        {\r\n                            icon: 'mdi-open-in-new',\r\n                            tooltip: translateCompanionString('button'),\r\n                            data:\r\n                            '<a data-cpid=\"new\" data-container-editable=\"true\" data-content-code-editable class=\"button blue\" href=\"#\">' + translateCompanionString('new button') + '</a>',\r\n                            'after': function ($item) {\r\n                                $item.unbind('click').click(function (event) {\r\n                                    event.preventDefault();\r\n                                    event.stopImmediatePropagation();\r\n                                    event.stopPropagation();\r\n\r\n                                    if ($(this).is('[data-container-editable]') || $(this).is('[data-type=group]')) {\r\n                                        CP_Customizer.preview.editContainerData.apply(this);\r\n                                    }\r\n\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                    ,\r\n                    'heading':\r\n                        {\r\n                            icon: 'mdi-format-header-pound larger',\r\n                            tooltip: translateCompanionString('heading'),\r\n                            items:\r\n                                function () {\r\n                                    var result = {};\r\n                                    for (var i = 1; i <= 6; i++) {\r\n                                        result['h' + i] = {\r\n                                            label: \"H\" + i,\r\n                                            data: '<h' + i + '>' + translateCompanionString(\"Heading\") + ' ' + i + '</h' + i + '>',\r\n                                            tooltip: translateCompanionString('Heading') + ' ' + i\r\n                                        };\r\n                                    }\r\n\r\n                                    return result;\r\n                                }\r\n                        }\r\n                    ,\r\n\r\n                    'lead':\r\n                        {\r\n                            icon: 'mdi-format-align-left',\r\n                            tooltip: translateCompanionString('lead'),\r\n                            data:\r\n                                '<p data-cpid=\"new\" class=\"lead\" data-content-editable=\"true\" contenteditable=\"true\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>'\r\n                        }\r\n                    ,\r\n\r\n                    'paragraph':\r\n                        {\r\n                            icon: 'mdi-format-paragraph larger',\r\n                            tooltip: translateCompanionString('paragraph'),\r\n                            data:\r\n                                '<p data-cpid=\"new\" data-content-editable=\"true\" contenteditable=\"true\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>'\r\n                        }\r\n                    ,\r\n\r\n                    'image':\r\n                        {\r\n                            icon: 'mdi-image-area big',\r\n                            tooltip: translateCompanionString('image'),\r\n                            data:\r\n                                '<img data-cpid=\"new\" class=\"custom-image\" data-content-code-editable=\"true\" data-content-editable=\"true\" contenteditable=\"true\" src=\"#\"/>'\r\n                        }\r\n                    // ,\r\n\r\n                    // 'icon':\r\n                    //     {\r\n                    //         icon: 'mdi-adjust',\r\n                    //         items:\r\n                    //             function () {\r\n                    //                 var result = {};\r\n                    //                 for (var i = 1; i <= 6; i++) {\r\n                    //                     result['mdi' + i] = {\r\n                    //                         icon: 'mdi-flag mdi' + i,\r\n                    //                         data: '<i class=\"mdi cp-icon mdi' + i + ' mdi-adjust\"></i>',\r\n                    //                         tooltip: \"Font Icon \" + i\r\n                    //                     };\r\n                    //                 }\r\n                    //\r\n                    //                 return result;\r\n                    //             }\r\n                    //     }\r\n                    // ,\r\n                    // 'separator':\r\n                    //     {\r\n                    //         'icon':\r\n                    //             \"mdi-adjust\",\r\n                    //         data:\r\n                    //             '<div class=\"spacer\" data-type=\"group\"><span class=\"mdi before\"></span><i data-content-code-editable=\"true\" class=\"mdi mdi-adjust\"></i><span class=\"mdi after\"></span></div>'\r\n                    //     }\r\n                },\r\n\r\n                registerItem: function (data) {\r\n\r\n                    if (data) {\r\n                        for (var key in data) {\r\n                            if (data[key].contentElementSelector) {\r\n                                CP_Customizer.addContentElementsSelectors(data[key].contentElementSelector);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    _.extend(this.__registeredItems, data);\r\n                },\r\n\r\n                getItemData: function (type) {\r\n                    types = type.split('.');\r\n                    var start = this.__registeredItems;\r\n\r\n                    for (var i = 0; i < types.length; i++) {\r\n                        var _type = types[i];\r\n\r\n                        if (i + 1 < types.length) {\r\n                            var _items = start[_type].items;\r\n                            if (_(_items).isFunction()) {\r\n                                _items = _items.call();\r\n\r\n                            }\r\n                            start = _items;\r\n                        } else {\r\n                            return start[_type].data;\r\n                        }\r\n                    }\r\n                },\r\n\r\n                getItemAfter: function (type) {\r\n                    types = type.split('.');\r\n                    var start = this.__registeredItems;\r\n\r\n                    for (var i = 0; i < types.length; i++) {\r\n                        var _type = types[i];\r\n\r\n                        if (i + 1 < types.length) {\r\n                            var _items = start[_type].items;\r\n                            if (_(_items).isFunction()) {\r\n                                _items = _items.call();\r\n\r\n                            }\r\n                            start = _items;\r\n                        } else {\r\n                            return start[_type].after;\r\n                        }\r\n                    }\r\n                },\r\n\r\n                getContentItems: function (data, subitems, parentId) {\r\n                    data = data || this.__registeredItems;\r\n                    subitems = subitems || false;\r\n                    var self = this;\r\n                    var $result = $(\"<div />\");\r\n                    $.each(data, function (id, option) {\r\n                        var title = option.toolip || option.tooltip || id; // || for old typo :D\r\n                        var idAttr = parentId ? parentId + \".\" + id : id;\r\n                        var _item = $('<i class=\"mdi ' + (option.icon || \"\") + '\" title=\"' + title + '\" data-' + (option.items ? \"parent\" : \"content\") + '-id=\"' + idAttr + '\"></i>');\r\n\r\n                        if (option.label) {\r\n                            _item.append('<span class=\"item-label\">' + option.label + '</span>');\r\n                        }\r\n\r\n                        if (option.items) {\r\n\r\n                            var _items = option.items;\r\n\r\n                            if (_(_items).isFunction()) {\r\n                                _items = option.items.call();\r\n                            }\r\n\r\n                            var subitemsContainer = $('<div class=\"subitems-container\" />');\r\n                            subitemsContainer.append(self.getContentItems(_items, true, idAttr));\r\n                            _item.append(subitemsContainer);\r\n                        }\r\n\r\n                        $result.append(_item);\r\n                    });\r\n\r\n                    return $result.html();\r\n\r\n                },\r\n\r\n\r\n                addContentItemsTo: function ($container) {\r\n                    $container.append(CP_Customizer.content.getContentItems());\r\n                    var self = this;\r\n                    $container.off('click.cp-new-content').on('click.cp-new-content', 'i.mdi[data-content-id]', function (event) {\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n\r\n                        var node_type = $(this).data('content-id');\r\n                        $container.trigger('cp-insert-content-item', [node_type, self.insertNewContent]);\r\n                    });\r\n\r\n                    $container.off('click.cp-new-parent').on('click.cp-new-parent', 'i.mdi[data-parent-id]', function (event) {\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                        $(this).toggleClass('expanded');\r\n                        $(this).siblings().removeClass('expanded');\r\n                    });\r\n                },\r\n\r\n                insertNewContent: function (type, $container, index, after) {\r\n                    var $ = CP_Customizer.preview.jQuery();\r\n                    var $new = $(CP_Customizer.content.getItemData(type));\r\n                    var itemAfter = CP_Customizer.content.getItemAfter(type);\r\n                    CP_Customizer.preview.insertNode($new, $container, index);\r\n                    setTimeout(function () {\r\n                        $new.trigger('click');\r\n                        if (_(after).isFunction()) {\r\n                            after($new);\r\n\r\n\r\n                        }\r\n                        if (_.isFunction(itemAfter)) {\r\n                            itemAfter($new);\r\n                        }\r\n                    }, 100);\r\n                }\r\n            }\r\n\r\n        }\r\n    ;\r\n\r\n    CP_Customizer = _.extend(CP_Customizer, {\r\n        closePopUps: root.Materialis.closePopUps,\r\n        popUp: root.Materialis.popUp,\r\n        openRightSidebar: root.Materialis.openRightSidebar,\r\n        hideRightSidebar: root.Materialis.hideRightSidebar,\r\n\r\n    });\r\n    top.CP_Customizer = root.CP_Customizer = CP_Customizer;\r\n\r\n\r\n    var previewLoadedMessageCallback = function (event) {\r\n        if (event.data === 'cloudpress_update_customizer') {\r\n\r\n            if (root.__isCPChangesetPreview) {\r\n                CP_Customizer.preview.jQuery('html').addClass('cp__changeset__preview');\r\n                return;\r\n            }\r\n\r\n            setTimeout(function () {\r\n                CP_Customizer.hideLoader();\r\n                CP_Customizer.preview.frame().wp.customize.preview.bind('loading-initiated', function () {\r\n                    CP_Customizer.showLoader();\r\n                    CP_Customizer.trigger('PREVIEW_LOADING_START');\r\n                });\r\n\r\n            }, 300);\r\n\r\n            _(CP_Customizer).extend(window.cpCustomizerGlobal);\r\n            CP_Customizer.trigger('PREVIEW_LOADED');\r\n\r\n            CP_Customizer.preview.addContentBinds();\r\n\r\n            CP_Customizer.preview.jQuery('a').on('click', function (event) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            });\r\n\r\n            CP_Customizer.preview.decorateMods();\r\n            CP_Customizer.preview.decorateElements();\r\n\r\n\r\n            // make the save button use CP_Customizer save wrapper\r\n            $(root.document).find('input#save').unbind('click').bind('click', function (event) {\r\n\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                root.CP_Customizer.save();\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    root.addEventListener('message', previewLoadedMessageCallback);\r\n\r\n\r\n    $(root).bind('keydown', function (event) {\r\n        if (event.ctrlKey || event.metaKey) {\r\n            var key = String.fromCharCode(event.which).toLowerCase();\r\n            if (key === \"s\") {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                root.CP_Customizer.save();\r\n            }\r\n        }\r\n    });\r\n\r\n    $(root.document).find('input#save').unbind('click').bind('click', function (event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        root.CP_Customizer.save();\r\n    });\r\n\r\n\r\n    $(root.document).ready(function () {\r\n\r\n        for (var i = 0; i < CP_Customizer.__modules.length; i++) {\r\n            var callback = CP_Customizer.__modules[i];\r\n            callback(CP_Customizer);\r\n        }\r\n\r\n        CP_Customizer.__modulesLoaded = true;\r\n        CP_Customizer.trigger('DOCUMENT_READY');\r\n    });\r\n\r\n    // UTILS\r\n\r\n    function getTitleElement(name, node, category) {\r\n        var label = \"\";\r\n        if (typeof name === \"function\") {\r\n            label = name(node);\r\n        } else {\r\n            if (!_.isUndefined(name)) {\r\n                label = name;\r\n            } else {\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n        return \"<span data-category=\\\"\" + category + \"\\\" class=\\\"cog-item title\\\">\" + label + \"</span>\";\r\n    }\r\n\r\n    function getButtonElement(itemData, node, category) {\r\n        var template = '<span data-category=\"' + category + '\" class=\"cog-item ' + (itemData.classes || \"\") + '\"></span>';\r\n\r\n        var $button = $(template).attr({\r\n            'data-name': (itemData.name || 'button')\r\n        });\r\n        $button.text(itemData.title || 'Button');\r\n\r\n\r\n        // key is event handler\r\n        $.each(itemData, function (key, data) {\r\n            if (key === 'on_hover') {\r\n                var callbackIn = function () {\r\n                    data[0].call($button, node);\r\n                };\r\n                var callbackOut = function () {\r\n\r\n                    data[1].call($button, node);\r\n                };\r\n                $button.hover(callbackIn, callbackOut);\r\n\r\n            } else if (key.indexOf('on_') === 0) {\r\n                var ev = key.replace('on_', '');\r\n                var callback = function (event) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    data.call($button, node);\r\n                };\r\n                $button.bind(ev, callback);\r\n            }\r\n        });\r\n\r\n        return $button;\r\n    }\r\n\r\n    function getItemsElements(itemsArray, node, category) {\r\n        result = [];\r\n        for (var i = 0; i < itemsArray.length; i++) {\r\n            var itemData = itemsArray[i];\r\n            var $item = getButtonElement(itemData, node, category);\r\n            result.push($item);\r\n        }\r\n        return result;\r\n    }\r\n\r\n})(jQuery, window);\r\n","(function ($) {\r\n\r\n    // source: https://github.com/andymantell/node-wpautop\r\n    function _autop_newline_preservation_helper(matches) {\r\n        return matches[0].replace(\"\\n\", \"<WPPreserveNewline />\");\r\n    };\r\n\r\n    function wpautop(pee, br) {\r\n        if (typeof(br) === 'undefined') {\r\n            br = true;\r\n        }\r\n\r\n        var pre_tags = {};\r\n        if (pee.trim() === '') {\r\n            return '';\r\n        }\r\n\r\n        pee = pee + \"\\n\"; // just to make things a little easier, pad the end\r\n        if (pee.indexOf('<pre') > -1) {\r\n            var pee_parts = pee.split('</pre>');\r\n            var last_pee = pee_parts.pop();\r\n            pee = '';\r\n            pee_parts.forEach(function (pee_part, index) {\r\n                var start = pee_part.indexOf('<pre');\r\n\r\n                // Malformed html?\r\n                if (start === -1) {\r\n                    pee += pee_part;\r\n                    return;\r\n                }\r\n\r\n                var name = \"<pre wp-pre-tag-\" + index + \"></pre>\";\r\n                pre_tags[name] = pee_part.substr(start) + '</pre>';\r\n                pee += pee_part.substr(0, start) + name;\r\n\r\n            });\r\n\r\n            pee += last_pee;\r\n        }\r\n\r\n        pee = pee.replace(/<br \\/>\\s*<br \\/>/, \"\\n\\n\");\r\n\r\n        // Space things out a little\r\n        var allblocks = '(?:table|thead|tfoot|caption|col|colgroup|tbody|tr|td|th|div|dl|dd|dt|ul|ol|li|pre|form|map|area|blockquote|address|math|style|p|h[1-6]|hr|fieldset|legend|section|article|aside|hgroup|header|footer|nav|figure|figcaption|details|menu|summary)';\r\n        pee = pee.replace(new RegExp('(<' + allblocks + '[^>]*>)', 'gmi'), \"\\n$1\");\r\n        pee = pee.replace(new RegExp('(</' + allblocks + '>)', 'gmi'), \"$1\\n\\n\");\r\n        pee = pee.replace(/\\r\\n|\\r/, \"\\n\"); // cross-platform newlines\r\n\r\n        if (pee.indexOf('<option') > -1) {\r\n            // no P/BR around option\r\n            pee = pee.replace(/\\s*<option'/gmi, '<option');\r\n            pee = pee.replace(/<\\/option>\\s*/gmi, '</option>');\r\n        }\r\n\r\n        if (pee.indexOf('</object>') > -1) {\r\n            // no P/BR around param and embed\r\n            pee = pee.replace(/(<object[^>]*>)\\s*/gmi, '$1');\r\n            pee = pee.replace(/\\s*<\\/object>/gmi, '</object>');\r\n            pee = pee.replace(/\\s*(<\\/?(?:param|embed)[^>]*>)\\s*/gmi, '$1');\r\n        }\r\n\r\n        if (pee.indexOf('<source') > -1 || pee.indexOf('<track') > -1) {\r\n            // no P/BR around source and track\r\n            pee = pee.replace(/([<\\[](?:audio|video)[^>\\]]*[>\\]])\\s*/gmi, '$1');\r\n            pee = pee.replace(/\\s*([<\\[]\\/(?:audio|video)[>\\]])/gmi, '$1');\r\n            pee = pee.replace(/\\s*(<(?:source|track)[^>]*>)\\s*/gmi, '$1');\r\n        }\r\n\r\n        pee = pee.replace(/\\n\\n+/gmi, \"\\n\\n\"); // take care of duplicates\r\n\r\n        // make paragraphs, including one at the end\r\n        var pees = pee.split(/\\n\\s*\\n/);\r\n        pee = '';\r\n        pees.forEach(function (tinkle) {\r\n            pee += '<p>' + tinkle.replace(/^\\s+|\\s+$/g, '') + \"</p>\\n\";\r\n        });\r\n\r\n        pee = pee.replace(/<p>\\s*<\\/p>/gmi, ''); // under certain strange conditions it could create a P of entirely whitespace\r\n        pee = pee.replace(/<p>([^<]+)<\\/(div|address|form)>/gmi, \"<p>$1</p></$2>\");\r\n        pee = pee.replace(new RegExp('<p>\\s*(</?' + allblocks + '[^>]*>)\\s*</p>', 'gmi'), \"$1\", pee); // don't pee all over a tag\r\n        pee = pee.replace(/<p>(<li.+?)<\\/p>/gmi, \"$1\"); // problem with nested lists\r\n        pee = pee.replace(/<p><blockquote([^>]*)>/gmi, \"<blockquote$1><p>\");\r\n        pee = pee.replace(/<\\/blockquote><\\/p>/gmi, '</p></blockquote>');\r\n        pee = pee.replace(new RegExp('<p>\\s*(</?' + allblocks + '[^>]*>)', 'gmi'), \"$1\");\r\n        pee = pee.replace(new RegExp('(</?' + allblocks + '[^>]*>)\\s*</p>', 'gmi'), \"$1\");\r\n\r\n        if (br) {\r\n            pee = pee.replace(/<(script|style)(?:.|\\n)*?<\\/\\\\1>/gmi, _autop_newline_preservation_helper); // /s modifier from php PCRE regexp replaced with (?:.|\\n)\r\n            pee = pee.replace(/(<br \\/>)?\\s*\\n/gmi, \"<br />\\n\"); // optionally make line breaks\r\n            pee = pee.replace('<WPPreserveNewline />', \"\\n\");\r\n        }\r\n\r\n        pee = pee.replace(new RegExp('(</?' + allblocks + '[^>]*>)\\s*<br />', 'gmi'), \"$1\");\r\n        pee = pee.replace(/<br \\/>(\\s*<\\/?(?:p|li|div|dl|dd|dt|th|pre|td|ul|ol)[^>]*>)/gmi, '$1');\r\n        pee = pee.replace(/\\n<\\/p>$/gmi, '</p>');\r\n\r\n        if (Object.keys(pre_tags).length) {\r\n            pee = pee.replace(new RegExp(Object.keys(pre_tags).join('|'), \"gi\"), function (matched) {\r\n                return pre_tags[matched];\r\n            });\r\n        }\r\n\r\n        return pee;\r\n    };\r\n\r\n    CP_Customizer.addModule(function (CP_Customizer) {\r\n        CP_Customizer.utils = CP_Customizer.utils || {};\r\n\r\n        CP_Customizer.utils.wpautop = function (value) {\r\n            value = wpautop(value);\r\n\r\n            if (jQuery(value).length === 1) {\r\n                return jQuery(value).html();\r\n            }\r\n\r\n            return value;\r\n\r\n        };\r\n\r\n\r\n        CP_Customizer.utils.phpTrim = function (str, charlist) {\r\n\r\n            var whitespace = [\r\n                ' ',\r\n                '\\n',\r\n                '\\r',\r\n                '\\t',\r\n                '\\f',\r\n                '\\x0b',\r\n                '\\xa0',\r\n                '\\u2000',\r\n                '\\u2001',\r\n                '\\u2002',\r\n                '\\u2003',\r\n                '\\u2004',\r\n                '\\u2005',\r\n                '\\u2006',\r\n                '\\u2007',\r\n                '\\u2008',\r\n                '\\u2009',\r\n                '\\u200a',\r\n                '\\u200b',\r\n                '\\u2028',\r\n                '\\u2029',\r\n                '\\u3000'\r\n            ].join('');\r\n\r\n            var l = 0;\r\n            var i = 0;\r\n            str += '';\r\n\r\n            if (charlist) {\r\n                whitespace = (charlist + '').replace(/([[\\]().?/*{}+$^:])/g, '$1')\r\n            }\r\n            l = str.length\r\n            for (i = 0; i < l; i++) {\r\n                if (whitespace.indexOf(str.charAt(i)) === -1) {\r\n                    str = str.substring(i)\r\n                    break\r\n                }\r\n            }\r\n            l = str.length\r\n            for (i = l - 1; i >= 0; i--) {\r\n                if (whitespace.indexOf(str.charAt(i)) === -1) {\r\n                    str = str.substring(0, i + 1)\r\n                    break\r\n                }\r\n            }\r\n            return whitespace.indexOf(str.charAt(0)) === -1 ? str : ''\r\n        };\r\n\r\n        CP_Customizer.utils.normalizeBackgroundImageValue = function (value) {\r\n            value = value.replace(/url\\((.*)\\)/, \"$1\");\r\n            return CP_Customizer.utils.phpTrim(value, \"\\\"'\");\r\n        };\r\n\r\n\r\n        CP_Customizer.utils.htmlDecode = function (value) {\r\n            var result = $('<div/>').html(value).text();\r\n            return result;\r\n        };\r\n\r\n        CP_Customizer.utils.htmlEscape = function (str) {\r\n            return str\r\n                .replace(/&/g, '&amp;')\r\n                .replace(/\"/g, '&quot;')\r\n                .replace(/'/g, '&#39;')\r\n                .replace(/</g, '&lt;')\r\n                .replace(/>/g, '&gt;');\r\n        };\r\n\r\n\r\n        var htmlEntityMap = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#39;',\r\n            '/': '&#x2F;',\r\n            '`': '&#x60;',\r\n            '=': '&#x3D;'\r\n        };\r\n\r\n        CP_Customizer.utils.htmlUnescape = function (str) {\r\n\r\n            for (var item in htmlEntityMap) {\r\n                var regExp = new RegExp(htmlEntityMap[item], 'g');\r\n                str = str.replace(regExp, item);\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        CP_Customizer.utils.setToPath = function (schema, path, value) {\r\n\r\n            if (!schema) {\r\n                return schema;\r\n            }\r\n\r\n            if (_.isString(schema)) {\r\n                schema = CP_Customizer.utils.normalizeValue(schema);\r\n            }\r\n\r\n            var pList = path.split('.');\r\n            var len = pList.length;\r\n\r\n            if (len > 1) {\r\n                var first = pList.shift();\r\n                var remainingPath = pList.join('.');\r\n                schema[first] = CP_Customizer.utils.setToPath(schema[first], remainingPath, value);\r\n            } else {\r\n                schema[path] = value;\r\n            }\r\n\r\n            return schema;\r\n        };\r\n\r\n        CP_Customizer.utils.normalizeShortcodeString = function (shortcode) {\r\n            shortcode = CP_Customizer.utils.htmlDecode(shortcode);\r\n\r\n            return '[' + CP_Customizer.utils.phpTrim(shortcode) + ']';\r\n        };\r\n\r\n        CP_Customizer.utils.getSpectrumColorFormated = function ($spectrumElement) {\r\n            var value = $spectrumElement.spectrum('get');\r\n\r\n\r\n            if (!value) {\r\n                return value;\r\n            }\r\n\r\n            if (value.getAlpha() < 1) {\r\n                return \"rgba(\" + value._r + \",\" + value._g + \",\" + value._b + \",\" + value._a + \")\";\r\n            } else {\r\n                return value.toHexString();\r\n            }\r\n        };\r\n\r\n        CP_Customizer.utils.normalizeValue = function (value, convertToArray) {\r\n\r\n\r\n            if (_.isString(value)) {\r\n\r\n                try {\r\n                    value = decodeURI(value);\r\n\r\n                } catch (e) {\r\n\r\n                }\r\n\r\n                try {\r\n                    value = JSON.parse(value);\r\n\r\n                } catch (e) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (_.isObject(value) && convertToArray) {\r\n                var hasOnlyNumberKeys = _.keys(value).map(function (k) {\r\n                    return _.isNumber(parseInt(k))\r\n                }).reduce(function (a, b) {\r\n                    return (a && b);\r\n                }, true);\r\n\r\n                if (hasOnlyNumberKeys) {\r\n                    var newValue = [];\r\n                    _.keys(value).forEach(function (k) {\r\n\r\n                        if (_.isUndefined(value[k])) {\r\n                            return;\r\n                        }\r\n\r\n                        newValue.push(value[k]);\r\n                    });\r\n\r\n                    value = newValue;\r\n                }\r\n            }\r\n\r\n            return value;\r\n        };\r\n\r\n        CP_Customizer.utils.getValue = function (component) {\r\n            var value = undefined;\r\n\r\n            if (component instanceof CP_Customizer.wpApi.Control) {\r\n                value = component.setting.get();\r\n            }\r\n\r\n            if (component instanceof CP_Customizer.wpApi.Setting) {\r\n                value = component.get();\r\n            }\r\n\r\n            if (_.isString(component)) {\r\n                value = CP_Customizer.wpApi(component).get();\r\n            }\r\n\r\n            if (_.isString(value)) {\r\n\r\n                try {\r\n                    value = decodeURI(value);\r\n\r\n                } catch (e) {\r\n\r\n                }\r\n\r\n                try {\r\n                    value = JSON.parse(value);\r\n                } catch (e) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n            return value;\r\n        };\r\n\r\n        CP_Customizer.utils.deepClone = function (toClone, asArray) {\r\n            var result = jQuery.extend(true, {}, toClone);\r\n            if (asArray) {\r\n                result = _.toArray(result);\r\n            }\r\n            return result;\r\n        };\r\n\r\n        CP_Customizer.utils.cssValueNumber = function (value) {\r\n            var matches = value.match(/\\d+(.\\d+)?/);\r\n\r\n            if (!matches || !_.isArray(matches)) {\r\n                return null;\r\n            }\r\n\r\n            return matches.shift();\r\n        };\r\n\r\n        CP_Customizer.utils.arrayChunk = function (bigArray, perGroup) {\r\n            perGroup = perGroup || 5;\r\n            var result = _.groupBy(bigArray, function (element, index) {\r\n                return Math.floor(index / perGroup);\r\n            });\r\n\r\n            return _.toArray(result);\r\n        };\r\n\r\n        CP_Customizer.utils.normalizeClassAttr = function (classes, asSelector) {\r\n            classes = classes.split(' ').filter(function (item) {\r\n                return (item.trim().length > 0);\r\n            });\r\n\r\n            if (asSelector) {\r\n                return (classes.length ? '.' + classes.join('.') : '');\r\n            } else {\r\n                return classes.join(' ');\r\n            }\r\n        };\r\n\r\n        CP_Customizer.utils.getFileInfo = function (url) {\r\n            var filename = url.substring(url.lastIndexOf(\"/\") + 1, url.lastIndexOf(\".\"));\r\n            var parts = url.split(\"/\" + filename)[0];\r\n            var path = parts[0];\r\n            var extension = parts.length > 1 ? parts[1].split('/')[0] : '';\r\n\r\n            return {\r\n                path: path,\r\n                file: filename + (extension ? '.' + extension : extension),\r\n                filename: filename,\r\n                extension: extension\r\n            }\r\n        };\r\n\r\n        var imageExtensions = [\"tif\", \"tiff\", \"gif\", \"jpeg\", \"jpg\", \"jif\", \"jfif\", \"jp2\", \"jpx\", \"j2k\", \"j2c\", \"fpx\", \"pcd\", \"png\", \"pdf\", \"bmp\", \"ico\"];\r\n        CP_Customizer.utils.isImageFile = function (url) {\r\n            var fileInfo = CP_Customizer.utils.getFileInfo(url);\r\n\r\n            return (imageExtensions.indexOf(fileInfo.extension) !== -1);\r\n\r\n        };\r\n\r\n        // https://stackoverflow.com/a/13896633\r\n        // TODO: make work with ?x[a]=2&x[b]=3\r\n        CP_Customizer.utils.parseUrlQuery = function (str) {\r\n            if (typeof str !== \"string\" || str.length === 0) return {};\r\n            var s = str.split(\"&\");\r\n            var s_length = s.length;\r\n            var bit, query = {}, first, second;\r\n            for (var i = 0; i < s_length; i++) {\r\n                bit = s[i].split(\"=\");\r\n                first = decodeURIComponent(bit[0]);\r\n                if (first.length === 0) continue;\r\n                second = decodeURIComponent(bit[1]);\r\n                if (typeof query[first] === \"undefined\") query[first] = second;\r\n                else if (query[first] instanceof Array) query[first].push(second);\r\n                else query[first] = [query[first], second];\r\n            }\r\n            return query;\r\n        };\r\n\r\n\r\n        CP_Customizer.utils.stringifyUrlQuery = function (query) {\r\n            var queryString = \"\";\r\n            for (var key in query) {\r\n\r\n                if (!query.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n\r\n                var data = query[key];\r\n\r\n                if (!_.isUndefined(data)) {\r\n                    if (_.isString(data)) {\r\n                        queryString += '&' + encodeURIComponent(key) + '=' + encodeURIComponent(data);\r\n                    }\r\n\r\n                    if (_.isArray(data)) {\r\n                        for (var i = 0; i < data.length; i++) {\r\n                            queryString += '&' + encodeURIComponent(key) + '[' + i + ']=' + encodeURIComponent(data[i]);\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    queryString += '&' + encodeURIComponent(key);\r\n                }\r\n            }\r\n\r\n            if (queryString.length) {\r\n                queryString = '?' + CP_Customizer.utils.phpTrim(queryString, '&');\r\n            }\r\n\r\n            return queryString;\r\n        };\r\n\r\n        CP_Customizer.utils.parseURL = function (url) {\r\n            var location = ((url.split('?')[0] || '').split('#')[0] || ''),\r\n                queryString = (url.indexOf('?') !== -1) ? url.split('?').pop().split('#')[0] : '',\r\n                query = CP_Customizer.utils.parseUrlQuery(queryString),\r\n                hash = (url.indexOf('#') !== -1) ? url.replace(/(.*)#/, '').trim() : '';\r\n\r\n            return {\r\n                location: location.replace(/\\/$/, ''),\r\n                query: query,\r\n                hash: hash.length ? '#' + hash : ''\r\n            }\r\n\r\n        };\r\n\r\n        CP_Customizer.utils.removeUrlQueryStrings = function (url, strings) {\r\n            var parsedUrl = CP_Customizer.utils.parseURL(url),\r\n                hash = parsedUrl.hash,\r\n                queryKeys = Object.getOwnPropertyNames(parsedUrl.query),\r\n                query = {};\r\n\r\n            for (var i = 0; i < queryKeys.length; i++) {\r\n                var key = queryKeys[i];\r\n                if (strings.indexOf(key) === -1) {\r\n                    query[key] = parsedUrl.query[key];\r\n                }\r\n            }\r\n\r\n            var queryString = CP_Customizer.utils.stringifyUrlQuery(query);\r\n\r\n            if (!queryString.length) {\r\n                queryString = \"/\";\r\n            }\r\n\r\n            return parsedUrl.location + queryString + hash;\r\n        };\r\n\r\n        CP_Customizer.utils.nodeMatchingClasses = function (node, classList, firstMatchOnly) {\r\n\r\n            if (!$(node).length) {\r\n                if (firstMatchOnly) {\r\n                    return undefined;\r\n                }\r\n                return [];\r\n            }\r\n\r\n            result = Array.from($(node)[0].classList).filter(function (_class) {\r\n                return (classList.indexOf(_class) !== -1);\r\n            });\r\n\r\n            if (firstMatchOnly) {\r\n                if (result.length) {\r\n                    result = result[0];\r\n                } else {\r\n                    result = undefined;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        CP_Customizer.utils.colorInArray = function (colorsArray, color, includeAlpha) {\r\n            var inArray = false;\r\n            color = tinycolor(color);\r\n\r\n            for (var i = 0; i < colorsArray.length; i++) {\r\n\r\n                var _color = tinycolor(colorsArray[i]);\r\n                inArray = (color._r === _color._r) && (color._g === _color._g) && (color._b === _color._b);\r\n\r\n                if (includeAlpha) {\r\n                    inArray = inArray && (color._a === _color._a);\r\n                }\r\n\r\n                if (inArray) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return inArray;\r\n\r\n        }\r\n\r\n        CP_Customizer.utils.valueToBool = function (value) {\r\n            if (_.isBoolean(value)) {\r\n                return value;\r\n            }\r\n\r\n            if (_.isString(value)) {\r\n\r\n                var _v = value.toLowerCase();\r\n                if (_v === \"yes\" || _v === \"true\") {\r\n                    return true;\r\n                }\r\n\r\n                if (_v === \"no\" || _v === \"false\") {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (!isNaN(value)) {\r\n                return !!parseInt(value);\r\n            }\r\n\r\n            return !!value;\r\n        }\r\n\r\n\r\n        CP_Customizer.utils.convertColor = {\r\n            toRGB: function (color) {\r\n                return tinycolor(color).toRgbString();\r\n            },\r\n            toRGBA: function (color, alpha) {\r\n                return tinycolor(color).setAlpha(alpha).toRgbString();\r\n            },\r\n            toHex: function (color) {\r\n                return tinycolor(color).toHexString();\r\n            },\r\n            brighten: function (color, value) {\r\n                return tinycolor(color).brighten(value).toRgbString();\r\n            }\r\n        }\r\n\r\n        CP_Customizer.hasClass = function (element, classes) {\r\n            var elementClasses = Array.from($(element)[0].classList);\r\n        }\r\n    });\r\n})(jQuery);\r\n","(function ($, CP_Customizer) {\r\n    CP_Customizer.addModule(function () {\r\n        var used = false;\r\n        var usedWoo = false;\r\n        CP_Customizer.bind(CP_Customizer.events.PREVIEW_LOADED, function () {\r\n\r\n            // if front page was opened in customizer, but woocommerce modified the content in the preview (without changing the link)\r\n            // set used to false, so that the function will continue and hide the page sections\r\n            if (\r\n              used &&\r\n              (\r\n                (CP_Customizer.preview.data('queryVars:post_type', 'default') === 'product') ||\r\n                (CP_Customizer.preview.data('queryVars:pagename', 'default') === 'checkout')\r\n              ) &&\r\n              (usedWoo===false)) {\r\n              used = false;\r\n            }\r\n\r\n            if (used) {\r\n                return;\r\n            }\r\n            used = true;\r\n\r\n            var $activatePageCard = $('.reiki-needed-container[data-type=\"activate\"]');\r\n            var $openPageCard = $('.reiki-needed-container[data-type=\"select\"]');\r\n            var $makeEditable = $('.reiki-needed-container[data-type=\"edit-this-page\"]');\r\n            var $makeProductEditable = $('.reiki-needed-container[data-type=\"edit-this-product\"]');\r\n\r\n            var data = CP_Customizer.preview.data();\r\n            var toAppend;\r\n\r\n            var canMaintainThis = CP_Customizer.preview.data('canEditInCustomizer') //CP_Customizer.options('isMultipage', false) && (data.pageID !== false);\r\n\r\n            if (data.maintainable) {\r\n\r\n            } else {\r\n                if (canMaintainThis) {\r\n\r\n                    if (CP_Customizer.preview.data('queryVars:post_type', 'page') === 'page') {\r\n                        toAppend = $makeEditable.clone().show();\r\n                    } else {\r\n                        toAppend = $makeProductEditable.clone().show();\r\n                    }\r\n\r\n                    wp.customize.panel('page_content_panel').container.eq(0).find('.sections-list-reorder').empty().append(toAppend);\r\n\r\n                } else {      \r\n                    wp.customize.panel('page_content_panel').container.eq(0).find('.accordion-section-title > .add-section-plus').remove();\r\n                    if (!data.hasFrontPage) {\r\n                        toAppend = $activatePageCard.eq(0).clone().show();\r\n                        wp.customize.panel('page_content_panel').container.eq(0).find('.sections-list-reorder').empty().append(toAppend);\r\n                    } else {\r\n                        if (!data.isFrontPage) {\r\n                            toAppend = $openPageCard.eq(0).clone().show();\r\n                            wp.customize.panel('page_content_panel').container.eq(0).find('.sections-list-reorder').empty().append(toAppend);\r\n                        }\r\n                    }\r\n\r\n                    if(CP_Customizer.preview.data('queryVars:post_type', 'product') === 'product') {\r\n                      usedWoo = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n        });\r\n    });\r\n})(jQuery, CP_Customizer);\r\n","(function (root, CP_Customizer, $) {\n\n    CP_Customizer.__shortcodesPopupControls = {};\n\n    CP_Customizer.registerShortcodePopupControls = function (tag, controls) {\n        CP_Customizer.__shortcodesPopupControls[tag] = controls;\n    };\n\n\n     CP_Customizer.hooks.addAction('dynamic_columns_handle', function (cols, node) {\n        if (CP_Customizer.isShortcodeContent(node)) {\n            var shortcode = CP_Customizer.getNodeShortcode(node);\n            var device = root.CP_Customizer.preview.currentDevice();\n            var prop = ( device === \"tablet\") ? \"columns_tablet\" : \"columns\";\n            shortcode.attrs = shortcode.attrs || {};\n            shortcode.attrs[prop] = cols;\n            CP_Customizer.updateNodeFromShortcodeObject(node, shortcode);\n        }\n    });\n    CP_Customizer.hooks.addFilter('is_shortcode_editable', function (value, shortcode) {\n        var controls = CP_Customizer.hooks.applyFilters('filter_shortcode_popup_controls', CP_Customizer.utils.deepClone(CP_Customizer.__shortcodesPopupControls));\n\n        // console.log(controls, shortcode);\n        value = value || _.has(controls, shortcode.tag);\n\n        return value;\n    });\n\n\n    CP_Customizer.getShortcodePopupFields = function (shortcodeData) {\n        var controls = CP_Customizer.hooks.applyFilters('filter_shortcode_popup_controls', CP_Customizer.utils.deepClone(CP_Customizer.__shortcodesPopupControls));\n        var tag = _.isObject(shortcodeData) ? shortcodeData.tag : shortcodeData;\n        var attrs = controls[tag] || [];\n        var controls = [];\n        for (var attrName in attrs) {\n            if (attrs.hasOwnProperty(attrName)) {\n                var control = CP_Customizer.utils.deepClone(attrs[attrName].control);\n\n                if (shortcodeData.attrs && shortcodeData.attrs.hasOwnProperty(attrName)) {\n                    control.value = shortcodeData.attrs[attrName];\n                } else {\n                    control.value = !_.isUndefined(control.default) ? control.default : \"\";\n                }\n\n                if (control.getValue) {\n                    control.value = control.getValue(attrName, shortcodeData.tag);\n                }\n\n                control.name = attrName;\n                control.id = attrName;\n                if (control.getParse) {\n                    control.value = control.getParse(control.value);\n                }\n                controls.push(control);\n            }\n        }\n        return controls;\n    };\n\n    CP_Customizer.openShortcodePopupEditor = function (callback, $node, shortcode) {\n        var popupContainer = $('#cp-container-editor');\n\n        var fields = CP_Customizer.getShortcodePopupFields(shortcode);\n\n        var fallback = CP_Customizer.shortcodesAttrs && CP_Customizer.shortcodesAttrs[shortcode];\n\n        if (!fields.length || fallback) {\n            return;\n        }\n\n        shortcode = {\n            tag: _.isObject(shortcode) ? shortcode.tag : shortcode,\n            attrs: _.isObject(shortcode) ? shortcode.attrs : {},\n        };\n\n        function setContent() {\n            for (var i = 0; i < fields.length; i++) {\n                var field = fields[i],\n                    node = field.node;\n                var value = field.val();\n\n                if (field.setValue) {\n                    field.setValue(field.id, value, shortcode.tag);\n                } else {\n                    shortcode.attrs[field.id] = field.setParse ? field.setParse(value) : value;\n                }\n            }\n\n            callback(shortcode.attrs);\n            CP_Customizer.closePopUps();\n            CP_Customizer.updateState();\n        }\n\n\n        popupContainer.find('[id=\"cp-item-ok\"]').off().click(setContent);\n        popupContainer.find('[id=\"cp-item-cancel\"]').off().click(function () {\n            CP_Customizer.closePopUps();\n        });\n\n        popupContainer.find('#cp-items').empty();\n        for (var i = 0; i < fields.length; i++) {\n            var field = fields[i],\n                type = field.type || 'text',\n                content = (CP_Customizer.jsTPL[type] ? CP_Customizer.jsTPL[type](field) : '');\n\n            var $fieldContent = $(content);\n\n            $fieldContent.attr('data-field', field.name);\n\n\n            field.$wrapper = $fieldContent;\n            field.$panel = popupContainer.find('#cp-items');\n            field.$node = $node;\n\n            field.val = function () {\n                var value = {};\n                var field = this;\n                var _values = this.$wrapper.find('[id^=\"' + field.id + '\"]').filter('input,textarea,select').map(function (index, elem) {\n                    return {\n                        key: $(this).attr('id').replace(field.id + \"__\", ''),\n                        value: $(this).is('[type=checkbox]') ? this.checked : $(this).val()\n                    };\n                }).toArray();\n\n                _(_values).each(function (v) {\n                    value[v.key] = v.value;\n                });\n\n                if (_values.length === 1 && value.hasOwnProperty(field.id)) {\n                    value = value[field.id];\n                }\n\n                return value;\n            };\n\n            if (field.ready && _.isFunction(field.ready)) {\n                $fieldContent.data('field', field);\n                $fieldContent.bind('shortcode-popup-ready', function () {\n                    var $fieldContent = $(this);\n                    var field = $fieldContent.data('field');\n                    field.ready($fieldContent, $fieldContent.closest('#cp-items'));\n                });\n\n\n            }\n\n            popupContainer.find('#cp-items').append($fieldContent);\n\n        }\n\n        popupContainer.find('#cp-items').children().trigger('shortcode-popup-ready');\n        CP_Customizer.popUp( window.CP_Customizer.translateCompanionString('Manage Options'), \"cp-container-editor\", {\n            width: \"600\",\n            class: \"data-edit-popup\"\n        });\n    };\n\n\n    CP_Customizer.editEscapedShortcodeAtts = function ($node, shortcode) {\n        CP_Customizer.openShortcodePopupEditor(function (attrs) {\n            shortcode.attrs = attrs;\n\n            var shortcodeText = '[' + shortcode.tag;\n            var attrs = [];\n            for (var attr in shortcode.attrs) {\n                if ((shortcode.attrs[attr] + \"\").trim() != \"\") {\n\n                    attrs.push(attr + '=\"' + htmlEscape(htmlEscape(shortcode.attrs[attr])) + '\"');\n                }\n            }\n\n            if (attrs.length) {\n                shortcodeText += ' ' + attrs.join(' ');\n            }\n\n            shortcodeText += ']';\n\n            CP_Customizer.updateNodeShortcode($node, shortcodeText);\n\n        }, $node, shortcode);\n    };\n\n    function htmlEscape(str) {\n        return str\n            .replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n})(window, CP_Customizer, jQuery);\n\n","(function (root, CP_Customizer, $) {\r\n\r\n    CP_Customizer.__customPopupControls = {};\r\n\r\n    CP_Customizer.registerCustomPopupControls = function (tag, controls) {\r\n        CP_Customizer.__customPopupControls[tag] = controls;\r\n    };\r\n\r\n\r\n    CP_Customizer.getCustomPopupFields = function (tag, $node) {\r\n        var controls = CP_Customizer.hooks.applyFilters('filter_custom_popup_controls', CP_Customizer.utils.deepClone(CP_Customizer.__customPopupControls));\r\n        var attrs = controls[tag] || [];\r\n        var controls = [];\r\n        for (var attrName in attrs) {\r\n            if (attrs.hasOwnProperty(attrName)) {\r\n                var control = CP_Customizer.utils.deepClone(attrs[attrName].control);\r\n\r\n\r\n                if (_.isFunction(control.active)) {\r\n                    if (!control.active($node)) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                if (control.attr) {\r\n                    control.value = $node.attr(control.attr);\r\n                }\r\n\r\n                if (control.getValue) {\r\n                    control.value = control.getValue(attrName, $node, control.default);\r\n                }\r\n\r\n                if (!control.value && control.default) {\r\n                    control.value = control.default;\r\n                }\r\n\r\n                control.name = attrName;\r\n                control.id = attrName;\r\n                if (control.getParse) {\r\n                    control.value = control.getParse(control.value);\r\n                }\r\n                controls.push(control);\r\n            }\r\n        }\r\n        return controls;\r\n    };\r\n\r\n    CP_Customizer.openCustomPopupEditor = function ($node, tag, callback) {\r\n        var popupContainer = $('#cp-container-editor');\r\n\r\n        var fields = CP_Customizer.getCustomPopupFields(tag, $node);\r\n\r\n\r\n        function setContent() {\r\n            var values = {};\r\n            for (var i = 0; i < fields.length; i++) {\r\n                var field = fields[i],\r\n                    value = field.val();\r\n\r\n                values[field.id] = {\r\n                    oldValue: field.value,\r\n                    value: value\r\n                };\r\n\r\n                if (field.attr) {\r\n                    $node.attr(field.attr, value);\r\n                }\r\n\r\n            }\r\n\r\n            if (callback) {\r\n                callback(values, $node);\r\n            }\r\n\r\n            CP_Customizer.closePopUps();\r\n            CP_Customizer.updateState();\r\n        }\r\n\r\n\r\n        popupContainer.find('[id=\"cp-item-ok\"]').off().click(setContent);\r\n        popupContainer.find('[id=\"cp-item-cancel\"]').off().click(function () {\r\n            CP_Customizer.closePopUps();\r\n        });\r\n\r\n        popupContainer.find('#cp-items').empty();\r\n        for (var i = 0; i < fields.length; i++) {\r\n            var field = fields[i],\r\n                type = field.type || 'text',\r\n                content = (CP_Customizer.jsTPL[type] ? CP_Customizer.jsTPL[type](field) : '');\r\n\r\n            var $fieldContent = $(content);\r\n\r\n            $fieldContent.attr('data-field', field.name);\r\n\r\n\r\n            field.$wrapper = $fieldContent;\r\n            field.$panel = popupContainer.find('#cp-items');\r\n            field.$node = $node;\r\n\r\n            field.val = function () {\r\n                var value = {};\r\n                var field = this;\r\n                var _values = this.$wrapper.find('[id^=\"' + field.id + '\"]').filter('input,textarea,select').map(function (index, elem) {\r\n                    return {\r\n                        key: $(this).attr('id').replace(field.id + \"__\", ''),\r\n                        value: $(this).is('[type=checkbox]') ? this.checked : $(this).val()\r\n                    };\r\n                }).toArray();\r\n\r\n                _(_values).each(function (v) {\r\n                    value[v.key] = v.value;\r\n                });\r\n\r\n                if (_values.length === 1 && value.hasOwnProperty(field.id)) {\r\n                    value = value[field.id];\r\n                }\r\n\r\n                return value;\r\n            };\r\n\r\n            if (field.ready && _.isFunction(field.ready)) {\r\n                $fieldContent.data('field', field);\r\n                $fieldContent.bind('shortcode-popup-ready', function () {\r\n                    var $fieldContent = $(this);\r\n                    var field = $fieldContent.data('field');\r\n                    field.ready($fieldContent, $fieldContent.closest('#cp-items'));\r\n                });\r\n\r\n\r\n            }\r\n\r\n            popupContainer.find('#cp-items').append($fieldContent);\r\n\r\n        }\r\n\r\n        popupContainer.find('#cp-items').children().trigger('shortcode-popup-ready');\r\n        CP_Customizer.popUp(window.CP_Customizer.translateCompanionString('Manage Options'), \"cp-container-editor\", {\r\n            width: \"600\",\r\n            class: \"data-edit-popup\"\r\n        });\r\n    };\r\n\r\n\r\n    function htmlEscape(str) {\r\n        return str\r\n            .replace(/&/g, '&amp;')\r\n            .replace(/\"/g, '&quot;')\r\n            .replace(/'/g, '&#39;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;');\r\n    }\r\n})(window, CP_Customizer, jQuery);\r\n","(function (root, CP_Customizer, $) {\r\n\r\n    var currentPageStyles = {};\r\n    var styleEL = $(\"\");\r\n    var mod = null;\r\n\r\n    var mediaMap = {\r\n        \"mobile\": \"@media screen and (max-width:767)\",\r\n        \"tablet\": \"@media screen and (min-width:768)\",\r\n        \"desktop\": \"@media screen and (min-width:1024)\",\r\n        \"nomedia\": false\r\n    };\r\n\r\n    var outputOrder = ['nomedia', 'mobile', 'tablet', 'desktop'];\r\n\r\n    function sprintf_style_array(data, media) {\r\n        var style = \"\";\r\n\r\n\r\n        for (var selector in data) {\r\n            var props = data[selector];\r\n            var propsText = \"\";\r\n\r\n            for (var prop in props) {\r\n                var value = props[prop];\r\n                propsText += \"\\t\" + prop + \":\" + value + \";\\n\";\r\n            }\r\n\r\n            style += selector + \"{\\n\" + propsText + \"\\n}\";\r\n        }\r\n        if (media) {\r\n            style = media + \"{\\n\" + style + \"\\n}\";\r\n        }\r\n\r\n        return style + \"\\n\\n\";\r\n    }\r\n\r\n    function setModAndUpdate() {\r\n        CP_Customizer.setMod(mod, _.clone(currentPageStyles), 'postMessage');\r\n\r\n        var style = \"\";\r\n\r\n        for (var i = 0; i < outputOrder.length; i++) {\r\n            var media = outputOrder[i];\r\n            var mediaQuery = mediaMap[media];\r\n            style += sprintf_style_array(currentPageStyles[media], mediaQuery);\r\n        }\r\n        styleEL.text(style);\r\n    }\r\n\r\n\r\n    CP_Customizer.on(CP_Customizer.events.PREVIEW_LOADED, function () {\r\n        currentPageStyles = CP_Customizer.preview.data('content_style');\r\n        mod = 'custom_content_style_' + CP_Customizer.preview.data('pageID');\r\n        styleEL = CP_Customizer.preview.find('#page-content-custom-styles');\r\n    });\r\n\r\n\r\n    CP_Customizer.contentStyle = {\r\n        getStyle: function (selector, media) {\r\n\r\n            if (!selector) {\r\n                return {};\r\n            }\r\n\r\n            media = media || 'nomedia';\r\n            return currentPageStyles[media][selector] || {};\r\n        },\r\n\r\n        removeSelector: function (selector, media, noUpdate) {\r\n            media = media || 'nomedia';\r\n\r\n            if (media === \"all\") {\r\n                for (var m in currentPageStyles) {\r\n                    this.removeSelector(selector, m, true);\r\n                }\r\n                setModAndUpdate();\r\n                return;\r\n            }\r\n\r\n            if (currentPageStyles[media]) {\r\n                if (currentPageStyles[media][selector]) {\r\n                    delete currentPageStyles[media][selector];\r\n                } else {\r\n                    for (var s in currentPageStyles[media]) {\r\n                        if (s.match(selector)) {\r\n                            delete currentPageStyles[media][s];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!noUpdate) {\r\n\r\n                setModAndUpdate();\r\n            }\r\n\r\n        },\r\n\r\n\r\n        getProp: function (selector, pseudo, prop, defaultValue, media) {\r\n            pseudo = (pseudo || \"\").trim();\r\n            selector = selector + pseudo;\r\n\r\n            var style = this.getStyle(selector, media);\r\n            return (style[prop] || \"\").toLowerCase().replace('!important', '').trim() || defaultValue;\r\n\r\n        },\r\n\r\n        getNodeProp: function (node, selector, pseudo, prop, media) {\r\n\r\n            if (!node || node.length === 0) {\r\n                return '';\r\n            }\r\n\r\n            node = CP_Customizer.preview.jQuery(node)[0];\r\n            var defaultValue = CP_Customizer.preview.frame().getComputedStyle(node, pseudo).getPropertyValue(prop);\r\n            return this.getProp(selector, pseudo, prop, defaultValue, media)\r\n        },\r\n\r\n\r\n        getNodeProps: function (node, selector, pseudo, props, media) {\r\n            var result = {},\r\n                manager = this;\r\n\r\n            _.each(props, function (prop) {\r\n                result[prop] = manager.getNodeProp(node, selector, pseudo, prop, media);\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        isImportant: function (selector, pseudo, prop, media) {\r\n            pseudo = (pseudo || \"\").trim();\r\n            selector = selector + pseudo;\r\n\r\n            var style = this.getStyle(selector, media);\r\n            var value = style[prop] || \"\";\r\n            return value.toLowerCase().indexOf('!important') !== -1;\r\n\r\n        },\r\n\r\n        setProp: function (selector, pseudo, prop, value, media, handeledModUpdate) {\r\n            media = media || 'nomedia';\r\n            pseudo = (pseudo || \"\").trim();\r\n\r\n            pseudo = (pseudo || \"\").trim();\r\n            selector = selector + pseudo;\r\n\r\n            if (!currentPageStyles[media]) {\r\n                currentPageStyles[media] = {};\r\n            }\r\n\r\n            if (_.isArray(currentPageStyles[media])) {\r\n                currentPageStyles[media] = _.extend({}, currentPageStyles[media]);\r\n            }\r\n\r\n            if (!currentPageStyles[media][selector]) {\r\n                currentPageStyles[media][selector] = {};\r\n            }\r\n\r\n            currentPageStyles[media][selector][prop] = value;\r\n\r\n            if (!handeledModUpdate) {\r\n                setModAndUpdate();\r\n            }\r\n        },\r\n\r\n        removeProp: function (selector, pseudo, prop, media) {\r\n            media = media || 'nomedia';\r\n\r\n            pseudo = (pseudo || \"\").trim();\r\n            selector = selector + pseudo;\r\n\r\n            if (currentPageStyles[media]) {\r\n                if (currentPageStyles[media][selector]) {\r\n                    if (currentPageStyles[media][selector][prop]) {\r\n                        delete currentPageStyles[media][selector][prop];\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            setModAndUpdate();\r\n        },\r\n\r\n        setProps: function (selector, pseudo, props, media) {\r\n            for (var prop in props) {\r\n                this.setProp(selector, pseudo, prop, props[prop], media, true);\r\n            }\r\n\r\n            setModAndUpdate();\r\n        },\r\n\r\n        merge: function (styles) {\r\n            currentPageStyles = jQuery.extend(currentPageStyles, styles);\r\n            setModAndUpdate();\r\n        },\r\n\r\n        recompileScssStyle: function () {\r\n            return;\r\n            var settings = CP_Customizer.options('scss_settings', {});\r\n            var vars = {};\r\n\r\n            for (var i = 0; i < settings.length; i++) {\r\n                var setting = settings[i];\r\n                var setting_vars = CP_Customizer.hooks.applyFilters('scss_setting_vars_' + setting, {});\r\n\r\n                if (_.isEmpty(setting_vars)) {\r\n                    setting_vars = CP_Customizer.hooks.applyFilters('scss_setting_vars', {}, setting);\r\n                }\r\n\r\n                vars = _.extend(_.clone(vars), _.clone(setting_vars));\r\n            }\r\n\r\n            var data = CP_Customizer.preview.data('scss', {});\r\n\r\n            vars = _.extend(_.clone(data.vars), _.clone(vars));\r\n            data.vars = vars;\r\n\r\n            var request = CP_Customizer.IO.post('compiled_style_preview', {\r\n                data: data\r\n            });\r\n\r\n            request.done(function (content) {\r\n                CP_Customizer.preview.find('#ope-compiled-css').text(content);\r\n            });\r\n\r\n        },\r\n\r\n        setSectionItemColor: function (node, colorMapping, newColor) {\r\n\r\n            var $node = CP_Customizer.preview.jQuery(node),\r\n                colorName = CP_Customizer.getThemeColor(newColor),\r\n                colorClasses = Object.getOwnPropertyNames(CP_Customizer.getColorsObj()).concat(['color-white', 'color-black', 'color-gray']);\r\n\r\n            colorMapping.forEach(function (cMap) {\r\n                if (colorName) {\r\n                    if (cMap.colorClass) {\r\n                        var oldColorClasses = colorClasses.map(function (color) {\r\n                            return cMap.colorClass.prefix + color + cMap.colorClass.suffix;\r\n                        });\r\n\r\n                        var newClass = cMap.colorClass.prefix + colorName + cMap.colorClass.suffix;\r\n                        var $item = $node.is(cMap.colorClass.selector || cMap.selector) ? $node : $node.find(cMap.colorClass.selector || cMap.selector);\r\n                        $item.removeClass(oldColorClasses.join(' ')).addClass(newClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n\r\n        getSectionItemColor: function (node, colorMapping, defaultColor) {\r\n\r\n            if (!colorMapping) {\r\n                return 'rgba(0,0,0,0)';\r\n            }\r\n\r\n            var $node = CP_Customizer.preview.jQuery(node),\r\n                firstCMap = colorMapping[0],\r\n                selector = colorMapping[0].selector,\r\n                colorClasses = Object.getOwnPropertyNames(CP_Customizer.getColorsObj()).concat(['color-white', 'color-black', 'color-gray']),\r\n                result = defaultColor || 'rgba(0,0,0,0)';\r\n\r\n            if (firstCMap.colorClass) {\r\n                selector = firstCMap.colorClass.selector || selector;\r\n                var $item = $node.is(selector) ? $node : $node.find(selector);\r\n\r\n                for (var i = 0; i < colorClasses.length; i++) {\r\n                    var colorClass = colorClasses[i],\r\n                        nodeClass = firstCMap.colorClass.prefix + colorClass + firstCMap.colorClass.suffix;\r\n                    if ($item.hasClass(nodeClass)) {\r\n                        result = CP_Customizer.getColorValue(colorClass);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return result;\r\n\r\n        }\r\n    };\r\n\r\n\r\n    CP_Customizer.styleUtils = {\r\n        generateCSSLinerGradient: function (angle, colors) {\r\n            var colorsArray = colors.map(function (color) {\r\n                return color.value + \" \" + color.stop + '%'\r\n            });\r\n\r\n            colorsText = colorsArray.join(' , ');\r\n\r\n            return 'linear-gradient(' + angle + 'deg, ' + colorsText + ')';\r\n\r\n        },\r\n\r\n        generateOneSideLinerGradient: function (angle, color, transpacency, from) {\r\n            transpacency = transpacency || 50;\r\n            startAlpha = transpacency / 2;\r\n            from = from || 50;\r\n\r\n            var fromColor = tinycolor(color).setAlpha(startAlpha / 100).toRgbString(),\r\n                middleColor = tinycolor(color).setAlpha(transpacency / 100).toRgbString(),\r\n                toColor = tinycolor(color).toHexString();\r\n\r\n            var colors = [\r\n                {\r\n                    value: 'rgba(0,0,0,0)',\r\n                    stop: 0\r\n                },\r\n                {\r\n                    value: fromColor,\r\n                    stop: from / 2\r\n                },\r\n                {\r\n                    value: middleColor,\r\n                    stop: from\r\n                },\r\n                {\r\n                    value: toColor,\r\n                    stop: 100\r\n                }\r\n            ];\r\n\r\n            return this.generateCSSLinerGradient(angle, colors);\r\n\r\n        },\r\n\r\n        getCSSGradientColors: function (value, colorAsObject) {\r\n            var parts = value.match(/,((.*?)\\s([0-9]+)%)/ig);\r\n            parts = parts.map(function (part) {\r\n                part = CP_Customizer.utils.phpTrim(part, ',').trim();\r\n                var stop = part.match(/(\\d+)%/igm)[0];\r\n                var color = part.replace(stop, '').trim();\r\n\r\n                return {\r\n                    value: colorAsObject ? tinycolor(color) : color,\r\n                    stop: CP_Customizer.utils.phpTrim(stop, '%').trim()\r\n                }\r\n            });\r\n\r\n            return parts\r\n        },\r\n\r\n        getRGBAStringTransparency: function (color) {\r\n\r\n          var transparency = tinycolor(color).getAlpha();\r\n\r\n          return transparency;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n})(window, CP_Customizer, jQuery);\r\n","(function (root, CP_Customizer, $) {\r\n\r\n    var sectionSettingsContainer = $('' +\r\n        '<li id=\"cp-section-setting-popup\" class=\"customizer-right-section\">' +\r\n        '    <span data-close-right-sidebar=\"true\" title=\"' +  root.CP_Customizer.translateCompanionString(\"Close Panel\") +'\" class=\"close-panel\"></span>' +\r\n        '    <ul class=\"section-settings-container accordion-section-content no-border\"></ul>' +\r\n        ' </li>');\r\n\r\n    CP_Customizer.addModule(function (CP_Customizer) {\r\n\r\n        var control = wp.customize.panel('page_content_panel');\r\n        control.container.find('.sections-list-reorder').append(sectionSettingsContainer);\r\n\r\n        CP_Customizer.hooks.addFilter('content_section_setting_float', function () {\r\n            return false;\r\n        });\r\n\r\n        CP_Customizer.hooks.addFilter('content_section_setting', function () {\r\n            return \"cp-section-setting\";\r\n        });\r\n\r\n\r\n        CP_Customizer.createControl = function (options) {\r\n\r\n            options = _.extend({\r\n                id: '',\r\n                type: '',\r\n                container: $('<div />'),\r\n                params: {},\r\n                value: '',\r\n                updater: function (value) {\r\n                    if (control.container.find('[data-cp-link]').is('[type=checkbox]')) {\r\n                        control.container.find('[data-cp-link]').prop('checked', value);\r\n                        return;\r\n                    }\r\n                    control.container.find('[data-cp-link]').val(value).trigger('change');\r\n                }\r\n            }, options);\r\n\r\n\r\n            options.params.type = options.params.type || options.type;\r\n\r\n            var settingID = options.id || _.uniqueId('control-setting-');\r\n            var setting = new CP_Customizer.wpApi.Setting(settingID, options.value, {});\r\n\r\n            setting.previewer = CP_Customizer.wpApi.previewer;\r\n\r\n            setting.transport = 'postMessage';\r\n\r\n            options.params.settings = [setting];\r\n            options.params.value = options.value;\r\n            options.params.link = ' data-cp-link';\r\n\r\n            var controllerClass = CP_Customizer.wpApi.controlConstructor[options.type] || CP_Customizer.wpApi.Control;\r\n            var control = new controllerClass(\r\n                settingID + '-control',\r\n                {\r\n                    containerType: options.type,\r\n                    params: options.params\r\n                }\r\n            );\r\n\r\n            var container = $(options.container);\r\n\r\n            control.container = container;\r\n            control.setting = control.setting || setting;\r\n\r\n            control.section = function () {\r\n                return 'page_content';\r\n            };\r\n\r\n            var updaterCallback = options.updater;\r\n\r\n            var oldSet = setting.set;\r\n\r\n            setting.bind(function (value) {\r\n                control.params.value = value;\r\n                updaterCallback.call(this, value);\r\n            });\r\n\r\n            setting.bind(function (value, oldValue) {\r\n                if (_.isFunction(setting.onChange)) {\r\n                    setting.onChange(value, oldValue);\r\n                    CP_Customizer.markSave();\r\n                }\r\n            });\r\n\r\n            setting.controlContainer = container;\r\n            setting.renderControl = function () {\r\n                control.renderContent();\r\n                control.ready();\r\n\r\n                return this;\r\n            };\r\n\r\n            setting.attachWithSetter = function (currentValue, onChange) {\r\n                this.onChange = false;\r\n                this._value = undefined;\r\n\r\n                this.set(currentValue);\r\n\r\n                if (options.onAttach) {\r\n                    options.onAttach.call(setting, currentValue);\r\n                }\r\n\r\n                var self = this;\r\n                _.delay(function () {\r\n                    self.onChange = onChange;\r\n                }, 1);\r\n            };\r\n\r\n            setting.renderControl();\r\n            setting.control = control;\r\n\r\n\r\n            setting.hide = function () {\r\n                this.control.container.hide();\r\n            };\r\n\r\n            setting.show = function () {\r\n                this.control.container.show();\r\n            };\r\n\r\n            return setting;\r\n        };\r\n\r\n        CP_Customizer.createControl.color = function (id, container, params) {\r\n\r\n            var $container = $('<li class=\"customize-control customize-control-kirki customize-control-kirki-color\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                updater: function (value) {\r\n                    var colorControl = this.control.container.find('input[data-cp-link]');\r\n                    if (colorControl.data('spectrum.id') === undefined) {\r\n                        colorControl.iris('color', value);\r\n                    } else {\r\n                        colorControl.spectrum(\"set\", value);\r\n                    }\r\n                },\r\n                type: 'kirki-color',\r\n                container: $container,\r\n                params: _.extend(\r\n                    params,\r\n                    {\r\n                        choices: {\r\n                            alpha: params.alpha || true\r\n                        },\r\n                        value: params.value || \"#FFFFFF\"\r\n                    }\r\n                ),\r\n                value: params.value || \"#FFFFFF\"\r\n            };\r\n\r\n            return CP_Customizer.createControl(options);\r\n        };\r\n\r\n\r\n        CP_Customizer.createControl.palette = function (id, container, params) {\r\n\r\n            var $container = $('<li class=\"customize-control customize-control-kirki customize-control-kirki-color\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                updater: function (value) {\r\n                    var colorControl = this.control.container.find('input[data-cp-link]');\r\n                    if (colorControl.data('spectrum.id') === undefined) {\r\n                        colorControl.iris('color', value);\r\n                    } else {\r\n                        var cb = colorControl.spectrum(\"option\", \"move\");\r\n                        colorControl.spectrum(\"destroy\");\r\n                        colorControl.spectrum({\r\n                            showPaletteOnly: true,\r\n                            showPalette: true,\r\n                            color: value,\r\n                            palette: [params.palette],\r\n                            move: cb,\r\n                            change: cb\r\n                        });\r\n                        colorControl.spectrum(\"set\", value);\r\n\r\n                    }\r\n                },\r\n                type: 'kirki-color',\r\n                container: $container,\r\n                params: _.extend(\r\n                    params,\r\n                    {\r\n                        choices: {\r\n                            alpha: params.alpha || true\r\n                        },\r\n                        value: params.value || \"#FFFFFF\"\r\n                    }\r\n                ),\r\n                value: params.value || \"#FFFFFF\"\r\n            };\r\n\r\n            var result = CP_Customizer.createControl(options);\r\n\r\n            result.setPallete = function (palette) {\r\n                var colorControl = this.control.container.find('input[data-cp-link]');\r\n                colorControl.spectrum('option', 'palette', palette);\r\n            };\r\n\r\n            return result;\r\n        };\r\n\r\n\r\n        CP_Customizer.createControl.select = function (id, container, params) {\r\n            var type = 'kirki-select',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                updater: function (value) {\r\n                    if (this.controlContainer.find('[data-cp-link]').data().selectize) {\r\n                        this.controlContainer.find('[data-cp-link]').data().selectize.setValue(value);\r\n                    }\r\n                },\r\n                type: type,\r\n                container: $container,\r\n                params: _.extend(\r\n                    params,\r\n                    {\r\n                        choices: params.choices || [],\r\n                        value: params.value || \"\",\r\n                        multiple: params.multiple || []\r\n                    }\r\n                ),\r\n                value: params.value || \"\"\r\n            };\r\n\r\n            return CP_Customizer.createControl(options);\r\n        };\r\n\r\n        CP_Customizer.createControl.text = function (id, container, params) {\r\n            var type = 'kirki-number',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />'),\r\n                params = params || {};\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n\r\n                type: type,\r\n                onAttach: function (value) {\r\n                    var thisInput = this.controlContainer.find('input');\r\n                    thisInput.val(value);\r\n                },\r\n                container: $container,\r\n                params: _.extend(\r\n                    params,\r\n                    {\r\n                        value: params.value || \"\"\r\n                    }\r\n                ),\r\n                value: params.value || \"\"\r\n            };\r\n\r\n            var setting = CP_Customizer.createControl(options);\r\n            setting.control.container.find('input').spinner('destroy');\r\n\r\n            return setting;\r\n        };\r\n\r\n        CP_Customizer.createControl.number = function (id, container, params) {\r\n            var type = 'kirki-number',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                updater: function (value) {\r\n                    if (this.controlContainer.find('[data-cp-link]').data().selectize) {\r\n                        this.controlContainer.find('[data-cp-link]').data().selectize.setValue(value);\r\n                    }\r\n                },\r\n                type: type,\r\n                onAttach: function (value) {\r\n                    var thisInput = this.controlContainer.find('input');\r\n                    thisInput.spinner(\"value\", value);\r\n                },\r\n                container: $container,\r\n                params: _.extend(\r\n                    params,\r\n                    {\r\n                        choices: {\r\n                            min: params.min,\r\n                            max: params.max,\r\n                            step: params.step\r\n                        },\r\n                        value: params.value || \"\"\r\n                    }\r\n                ),\r\n                value: params.value || \"\"\r\n            };\r\n\r\n            return CP_Customizer.createControl(options);\r\n        };\r\n\r\n        CP_Customizer.createControl.image = function (id, container, params) {\r\n            var type = 'image',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container,\r\n                updater: function (value) {\r\n                    if (value && \"none\" !== value && \"/none\" !== value.split('/none').pop()) {\r\n                        this.control.params.attachment = {\r\n                            id: Date.now(),\r\n                            type: type,\r\n                            sizes: {\r\n                                full: {\r\n                                    url: value\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        this.control.params.attachment = undefined;\r\n                    }\r\n                    this.control.renderContent();\r\n                },\r\n                params: _.extend(\r\n                    params,\r\n                    {\r\n                        canUpload: true,\r\n                        button_labels: {\r\n                            remove: window.CP_Customizer.translateCompanionString(\"Remove\"),\r\n                            change: window.CP_Customizer.translateCompanionString(\"Change\"),\r\n                            select: window.CP_Customizer.translateCompanionString(\"Select\"),\r\n                            placeholder: \"No file selected\",\r\n                        },\r\n                        attachment: {\r\n                            type: type,\r\n                            sizes: {\r\n                                full: {\r\n                                    url: params.url\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ),\r\n                value: params.value || \"\"\r\n            };\r\n\r\n            return CP_Customizer.createControl(options);\r\n        };\r\n\r\n        CP_Customizer.createControl.video = function (id, container, params) {\r\n            var type = 'media',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container,\r\n                updater: function (value) {\r\n                     if (value) {\r\n                         this.control.params.attachment = value;\r\n                     } else {\r\n                         this.control.params.value = '';\r\n                     }\r\n                     this.control.renderContent();\r\n                },\r\n                params: _.extend(\r\n                    params,\r\n                    {\r\n                        canUpload: true,\r\n                        button_labels: {\r\n                            remove: \"Remove\",\r\n                            change: \"Change\",\r\n                            select: \"Select\",\r\n                            placeholder: \"No file selected\",\r\n                        },\r\n                        attachment: {\r\n                            id: params.value\r\n                        }\r\n                    }\r\n                ),\r\n                value: params.value || ''\r\n            };\r\n\r\n            var result =  CP_Customizer.createControl(options);\r\n\r\n            result.onSelect = function(){};\r\n\r\n            result.attachWithSetter = function (currentValue, onChange) {\r\n                this.onChange = false;\r\n                this._value = undefined;\r\n\r\n                this.set(currentValue);\r\n\r\n                if (options.onAttach) {\r\n                    options.onAttach.call(setting, currentValue);\r\n                }\r\n\r\n                var self = this;\r\n                _.delay(function () {\r\n                    self.onSelect = onChange;\r\n                }, 1);\r\n            };\r\n\r\n            result.control.select = function() {\r\n    \t\t\t// Get the attachment from the modal frame.\r\n    \t\t\tvar node,\r\n    \t\t\t\tattachment = result.control.frame.state().get( 'selection' ).first().toJSON(),\r\n    \t\t\t\tmejsSettings = window._wpmejsSettings || {};\r\n\r\n    \t\t\tresult.control.params.attachment = attachment;\r\n\r\n    \t\t\t// Set the Customizer setting; the callback takes care of rendering.\r\n    \t\t\tresult.control.setting( attachment.id );\r\n    \t\t\tresult.onSelect({\r\n                    id: attachment.id,\r\n                    url: attachment.url,\r\n                    icon: attachment.icon,\r\n                    type: attachment.type\r\n                })\r\n    \t\t\tnode = result.control.container.find( 'audio, video' ).get(0);\r\n\r\n    \t\t\t// Initialize audio/video previews.\r\n    \t\t\tif ( node ) {\r\n    \t\t\t\tresult.control.player = new MediaElementPlayer( node, mejsSettings );\r\n    \t\t\t} else {\r\n    \t\t\t\tresult.control.cleanupPlayer();\r\n    \t\t\t}\r\n    \t\t};\r\n\r\n        return result;\r\n        };\r\n\r\n        CP_Customizer.createControl.gradient = function (id, container, params) {\r\n            var type = 'web-gradients',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                updater: function (value) {\r\n                    this.control.params.value = value;\r\n                    this.control.renderContent();\r\n                },\r\n                container: $container,\r\n                params: _.extend(\r\n                    params,\r\n                    {\r\n                        value: params.value || \"\",\r\n                        button_label: window.CP_Customizer.translateCompanionString(\"Choose Gradient\")\r\n                    }\r\n                ),\r\n                value: params.value || \"\"\r\n            };\r\n\r\n            return CP_Customizer.createControl(options);\r\n        };\r\n\r\n        CP_Customizer.createControl.gradientPro = function (id, container, params) {\r\n            var type = 'gradient-control-pro',\r\n                selector = 'customize-control-' + id + '-control',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" id=\"' + selector + '\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                updater: function (value) {\r\n                    this.control.setValue(value, true);\r\n                },\r\n                container: $container,\r\n                params: _.extend(\r\n                    params,\r\n                    {\r\n                        value: params.value || \"\",\r\n                        button_label: \"Select Gradient\",\r\n                        id: id || '',\r\n                        settings: {\r\n                            default: id || ''\r\n                        }\r\n                    }\r\n                ),\r\n                value: params.value || \"\",\r\n                selector: selector\r\n            };\r\n\r\n            return CP_Customizer.createControl(options);\r\n        };\r\n\r\n        CP_Customizer.createControl.typography = function (id, container, params) {\r\n            var type = 'kirki-typography',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" id=\"customize-control-' + id +'-control\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                updater: function (value) {\r\n                },\r\n                container: $container,\r\n                params: _.extend(\r\n                    params,\r\n                    {\r\n                        kirkiConfig: \"global\",\r\n                        l10n: kirki.l10n.global,\r\n                        default: params.value,\r\n                        id: id || '',\r\n                    }\r\n                ),\r\n                value: params.value || \"\"\r\n            };\r\n\r\n            return CP_Customizer.createControl(options);\r\n        };\r\n\r\n        CP_Customizer.createControl.sectionSeparator = function (id, container, label) {\r\n            var type = 'sectionseparator',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container,\r\n                params: {\r\n                    label: label\r\n                }\r\n            };\r\n\r\n            return CP_Customizer.createControl(options);\r\n        };\r\n\r\n        CP_Customizer.createControl.textarea = function (id, container, params) {\r\n            var type = 'kirki-generic',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container,\r\n                params: _.extend(\r\n                    params,\r\n                    {\r\n                        value: params.value || \"\",\r\n                        choices: {\r\n                            element: 'textarea',\r\n                            rows: '5'\r\n                        }\r\n                    }\r\n                ),\r\n                value: params.value || \"\"\r\n            };\r\n\r\n            return CP_Customizer.createControl(options);\r\n        };\r\n\r\n        CP_Customizer.createControl.controlsGroup = function (id, container, label) {\r\n            var type = 'sectionseparator',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-controls-container customize-control-' + type + '\" ></li>');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container,\r\n                params: {\r\n                    label: label || \"\"\r\n                }\r\n            };\r\n\r\n            var result = CP_Customizer.createControl(options);\r\n\r\n\r\n            return (function (result, $el, parent) {\r\n\r\n                if (!label) {\r\n                    result.control.container.find('.materialis-separator').remove()\r\n                }\r\n\r\n\r\n                result.parent = container;\r\n\r\n                result.free = function () {\r\n                    $el.remove();\r\n                };\r\n\r\n                result.attach = function () {\r\n                    parent.append($el);\r\n                };\r\n\r\n                result.el = function () {\r\n                    if (this.control.container.find('ul.holder').length === 0) {\r\n                        this.control.container.append('<ul class=\"holder\"></ul>');\r\n                    }\r\n                    return this.control.container.find('ul.holder');\r\n                };\r\n\r\n                return result;\r\n            })(result, $container, container);\r\n        };\r\n\r\n\r\n        CP_Customizer.createControl.controlHolder = function (id, container) {\r\n            var type = 'sectionsetting',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container\r\n            };\r\n\r\n            return CP_Customizer.createControl(options);\r\n        };\r\n\r\n\r\n        CP_Customizer.createControl.checkbox = function (id, container, label) {\r\n            var type = 'kirki-checkbox',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container,\r\n                params: {\r\n                    label: label\r\n                }\r\n            };\r\n\r\n            return CP_Customizer.createControl(options);\r\n        };\r\n\r\n\r\n        CP_Customizer.createControl.generic = function (id, container, params) {\r\n            var type = 'kirki-generic',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container,\r\n                params: {\r\n                    label: params.label,\r\n                    choices: {\r\n                        element: 'input',\r\n                        type: 'text'\r\n                    }\r\n                },\r\n                value: params.value\r\n            };\r\n\r\n            return CP_Customizer.createControl(options);\r\n\r\n\r\n            return result;\r\n        };\r\n\r\n\t\tCP_Customizer.createControl.repeater = function (id, container, params) {\r\n            var type = 'repeater',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\r\n\r\n                var repeaterContent = '';\r\n                repeaterContent+= '<label>';\r\n                repeaterContent+= '<span class=\"customize-control-title\">' + params.label + '</span>';\r\n                repeaterContent+= '<input type=\"hidden\" ' + params + ' value=\"\" />';\r\n                repeaterContent+= '</label>';\r\n                repeaterContent+= '<ul class=\"repeater-fields\"></ul>';\r\n//                repeaterContent+= '<p class=\"limit\">' + params.choices.limit + '</p>';\r\n//                repeaterContent+= '<button class=\"button-secondary repeater-add\">Add</button>';\r\n                repeaterContent+= jQuery('.customize-control-repeater-content').first().prop('outerHTML');\r\n                $container.html(repeaterContent);\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container,\r\n                params: _.extend(\r\n                    params,\r\n                    {\r\n                        kirkiConfig: \"global\",\r\n                        l10n: kirki.l10n.global,\r\n                        label: params.label,\r\n                        default: params.value,\r\n                    }\r\n                ),\r\n                value: params.value\r\n            };\r\n\r\n            return CP_Customizer.createControl(options);\r\n\r\n\r\n            return result;\r\n        };\r\n\r\n\r\n        CP_Customizer.createControl.button = function (id, container, label, callback, buttonOptions) {\r\n            var type = 'kirki-checkbox',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-ope-button\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            buttonOptions = _.extend(\r\n                {\r\n                    class: \"button full-width\"\r\n                },\r\n                buttonOptions\r\n            );\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container,\r\n                params: {\r\n                    label: label\r\n                }\r\n            };\r\n\r\n            var result = CP_Customizer.createControl(options);\r\n\r\n            result.control.container.empty();\r\n\r\n            var $button = $('<button class=\"' + buttonOptions.class + '\" />');\r\n            $button.text(label);\r\n            $button.off('click').on('click', function (event) {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                callback.call(this, event);\r\n            });\r\n\r\n            result.control.container.append($button);\r\n\r\n            return result;\r\n        };\r\n\r\n\t\tCP_Customizer.createControl.buttonGroup = function (id, container, params, callback, buttonOptions) {\r\n            var type = 'sidebar-button-group',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-ope-button\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            buttonOptions = _.extend(\r\n                {\r\n                    class: \"button full-width\"\r\n                },\r\n                buttonOptions\r\n            );\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container,\r\n                params: _.extend(\r\n                    params,\r\n                    {\r\n                        popup: id\r\n                    }\r\n                ),\r\n            };\r\n\r\n            var result = CP_Customizer.createControl(options);\r\n\r\n            return result;\r\n        };\r\n\r\n\r\n        CP_Customizer.createControl.info = function (id, container, content) {\r\n            var type = 'kirki-checkbox',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-ope-info\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container,\r\n                params: {\r\n                    label: \"\"\r\n                }\r\n            };\r\n\r\n            var result = CP_Customizer.createControl(options);\r\n\r\n            result.control.container.empty();\r\n\r\n            result.control.container.append($('<p/>').append(content));\r\n\r\n\r\n            return result;\r\n        };\r\n\r\n        CP_Customizer.createControl.infoPRO = function (id, container, content) {\r\n\r\n            if (CP_Customizer.IS_PRO) {\r\n                return;\r\n            }\r\n\r\n            var type = 'kirki-checkbox',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-ope-info-pro\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container,\r\n                params: {\r\n                    label: \"\"\r\n                }\r\n            };\r\n\r\n            var result = CP_Customizer.createControl(options);\r\n\r\n            result.control.container.empty();\r\n\r\n            result.control.container.append($('<p/>').append(content));\r\n\r\n\r\n            return result;\r\n        };\r\n\r\n\r\n        CP_Customizer.createControl.sortable = function (id, container, itemTemplate, label) {\r\n            var type = 'sectionsetting',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + '\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var options = {\r\n                id: id || '',\r\n                type: type,\r\n                container: $container,\r\n                params: {\r\n                    itemTemplate: itemTemplate,\r\n                    label: label\r\n                }\r\n            };\r\n\r\n            var result = CP_Customizer.createControl(options);\r\n\r\n            result.control.attachControls = function () {\r\n            };\r\n            result.control.free = function () {\r\n                this.container.find('.setting-control-container').empty();\r\n                try {\r\n                    this.container.sortable('destroy');\r\n                } catch (e) {\r\n\r\n                }\r\n            };\r\n\r\n            result.control.onStop = function () {\r\n            };\r\n\r\n            result.control.setItems = function (items, afterCreation) {\r\n                var control = this;\r\n                var itemContainer = this.container.find('.setting-control-container');\r\n\r\n\r\n                for (var i = 0; i < items.length; i++) {\r\n                    var item = items[i];\r\n                    var html = control.params.itemTemplate(item);\r\n\r\n                    if (afterCreation) {\r\n                        html = $(html);\r\n                        afterCreation(html, item);\r\n                    }\r\n\r\n                    itemContainer.append(html);\r\n                }\r\n\r\n                itemContainer.sortable({\r\n                    axis: \"y\",\r\n                    handle: \".handle\",\r\n                    stop: function (event, ui) {\r\n                        result.control.onStop(event, ui);\r\n                    }\r\n                });\r\n\r\n            };\r\n\r\n\r\n            return result;\r\n        }\r\n\r\n        CP_Customizer.createControl.number = function (id, container, options) {\r\n\r\n            options = options || {};\r\n\r\n            options.choices = _.extend({\r\n                min: 0,\r\n                max: 100,\r\n                step: 1\r\n            }, options.choices || {});\r\n\r\n            var type = 'kirki-number',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + ' cp-control\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n\r\n            var controlOptions = {\r\n                id: id || '',\r\n                updater: function (value) {\r\n                    var thisInput = this.controlContainer.find('input');\r\n                    thisInput.val(value);\r\n                    thisInput.change();\r\n                },\r\n                type: type,\r\n                container: $container,\r\n                params: {\r\n                    label: options.label,\r\n                    default: options.default,\r\n                    choices: options.choices\r\n                },\r\n                value: options.default\r\n            };\r\n\r\n            return CP_Customizer.createControl(controlOptions);\r\n        }\r\n\r\n        CP_Customizer.createControl.spacing = function (id, container, options) {\r\n            if (!options.sides) {\r\n                options.sides = ['top', 'bottom'];\r\n            }\r\n\r\n            var type = 'kirki-spacing',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + ' cp-control\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n            var sides = {};\r\n            var controls = {};\r\n\r\n            for (var i = 0; i < options.sides.length; i++) {\r\n                sides[options.sides[i]] = \"0px\";\r\n                controls[options.sides[i]] = true;\r\n            }\r\n\r\n            var controlOptions = {\r\n                id: id || '',\r\n                updater: function (value) {\r\n\r\n                    for (var key in value) {\r\n                        var $input = this.controlContainer.find('.' + key + '.input-wrapper > input');\r\n                        $input.val(value[key]);\r\n                    }\r\n\r\n                },\r\n                type: type,\r\n                container: $container,\r\n                params: {\r\n                    kirkiConfig: \"global\",\r\n                    l10n: kirki.l10n.global,\r\n                    label: options.label,\r\n                    default: sides,\r\n                    choices: {\r\n                        controls: controls\r\n                    }\r\n                },\r\n                value: sides\r\n            };\r\n\r\n            kirkiNotifications(id, type, 'global');\r\n\r\n            return CP_Customizer.createControl(controlOptions);\r\n        };\r\n\r\n        CP_Customizer.createControl.dimension = function (id, container, options) {\r\n\r\n            options = options || {};\r\n\r\n            var type = 'kirki-dimension',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + ' cp-control\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n\r\n            var controlOptions = {\r\n                id: id || '',\r\n                updater: function (value) {\r\n                    var $input = this.controlContainer.find('.input-wrapper > input');\r\n                    $input.val(value);\r\n\r\n                },\r\n                type: type,\r\n                container: $container,\r\n                params: {\r\n                    kirkiConfig: \"global\",\r\n                    l10n: kirki.l10n.global,\r\n                    label: options.label,\r\n                    default: options.default || \"0px\"\r\n                },\r\n                value: options.default || \"0px\"\r\n            };\r\n\r\n            kirkiNotifications(id, type, 'global');\r\n\r\n            return CP_Customizer.createControl(controlOptions);\r\n        }\r\n\r\n        CP_Customizer.createControl.slider = function (id, container, options) {\r\n\r\n            options = options || {};\r\n\r\n            options.choices = _.extend({\r\n                min: 0,\r\n                max: 100,\r\n                step: 1,\r\n                default: 0\r\n            }, options.choices || {});\r\n\r\n            var type = 'kirki-slider',\r\n                $container = $('<li class=\"customize-control customize-control-kirki customize-control-' + type + ' cp-control\" />');\r\n\r\n            if (container) {\r\n                $(container).append($container);\r\n            }\r\n\r\n\r\n            var controlOptions = {\r\n                id: id || '',\r\n                updater: function (value) {\r\n                    var thisInput = this.controlContainer.find('input');\r\n                    thisInput.val(value);\r\n                    thisInput.change();\r\n                    thisInput.siblings('.kirki_range_value').find('.value').text(value);\r\n\r\n                },\r\n                onAttach: function (value) {\r\n                    var thisInput = this.controlContainer.find('input');\r\n                    thisInput.attr('data-reset_value', value);\r\n                    thisInput.data('reset_value', value);\r\n                },\r\n                type: type,\r\n                container: $container,\r\n                params: {\r\n                    kirkiConfig: \"global\",\r\n                    l10n: kirki.l10n.global,\r\n                    label: options.label,\r\n                    default: options.default,\r\n                    choices: options.choices\r\n                },\r\n                value: options.default\r\n            };\r\n\r\n            kirkiNotifications(id, type, 'global');\r\n\r\n            return CP_Customizer.createControl(controlOptions);\r\n        }\r\n    });\r\n\r\n})(window, CP_Customizer, jQuery);\r\n\r\n\r\n(function (root, CP_Customizer, $) {\r\n    CP_Customizer.addModule(function (CP_Customizer) {\r\n        var $sectionSettingsContainer = $(\"#cp-section-setting-popup .section-settings-container\");\r\n\r\n        CP_Customizer.hooks.doAction('section_panel_before_dimensions', $sectionSettingsContainer); // #####\r\n\r\n        CP_Customizer.hooks.addAction('right_sidebar_opened', function (sidebarId, data) {\r\n            if (sidebarId !== 'cp-section-setting') {\r\n                return;\r\n            }\r\n\r\n            CP_Customizer.panels.sectionPanel.init(data);\r\n            CP_Customizer.panels.sectionPanel.update(data);\r\n            CP_Customizer.hooks.doAction('section_sidebar_opened', data);\r\n        });\r\n\r\n\r\n        var baseArea = {\r\n\r\n            __controls: {},\r\n\r\n            priority: 100,\r\n\r\n            extend: function (options) {\r\n                return _.extend(this, options);\r\n            },\r\n\r\n            init: function () {\r\n            },\r\n            update: function () {\r\n            },\r\n\r\n            disable: function () {\r\n                for (var item in this.__controls) {\r\n                    this.__controls[item].hide();\r\n                }\r\n                this.enabled = false;\r\n            },\r\n            enable: function () {\r\n                for (var item in this.__controls) {\r\n                    this.__controls[item].show();\r\n                }\r\n                this.enabled = true;\r\n            },\r\n\r\n\r\n            _exclude: false,\r\n\r\n            exclude: function () {\r\n                this._exclude = true;\r\n            },\r\n\r\n            include: function () {\r\n                this._exclude = false;\r\n            },\r\n\r\n            canInclude: function () {\r\n                return !this._exclude;\r\n            },\r\n\r\n            getPrefixed: function (data) {\r\n                return this.name + '-' + data;\r\n            },\r\n\r\n            areaTitle: false,\r\n\r\n\r\n            initAreaTitle: function ($container) {\r\n                if (this.areaTitle) {\r\n                    var separator = CP_Customizer.createControl.sectionSeparator(\r\n                        this.getPrefixed('area-title'),\r\n                        $container,\r\n                        this.areaTitle\r\n                    );\r\n                    this.addToControlsList(separator);\r\n                }\r\n            },\r\n\r\n            hideAll:function(){\r\n                for(var control in this.__controls){\r\n                    this.__controls[control].hide();\r\n                }\r\n            },\r\n\r\n            showAll:function(){\r\n                for(var control in this.__controls){\r\n                    this.__controls[control].show();\r\n                }\r\n            },\r\n\r\n            addToControlsList: function (control) {\r\n                this.__controls[control.id] = control;\r\n            },\r\n\r\n            getControl: function (id) {\r\n                if (this.__controls[id]) {\r\n                    return this.__controls[id];\r\n                }\r\n\r\n                if (this.__controls[this.getPrefixed(id)]) {\r\n                    return this.__controls[this.getPrefixed(id)];\r\n                }\r\n\r\n                return null;\r\n            },\r\n\r\n            wrapOriginal: function (originalName, newFunction) {\r\n                if (_.isFunction(this[originalName])) {\r\n                    this[originalName] = _.wrap(this[originalName], newFunction);\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        var panelBase = {\r\n            _areas: {},\r\n            _initialized: false,\r\n\r\n            extend: function (options) {\r\n                return _.extend(this, options);\r\n            },\r\n\r\n            registerArea: function (name, options, forceOverride) {\r\n\r\n                var settings = _.extend(\r\n                    CP_Customizer.utils.deepClone(baseArea),\r\n                    options\r\n                );\r\n\r\n                if (!this._areas[name] || forceOverride === true) {\r\n                    this._areas[name] = _.extend({\r\n                        enabled: true,\r\n                        name: name\r\n                    }, settings);\r\n\r\n\r\n                }\r\n\r\n                return this._areas[name];\r\n            },\r\n\r\n            hasArea: function (name) {\r\n                return !_.isUndefined(this._areas[name]);\r\n            },\r\n\r\n            getArea: function (name) {\r\n                return this._areas[name];\r\n            },\r\n\r\n            init: function (data) {\r\n                if (this._initialized) {\r\n                    return;\r\n                }\r\n\r\n                this._initialized = true;\r\n\r\n\r\n                var self = this;\r\n\r\n                // sort asc by priority\r\n                var areas = Object.getOwnPropertyNames(this._areas).sort(function (a, b) {\r\n                    return self._areas[a].priority - self._areas[b].priority;\r\n                });\r\n\r\n                areas = CP_Customizer.hooks.applyFilters('section_sidebar_sort_areas', areas);\r\n\r\n                areas.forEach(function (area) {\r\n                    if (self._areas[area] && self._areas[area].canInclude()) {\r\n                        CP_Customizer.hooks.doAction('before_section_sidebar_area_' + name, $sectionSettingsContainer);\r\n\r\n                        self._processExtendAreaQueue(self._areas[area]);\r\n\r\n                        self._areas[area].initAreaTitle($sectionSettingsContainer);\r\n                        self._areas[area].init($sectionSettingsContainer);\r\n\r\n                        CP_Customizer.hooks.doAction('after_section_sidebar_area_' + name, $sectionSettingsContainer);\r\n                    }\r\n                });\r\n\r\n                this.update(data);\r\n            },\r\n\r\n            update: function (data) {\r\n\r\n                data.sectionExports = CP_Customizer.getSectionExports(data.section);\r\n\r\n                for (var area in this._areas) {\r\n\r\n                    if (this._areas[area].canInclude()) {\r\n\r\n                        CP_Customizer.hooks.doAction('update_before_section_sidebar_area_' + name, data);\r\n                        this._areas[area].update(data);\r\n                        CP_Customizer.hooks.doAction('update_after_section_sidebar_area_' + name, data);\r\n\r\n                    }\r\n                }\r\n            },\r\n            disableArea: function (name) {\r\n                if (this._areas[name] && this._areas[name].enabled) {\r\n                    this._areas[name].enabled = false;\r\n                    this._areas[name].disable();\r\n                }\r\n            },\r\n            enableArea: function (name) {\r\n                if (this._areas[name] && !this._areas[name].enabled) {\r\n                    this._areas[name].enabled = false;\r\n                    this._areas[name].enable();\r\n                }\r\n            },\r\n\r\n            excludeArea: function (name) {\r\n                if (this._areas[name]) {\r\n                    this._areas[name].exclude();\r\n                }\r\n            },\r\n\r\n            _areasToExtend: {},\r\n\r\n            _processExtendAreaQueue: function (area) {\r\n                var extendCallback = this._areasToExtend[area.name];\r\n\r\n                if (extendCallback) {\r\n                    extendCallback(area)\r\n                }\r\n            },\r\n\r\n            extendArea: function (name, callback) {\r\n                if (this._areas[name]) {\r\n                    callback(this._areas[name]);\r\n                } else {\r\n                    if (!this._areasToExtend[name]) {\r\n                        this._areasToExtend[name] = callback;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        CP_Customizer.panels = CP_Customizer.panel || {};\r\n        CP_Customizer.panels.panelBase = panelBase;\r\n        CP_Customizer.panels.panelArea = baseArea;\r\n\r\n        CP_Customizer.panels.instantiate = function (config) {\r\n            return _.extend(CP_Customizer.utils.deepClone(panelBase), config || {});\r\n        };\r\n\r\n        CP_Customizer.panels.sectionPanel = _.extend(CP_Customizer.panels.sectionPanel || {}, panelBase);\r\n\r\n    });\r\n\r\n})(window, CP_Customizer, jQuery);\r\n","(function (root, CP_Customizer, $) {\r\n\r\n    var containerTemplate = $('' +\r\n        '<li id=\"cp-current-page-settings-popup\" class=\"customizer-right-section\">' +\r\n        '    <span data-close-right-sidebar=\"true\" title=\"' + window.CP_Customizer.translateCompanionString('Close Panel') + '\" class=\"close-panel\"></span>' +\r\n        '    <ul class=\"current-page-settings-container section-settings-container accordion-section-content no-border\"></ul>' +\r\n        ' </li>');\r\n\r\n    CP_Customizer.addModule(function (CP_Customizer) {\r\n\r\n        var control = wp.customize.panel('page_content_panel');\r\n        control.container.append(containerTemplate);\r\n\r\n        var $container = $(\"#cp-current-page-settings-popup .current-page-settings-container\");\r\n\r\n        CP_Customizer.panels.pageContentPanel = CP_Customizer.panels.instantiate({\r\n            init: function (data) {\r\n                if (this._initialized) {\r\n                    return;\r\n                }\r\n\r\n                this._initialized = true;\r\n\r\n                var self = this;\r\n\r\n                // sort asc by priority\r\n                var areas = Object.getOwnPropertyNames(this._areas).sort(function (a, b) {\r\n                    return self._areas[a].priority - self._areas[b].priority;\r\n                });\r\n\r\n                areas = CP_Customizer.hooks.applyFilters('page_settings_sidebar_sort_areas', areas);\r\n\r\n                areas.forEach(function (area) {\r\n                    if (self._areas[area] && self._areas[area].canInclude()) {\r\n                        CP_Customizer.hooks.doAction('before_page_settings_sidebar_area_' + name, $container);\r\n\r\n                        self._processExtendAreaQueue(self._areas[area]);\r\n                        self._areas[area].initAreaTitle($container);\r\n                        self._areas[area].init($container);\r\n\r\n                        CP_Customizer.hooks.doAction('after_page_settings_sidebar_area_' + name, $container);\r\n                    }\r\n                });\r\n\r\n                this.update(data);\r\n            },\r\n            update: function (data) {\r\n                for (var area in this._areas) {\r\n\r\n                    if (this._areas[area].canInclude()) {\r\n\r\n                        CP_Customizer.hooks.doAction('update_before_page_settings_sidebar_area_' + name, data);\r\n                        this._areas[area].update(data);\r\n                        CP_Customizer.hooks.doAction('update_after_page_settings_sidebar_area_' + name, data);\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        CP_Customizer.hooks.addAction('right_sidebar_opened', function (sidebarId) {\r\n            if (sidebarId !== 'cp-current-page-settings') {\r\n                return;\r\n            }\r\n\r\n            var data = {\r\n                'id': CP_Customizer.preview.data('pageID')\r\n            };\r\n\r\n            CP_Customizer.panels.pageContentPanel.init(data);\r\n            CP_Customizer.panels.pageContentPanel.update(data);\r\n            CP_Customizer.hooks.doAction('page_setting_sidebar_opened', {});\r\n        });\r\n    });\r\n\r\n})(window, CP_Customizer, jQuery);","(function (root, CP_Customizer, $) {\r\n    CP_Customizer.addModule(function (CP_Customizer) {\r\n        CP_Customizer.hooks.addFilter('section_fixed_overlay_options', function (options, type) {\r\n\r\n            var item = {\r\n\r\n                name: \"section_more_settings_button\",\r\n                title:  window.CP_Customizer.translateCompanionString(\"Section Settings\"),\r\n\r\n                on_click: function (node) {\r\n                    var section = node;\r\n\r\n                    if (!section.parent().is(CP_Customizer.preview.getRootNode())) {\r\n                        section = node.parentsUntil(top.CP_Customizer.preview.getRootNode()).last();\r\n                    }\r\n\r\n                    section = CP_Customizer.hooks.applyFilters('filter_cog_item_section_element', section, node);\r\n\r\n                    CP_Customizer.wpApi.panel('page_content_panel').focus()\r\n                    CP_Customizer.openRightSidebar(\"cp-section-setting\", {\r\n                        section: section\r\n                    });\r\n                }\r\n\r\n            };\r\n\r\n            if (type === \"section\" && options && !itemExists(options, item.name)) {\r\n                options.items.push(item);\r\n            }\r\n\r\n            return options;\r\n        });\r\n\r\n\r\n        CP_Customizer.hooks.addFilter('section_fixed_overlay', function (options, key) {\r\n\r\n            var tempOptions = _.clone(options);\r\n\r\n            if (key === \"items\") {\r\n                if (_.isArray(tempOptions)) {\r\n                    tempOptions.forEach(function (item, index, optionsList) {\r\n                        if (item.name === \"section_color_changer\" || item.name === \"columns_reorder\") {\r\n                            if (item.on_hover) {\r\n                                delete item.on_hover;\r\n                            }\r\n\r\n                            item.classes = \"\";\r\n\r\n                            item.on_click = function (node) {\r\n                                var section = node;\r\n\r\n                                if (!section.parent().is(CP_Customizer.preview.getRootNode())) {\r\n                                    section = node.parentsUntil(top.CP_Customizer.preview.getRootNode()).last();\r\n                                }\r\n\r\n                                section = CP_Customizer.hooks.applyFilters('filter_cog_item_section_element', section, node);\r\n\r\n                                CP_Customizer.wpApi.panel('page_content_panel').focus()\r\n                                CP_Customizer.openRightSidebar(\"cp-section-setting\", {\r\n                                    section: section\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        if (item.name === \"page_background_image\") {\r\n                            delete optionsList[index];\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // do return empty array slots\r\n                var result = tempOptions.filter(function (item) {\r\n                    return item;\r\n                });\r\n            } else {\r\n                result = options;\r\n            }\r\n\r\n\r\n            return result;\r\n        });\r\n\r\n        function itemExists(options, name) {\r\n\r\n            if (options && options.items) {\r\n                for (var i = 0; i < options.items.length; i++) {\r\n                    var item = options.items[i];\r\n\r\n                    if (item.name === name) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        CP_Customizer.hooks.addFilter('section_fixed_overlay_options', function (options, type) {\r\n\r\n            var item = {\r\n\r\n                name: \"section_more_settings_button\",\r\n                title: window.CP_Customizer.translateCompanionString(\"Section Settings\"),\r\n\r\n                on_click: function (node) {\r\n                    var section = node;\r\n\r\n                    if (!section.parent().is(CP_Customizer.preview.getRootNode())) {\r\n                        section = node.parentsUntil(top.CP_Customizer.preview.getRootNode()).last();\r\n                    }\r\n\r\n                    section = CP_Customizer.hooks.applyFilters('filter_cog_item_section_element', section, node);\r\n\r\n                    CP_Customizer.wpApi.panel('page_content_panel').focus()\r\n                    CP_Customizer.openRightSidebar(\"cp-section-setting\", {\r\n                        section: section\r\n                    });\r\n                }\r\n\r\n            };\r\n\r\n            if (type === \"section\" && options && !itemExists(options, item.name)) {\r\n                options.items.push(item);\r\n            }\r\n\r\n            return options;\r\n        });\r\n    });\r\n\r\n})(window, CP_Customizer, jQuery);\r\n\r\n\r\n(function (root, CP_Customizer, $) {\r\n    CP_Customizer.addModule(function (CP_Customizer) {\r\n        var sectionPanel = CP_Customizer.panels.sectionPanel;\r\n        sectionPanel.registerArea('background_color', {\r\n            init: function ($container) {\r\n\r\n                var separator = CP_Customizer.createControl.sectionSeparator(\r\n                    this.getPrefixed('separator'),\r\n                    $container,\r\n                    window.CP_Customizer.translateCompanionString('Background Color')\r\n                );\r\n\r\n                this.addToControlsList(separator);\r\n\r\n                var palette = CP_Customizer.createControl.palette(\r\n                    this.getPrefixed('background-color'),\r\n                    $container,\r\n                    {\r\n                        value: '#ffffff',\r\n                        label: window.CP_Customizer.translateCompanionString('Background Color'),\r\n                        palette: ['#ffffff', '#F5FAFD']\r\n                    });\r\n\r\n                this.addToControlsList(palette);\r\n\r\n                CP_Customizer.createControl.infoPRO(\r\n                    this.getPrefixed('section-bg-pro-info'),\r\n                    $container,\r\n                    '<span>' + window.CP_Customizer.translateCompanionString(\"More section design options available in PRO\") + '</span><br/> ' +\r\n                    '<a href=\"https://extendthemes.com/go/materialis-upgrade\" class=\"button button-small button-orange upgrade-to-pro\" target=\"_blank\">' +\r\n                     '' + window.CP_Customizer.translateCompanionString(\"Check all PRO features\") + '</a>'\r\n                )\r\n            },\r\n            update: function (data) {\r\n                var image = CP_Customizer.utils.normalizeBackgroundImageValue((getComputedStyle(data.section[0]).backgroundImage || \"\")) || false;\r\n                image = (image && image !== \"none\" && !image.endsWith('/none')) ? image : false;\r\n                var color = getComputedStyle(data.section[0]).backgroundColor;\r\n\r\n                if (image) {\r\n\r\n                    this.disable();\r\n                    return;\r\n                }\r\n\r\n                this.enable();\r\n\r\n                var palette = this.getControl('background-color');\r\n\r\n                palette.attachWithSetter(color, function (value) {\r\n\r\n                    data.section.css({\r\n                        'background-image': 'none',\r\n                        'background-color': value\r\n                    });\r\n\r\n                    CP_Customizer.updateState();\r\n                });\r\n            }\r\n        });\r\n\r\n        sectionPanel.registerArea('background_image', {\r\n            init: function ($container) {\r\n\r\n                var separator = CP_Customizer.createControl.sectionSeparator(\r\n                    this.getPrefixed('separator'),\r\n                    $container,\r\n                    window.CP_Customizer.translateCompanionString('Background Image')\r\n                );\r\n\r\n                this.addToControlsList(separator);\r\n\r\n                var bgImage = CP_Customizer.createControl.image(\r\n                    this.getPrefixed('image'),\r\n                    $container,\r\n                    {\r\n                        value: '',\r\n                        label: window.CP_Customizer.translateCompanionString('Background Image')\r\n                    });\r\n\r\n                this.addToControlsList(bgImage);\r\n            },\r\n\r\n            update: function (data) {\r\n                var image = CP_Customizer.utils.normalizeBackgroundImageValue((getComputedStyle(data.section[0]).backgroundImage || \"\")) || false;\r\n                image = (image && image !== \"none\" && !image.endsWith('/none')) ? image : false;\r\n\r\n\r\n                var bgImage = this.getControl('image');\r\n\r\n                if (!image) {\r\n                    this.disable();\r\n                    return;\r\n                }\r\n\r\n                this.enable();\r\n\r\n                bgImage.attachWithSetter(image, function (value) {\r\n\r\n                    if (value) {\r\n                        value = 'url(\"' + value + '\")';\r\n                    } else {\r\n                        value = \"\";\r\n                    }\r\n                    data.section.css({\r\n                        'background-color': 'none',\r\n                        'background-image': value,\r\n                        'background-size': 'cover',\r\n                        'background-position': 'center top'\r\n                    });\r\n\r\n\r\n                    CP_Customizer.updateState();\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        sectionPanel.registerArea('content_align', {\r\n            init: function ($container) {\r\n\r\n                var separator = CP_Customizer.createControl.sectionSeparator(\r\n                    this.getPrefixed('separator'),\r\n                    $container,\r\n                    window.CP_Customizer.translateCompanionString('Content Align')\r\n                );\r\n\r\n                this.addToControlsList(separator);\r\n\r\n                var textAlign = CP_Customizer.createControl.select(\r\n                    this.getPrefixed('text_align'),\r\n                    $container,\r\n                    {\r\n                        value: '',\r\n                        label:  window.CP_Customizer.translateCompanionString('Content align'),\r\n                        choices: {\r\n                            'content-align-default': window.CP_Customizer.translateCompanionString('Default'),\r\n                            'content-left-sm': window.CP_Customizer.translateCompanionString('Left'),\r\n                            'content-center-sm': window.CP_Customizer.translateCompanionString('Center'),\r\n                            'content-right-sm': window.CP_Customizer.translateCompanionString('Right')\r\n                        }\r\n                    });\r\n\r\n                this.addToControlsList(textAlign);\r\n            },\r\n\r\n            update: function (data) {\r\n                var section = data.section;\r\n                var sectionExports = CP_Customizer.getSectionExports(section);\r\n\r\n                if (!sectionExports.contentAligns) {\r\n                    this.disable();\r\n                    return;\r\n                }\r\n\r\n                this.enable();\r\n\r\n                var selector = sectionExports.contentAligns.join(' , '),\r\n                    $alignHolders = section.find(selector);\r\n\r\n                if (section.is(selector)) {\r\n                    $alignHolders = $alignHolders.add(section);\r\n                }\r\n\r\n                var textAlign = this.getControl('text_align');\r\n                var textAlignClasses = ['content-left-sm', 'content-center-sm', 'content-right-sm'];\r\n                var currentTextAlign = CP_Customizer.utils.nodeMatchingClasses($alignHolders, textAlignClasses, true);\r\n\r\n                textAlign.attachWithSetter(\r\n                    currentTextAlign || 'content-align-default',\r\n                    function (value, oldValue) {\r\n                        if (oldValue.trim()) {\r\n                            $alignHolders.each(function () {\r\n                                $(this).removeClass(oldValue);\r\n                            })\r\n                        }\r\n                        if (value.trim() && value !== 'content-align-default') {\r\n                            $alignHolders.each(function () {\r\n                                $(this).addClass(value);\r\n                            })\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        });\r\n\r\n\r\n        // frame box\r\n        sectionPanel.registerArea('frame', {\r\n            init: function ($container) {\r\n                var frameSeparator = CP_Customizer.createControl.sectionSeparator(this.getPrefixed('separator'),\r\n                    $container, window.CP_Customizer.translateCompanionString('Frame Settings'));\r\n                this.addToControlsList(frameSeparator);\r\n                $groupEl = $container;\r\n                var frameType = CP_Customizer.createControl.select(this.getPrefixed('type'), $groupEl, {\r\n                    value: '',\r\n                    label: window.CP_Customizer.translateCompanionString('Type'),\r\n                    choices: {\r\n                        \"background\": window.CP_Customizer.translateCompanionString(\"background\"),\r\n                        \"border\": window.CP_Customizer.translateCompanionString(\"border\")\r\n                    }\r\n                });\r\n                this.addToControlsList(frameType);\r\n                var frameColor = CP_Customizer.createControl.color(this.getPrefixed('color'), $groupEl, {\r\n                    value: '#ffffff',\r\n                    label:  window.CP_Customizer.translateCompanionString('Color')\r\n                });\r\n\r\n                this.addToControlsList(frameColor);\r\n\r\n                var frameOffsetX = CP_Customizer.createControl.slider(this.getPrefixed('offs-x'), $groupEl, {\r\n                    label: window.CP_Customizer.translateCompanionString('Offset X'),\r\n                    choices: {\r\n                        min: -100,\r\n                        max: 100,\r\n                        step: 1\r\n                    }\r\n                });\r\n\r\n                this.addToControlsList(frameOffsetX);\r\n                var frameOffsetY = CP_Customizer.createControl.slider(this.getPrefixed('offs-y'), $groupEl, {\r\n                    label: window.CP_Customizer.translateCompanionString('Offset Y'),\r\n                    choices: {\r\n                        min: -100,\r\n                        max: 100,\r\n                        step: 1\r\n                    }\r\n                });\r\n\r\n                this.addToControlsList(frameOffsetY);\r\n                var frameWidth = CP_Customizer.createControl.slider(this.getPrefixed('width'), $groupEl, {\r\n                    label: window.CP_Customizer.translateCompanionString('Width'),\r\n                    choices: {\r\n                        min: 1,\r\n                        max: 200,\r\n                        step: 1\r\n                    }\r\n                });\r\n\r\n                this.addToControlsList(frameWidth);\r\n                var frameHeight = CP_Customizer.createControl.slider(this.getPrefixed('height'), $groupEl, {\r\n                    label: window.CP_Customizer.translateCompanionString('Height'),\r\n                    choices: {\r\n                        min: 1,\r\n                        max: 200,\r\n                        step: 1\r\n                    }\r\n                });\r\n                this.addToControlsList(frameHeight);\r\n\r\n                var frameHideOnMobile = CP_Customizer.createControl.checkbox(\r\n                    this.getPrefixed('hide-on-mobile'),\r\n                    $groupEl,\r\n                    window.CP_Customizer.translateCompanionString('Hide on mobile')\r\n                );\r\n\r\n                this.addToControlsList(frameHideOnMobile);\r\n\r\n\r\n            },\r\n            update: function (data) {\r\n                var section = data.section;\r\n                var hasFrame = section.find('.overlay-box').length > 0;\r\n                if (!hasFrame) {\r\n                    this.disable();\r\n                    return;\r\n                }\r\n                this.enable();\r\n                if (hasFrame) {\r\n                    var frameType = this.getControl('type');\r\n                    var frameWidth = this.getControl('width');\r\n                    var frameHeight = this.getControl('height');\r\n                    var frameOffsetX = this.getControl('offs-x');\r\n                    var frameOffsetY = this.getControl('offs-y');\r\n                    var frameColor = this.getControl('color');\r\n                    var frameHideOnMobile = this.getControl('hide-on-mobile');\r\n\r\n                    var nodeSel = \".overlay-box .overlay-box-offset\";\r\n\r\n\r\n                    var selector = '[data-id=\"' + section.attr('data-id') + '\"] ' + nodeSel;\r\n                    var node = section.find(nodeSel);\r\n\r\n                    frameHideOnMobile.attachWithSetter(node.hasClass(\"hide-xs\"), function (value) {\r\n                        if (value === true) {\r\n                            node.addClass(\"hide-xs\");\r\n                        } else {\r\n                            node.removeClass(\"hide-xs\");\r\n                        }\r\n                    });\r\n\r\n                    function getProp(name) {\r\n                        return (CP_Customizer.contentStyle.getNodeProp(node, selector, null, name));\r\n                    }\r\n\r\n                    function setProp(name, value) {\r\n                        CP_Customizer.contentStyle.setProp(selector, null, name, value);\r\n                    }\r\n\r\n                    function getFrameType() {\r\n                        var type = \"background\";\r\n                        if (node.hasClass(\"offset-border\")) {\r\n                            type = \"border\";\r\n                        }\r\n                        return type;\r\n                    }\r\n\r\n                    frameType.attachWithSetter(getFrameType(), function (value) {\r\n                        if (value == \"border\") {\r\n                            node.removeClass(\"offset-background\");\r\n                            node.addClass(\"offset-border\");\r\n                            setProp(value + '-color', getProp('background-color'));\r\n                            setProp('background-color', 'transparent');\r\n                        }\r\n                        if (value == \"background\") {\r\n                            node.addClass(\"offset-background\");\r\n                            node.removeClass(\"offset-border\");\r\n                            setProp(value + '-color', getProp('border-color'));\r\n                            setProp('border-color', 'transparent');\r\n                        }\r\n                    });\r\n\r\n                    frameColor.attachWithSetter(getProp(getFrameType() + '-color'), function (value) {\r\n                        setProp(getFrameType() + '-color', value);\r\n                    });\r\n\r\n                    frameHeight.attachWithSetter(parseInt(getProp('height')), function (value) {\r\n                        setProp('height', value + \"%\");\r\n                    });\r\n\r\n                    frameWidth.attachWithSetter(parseInt(getProp('width')), function (value) {\r\n                        setProp('width', value + \"%\");\r\n                    });\r\n\r\n                    function getTranslate() {\r\n                        var transform = getProp('transform');\r\n                        var translate = transform.match(/translate\\(([^,]+),([^,]+)\\)/) || [];\r\n                        var translateX = translate.length ? translate[1] : 0;\r\n                        var translateY = translate.length ? translate[2] : 0;\r\n                        return {\r\n                            'x': parseInt(translateX),\r\n                            'y': parseInt(translateY),\r\n                        }\r\n                    }\r\n\r\n                    function setTranslate(x, y) {\r\n                        var translate = getTranslate();\r\n                        if (!_.isUndefined(x)) {\r\n                            translate.x = x;\r\n                        }\r\n                        if (!_.isUndefined(y)) {\r\n                            translate.y = y;\r\n                        }\r\n                        setProp('transform', 'translate(' + translate.x + '%,' + translate.y + '%)');\r\n                    }\r\n\r\n                    var translate = getTranslate();\r\n                    frameOffsetX.attachWithSetter(parseInt(translate.x), function (value) {\r\n                        setTranslate(value, undefined);\r\n                    });\r\n\r\n                    frameOffsetY.attachWithSetter(parseInt(translate.y), function (value) {\r\n                        setTranslate(undefined, value);\r\n                    });\r\n                }\r\n            }\r\n        }); // #####\r\n        sectionPanel.registerArea('list_items', {\r\n\r\n            itemsListControlTemplate: '' +\r\n            '<div class=\"section-list-item\">' +\r\n            '   <div class=\"handle reorder-handler\"></div>' +\r\n            '   <div class=\"text\">' +\r\n            '           <span title=\"color item\" class=\"featured-item color\"></span>' +\r\n            '           <span><%= text %></span>' +\r\n            '   </div>' +\r\n            '</div>' +\r\n            '',\r\n\r\n            init: function ($container) {\r\n                this.controls = [];\r\n\r\n                var itemOptionsControl = CP_Customizer.createControl.sectionSeparator(\r\n                    this.getPrefixed('title_separator'),\r\n                    $container,\r\n                    window.CP_Customizer.translateCompanionString('Items Options')\r\n                );\r\n\r\n                this.addToControlsList(itemOptionsControl);\r\n\r\n                var itemsAlign = CP_Customizer.createControl.select(\r\n                    this.getPrefixed('items_align'),\r\n                    $container,\r\n                    {\r\n                        value: '',\r\n                        label: window.CP_Customizer.translateCompanionString('Items align'),\r\n                        choices: {\r\n                            'items-align-default': window.CP_Customizer.translateCompanionString('Default'),\r\n                            'start-sm': window.CP_Customizer.translateCompanionString('Left'),\r\n                            'center-sm': window.CP_Customizer.translateCompanionString('Center'),\r\n                            'end-sm': window.CP_Customizer.translateCompanionString('Right')\r\n                        }\r\n                    });\r\n                this.addToControlsList(itemsAlign);\r\n\r\n                var textAlign = CP_Customizer.createControl.select(\r\n                    this.getPrefixed('text_align'),\r\n                    $container,\r\n                    {\r\n                        value: '',\r\n                        label: window.CP_Customizer.translateCompanionString('Item content align'),\r\n                        choices: {\r\n                            'content-align-default': window.CP_Customizer.translateCompanionString('Default'),\r\n                            'content-left-sm': window.CP_Customizer.translateCompanionString('Left'),\r\n                            'content-center-sm': window.CP_Customizer.translateCompanionString('Center'),\r\n                            'content-right-sm': window.CP_Customizer.translateCompanionString('Right')\r\n                        }\r\n                    });\r\n\r\n                this.addToControlsList(textAlign);\r\n\r\n                listItemsOrder = CP_Customizer.createControl.sortable(\r\n                    this.getPrefixed('order'),\r\n                    $container,\r\n                    _.template(this.itemsListControlTemplate),\r\n                    window.CP_Customizer.translateCompanionString('Items position')\r\n                );\r\n\r\n                listItemsOrder.control.container.append('<a class=\"add-item button-primary\">' + window.CP_Customizer.translateCompanionString(\"Add Item\") + '</a>');\r\n\r\n                this.addToControlsList(listItemsOrder);\r\n            },\r\n\r\n            update: function (data) {\r\n                var section = data.section;\r\n                var row = section.find('[data-type=\"row\"]');\r\n\r\n                if (!row.length || row.is('[data-content-shortcode]')) {\r\n                    this.disable();\r\n                    return;\r\n                }\r\n\r\n                this.enable();\r\n\r\n\r\n                var textAlign = this.getControl('text_align'),\r\n                    textAlignClasses = ['content-left-sm', 'content-center-sm', 'content-right-sm'],\r\n                    currentTextAlign = CP_Customizer.utils.nodeMatchingClasses(row, textAlignClasses, true),\r\n\r\n                    itemsAlign = this.getControl('items_align'),\r\n                    itemsAlignClasses = ['start-sm', 'center-sm', 'end-sm'],\r\n                    currentItemsAlign = CP_Customizer.utils.nodeMatchingClasses(row, itemsAlignClasses, true);\r\n\r\n                var sectionExports = CP_Customizer.getSectionExports(section);\r\n                var canAlignItems = _.isUndefined(sectionExports.canAlignRowItemsContent) || sectionExports.canAlignRowItemsContent;\r\n\r\n                if (canAlignItems) {\r\n                    textAlign.show();\r\n                    itemsAlign.show();\r\n                } else {\r\n                    textAlign.hide();\r\n                    itemsAlign.hide();\r\n                }\r\n\r\n                textAlign.attachWithSetter(\r\n                    currentTextAlign || 'content-align-default',\r\n                    function (value, oldValue) {\r\n                        if (oldValue.trim()) {\r\n                            row.removeClass(oldValue);\r\n                        }\r\n                        if (value.trim() && value !== 'content-align-default') {\r\n                            row.addClass(value);\r\n                        }\r\n                    }\r\n                );\r\n\r\n                itemsAlign.attachWithSetter(\r\n                    currentItemsAlign || 'items-align-default',\r\n                    function (value, oldValue) {\r\n                        if (oldValue.trim()) {\r\n                            row.removeClass(oldValue);\r\n                        }\r\n                        if (value.trim() && value !== 'items-align-default') {\r\n                            row.addClass(value);\r\n                        }\r\n                    }\r\n                );\r\n\r\n\r\n                this.setItems(section, row);\r\n\r\n                var listItemsOrder = this.getControl('order');\r\n\r\n                listItemsOrder.control.onStop = function (event, ui) {\r\n                    var index = ui.item.index();\r\n                    var node = jQuery(ui.item).data().original;\r\n                    root.CP_Customizer.preview.insertNode(node, node.parent(), index);\r\n                };\r\n\r\n                var self = this;\r\n                listItemsOrder.control.container.find('.add-item').unbind('click').click(function () {\r\n                    var $content = row.children('div').first().clone(false, false);\r\n\r\n                    $content = root.CP_Customizer.preview.cleanNode($content);\r\n                    root.CP_Customizer.preview.insertNode($content, row);\r\n\r\n                    self.setItems(section, row);\r\n                });\r\n\r\n\r\n                root.CP_Customizer.hooks.removeAction('section_list_item_refresh', function () {\r\n                    self.setItems(section, row);\r\n                });\r\n\r\n                root.CP_Customizer.hooks.addAction('section_list_item_refresh', function () {\r\n                    self.setItems(section, row);\r\n                });\r\n            },\r\n\r\n\r\n            getItemOptions: function (section, item) {\r\n\r\n                return {};\r\n            },\r\n\r\n            afterItemCreation: function (sortableItem, data) {\r\n                sortableItem.data('original', data.original);\r\n            },\r\n\r\n            setItems: function (section, row) {\r\n                var listItemsOrder = this.getControl('order');\r\n                listItemsOrder.control.free();\r\n\r\n                var items = row.children();\r\n                var self = this;\r\n\r\n                items = items.map(function () {\r\n                    var item = $(this);\r\n                    var title = $(this).text().replace(/\\s\\s+/g, \" \").trim();\r\n\r\n                    var headingText = $(this).find('h1,h2,h3,h4,h4,h6').eq(0);\r\n\r\n                    if (headingText.length) {\r\n                        title = headingText.text().replace(/\\s\\s+/g, \" \").trim();\r\n                    }\r\n\r\n                    title = title.trim().length ? title : \"\";\r\n\r\n                    if (!title && item.find('img').length) {\r\n                        title = CP_Customizer.utils.getFileInfo(item.find('img').eq(0).attr('src')).filename;\r\n                    }\r\n\r\n                    if (!title) {\r\n                        title = '[ ITEM ]';\r\n                    }\r\n\r\n                    title = title.replace(/(^.{1,15})(.*)$/, function (matches, firstMatch, secondMatch) {\r\n                        return (firstMatch || \"\").trim() + (secondMatch && secondMatch.length ? \"[...]\" : \"\");\r\n                    });\r\n\r\n                    return {\r\n                        text: title,\r\n                        original: $(this),\r\n                        options: self.getItemOptions(section, item)\r\n                    };\r\n\r\n                }).toArray();\r\n\r\n                listItemsOrder.control.setItems(items, function () {\r\n                    self.afterItemCreation.apply(self, arguments);\r\n                });\r\n\r\n            }\r\n        });\r\n\r\n        sectionPanel.registerArea('contact_form_options', {\r\n            init: function ($container) {\r\n                var separator = CP_Customizer.createControl.sectionSeparator(\r\n                    this.getPrefixed('separator'),\r\n                    $container,\r\n                    window.CP_Customizer.translateCompanionString('Contact Form 7 Options')\r\n                );\r\n\r\n                this.addToControlsList(separator);\r\n\r\n                var showInfosInOneColumn = CP_Customizer.createControl.checkbox(\r\n                    this.getPrefixed('show-inline-info'),\r\n                    $container,\r\n                    window.CP_Customizer.translateCompanionString('Show form controls on one column')\r\n                );\r\n\r\n                this.addToControlsList(showInfosInOneColumn);\r\n\r\n            },\r\n\r\n            update: function (data) {\r\n                var section = data.section;\r\n\r\n                if (section.attr('data-export-id').match(/contact/) && section.find('[data-content-shortcode*=\"contact-form-7\"]').length > 0) {\r\n                    this.enable();\r\n                } else {\r\n                    this.disable();\r\n                    return;\r\n                }\r\n\r\n                var showInfosInOneColumn = this.getControl('show-inline-info');\r\n                var contactFormWrapper = section.find('.contact-form-wrapper');\r\n                var hasInlineInfo = contactFormWrapper.is('.inline-info');\r\n\r\n                showInfosInOneColumn.attachWithSetter(!hasInlineInfo, function (value) {\r\n                    if (value) {\r\n                        contactFormWrapper.removeClass('inline-info');\r\n                    } else {\r\n                        contactFormWrapper.addClass('inline-info');\r\n                    }\r\n                    CP_Customizer.updateState();\r\n                })\r\n\r\n            }\r\n        })\r\n\r\n    });\r\n\r\n})(window, CP_Customizer, jQuery);\r\n","(function (root, CP_Customizer, $) {\r\n    CP_Customizer.addModule(function (CP_Customizer) {\r\n        var popup = CP_Customizer.options('featuresPopup', null);\r\n        var containerID = \"cp_feauture_popups_\" + Math.round(Math.random() * 10000);\r\n        var $container = $(\"<div/>\", {\r\n            id: containerID,\r\n            style: \"display:none\"\r\n        });\r\n\r\n        if (popup) {\r\n            $container.append(popup.content);\r\n            CP_Customizer.one(CP_Customizer.events.PREVIEW_LOADED, function () {\r\n                $('body').append($container);\r\n                var $tbWindow = CP_Customizer.popUp(popup.title || 'New Feature', containerID, popup.data || {\r\n                    class: \"ocdie-tbWindow\"\r\n                });\r\n                $tbWindow.find('[id=TB_closeWindowButton]').off('click.feature_popup').on('click.feature_popup', function (event) {\r\n                    jQuery.post(\r\n                        ajaxurl,\r\n                        {\r\n                            value: '1',\r\n                            action: \"companion_disable_popup\",\r\n                            option: 'feature_popup_' + popup.id + '_disabled',\r\n                            companion_disable_popup_wpnonce: popup.nonce\r\n                        }\r\n                    );\r\n                });\r\n            });\r\n        }\r\n\r\n    });\r\n\r\n})(window, CP_Customizer, jQuery);","(function ($) {\r\n\r\n    var listItemTemplate = _.template(\r\n        '<li class=\"full_row item\" data-id=\"<%= sectionID %>\">' +\r\n        '       <div class=\"reorder-handler\"></div>' +\r\n        '       <div class=\"label-wrapper\">' +\r\n        '  <input class=\"item-label\" value=\"<%= label %>\" />' +\r\n        '  <div class=\"anchor-info\">' +\r\n        '      #<%= id.replace(/#/,\\'\\') %>' +\r\n        '  </div>' +\r\n        '       </div>' +\r\n        '     <div class=\"item-hover\">' +\r\n        '   <% if(setting) { %>' +\r\n        '      <span title=\"' + window.CP_Customizer.translateCompanionString(\"Edit section settings\") + '\" data-setting=\"<%= setting %>\" class=\"item-settings\"></span>' +\r\n        '  <%  } %>' +\r\n        '  <span title=\"' + window.CP_Customizer.translateCompanionString(\"Toggle visibility in primary menu\") + '\" class=\"item-menu-visible <%= (inMenu?\\'active\\':\\'\\') %>\"></span>' +\r\n        '  <span title=\"' + window.CP_Customizer.translateCompanionString(\"Delete section from page\") + '\" class=\"item-remove\"></span>' +\r\n        '       </div>' +\r\n        ' </li>'\r\n    );\r\n\r\n    window.CP_Customizer.addModule(function (CP_Customizer) {\r\n        var control = wp.customize.panel('page_content_panel');\r\n\r\n        if (!control) {\r\n            return;\r\n        }\r\n\r\n        var $contentLi = control.container.eq(0);\r\n        // remove default events\r\n        $contentLi.children('h3').andSelf().off();\r\n\r\n        $sectionsSidebarTogglers = $contentLi.find('.add-section-plus').add($contentLi.find('.cp-add-section'));\r\n\r\n        CP_Customizer.one(CP_Customizer.events.PREVIEW_LOADED, function () {\r\n            if (CP_Customizer.preview.data(\"can:change_page_settings\")) {\r\n                $contentLi.find('span.section-icon.setting').removeClass('hidden').click(function (event) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n\r\n                    var sectionID = \"cp-current-page-settings\";\r\n\r\n                    if (CP_Customizer.isRightSidebarVisible(sectionID)) {\r\n                        CP_Customizer.hideRightSidebar();\r\n                    } else {\r\n                        CP_Customizer.openRightSidebar(sectionID);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        var sectionID = 'page_content_section';\r\n        $sectionsSidebarTogglers.click(function (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n\r\n            if (CP_Customizer.isRightSidebarVisible(sectionID)) {\r\n                CP_Customizer.hideRightSidebar();\r\n                $sectionsSidebarTogglers.removeClass('active');\r\n            } else {\r\n                CP_Customizer.openRightSidebar(sectionID);\r\n                $sectionsSidebarTogglers.addClass('active');\r\n            }\r\n        });\r\n\r\n        CP_Customizer.focusContentSection = function (toFocus) {\r\n            CP_Customizer.openRightSidebar(\"page_content_section\", {\r\n                focus: '[data-category=' + toFocus + ']'\r\n            })\r\n        };\r\n\r\n        function getNextInArray(data, start, separator) {\r\n            var increments = data.filter(function (item) {\r\n                return item.replace(start, '').length;\r\n            }).map(function (item) {\r\n                return parseInt(item.replace(start + (separator || '--'), '')) || 0;\r\n            });\r\n\r\n            return increments.length ? Math.max.apply(Math, increments) + 1 : 1;\r\n        }\r\n\r\n        function getNextId(start) {\r\n            var ids = CP_Customizer.preview.getContentNodes().filter(function (item) {\r\n                return (item.tagName && item.tagName !== 'undefined' && item.tagName.toLowerCase() === 'div' && item.id.indexOf(start) === 0)\r\n            }).map(function (item) {\r\n                return item.id\r\n            });\r\n            return start + \"-\" + getNextInArray(ids, start, '-');\r\n        }\r\n\r\n        function getNextDataId(start) {\r\n            var dataIds = CP_Customizer.preview.getContentNodes().filter(function (item) {\r\n                return (item.tagName && item.tagName !== 'undefined' && item.tagName.toLowerCase() === 'div' && item.getAttribute('data-id') && (item.getAttribute('data-id') || \"\").indexOf(start) === 0)\r\n            }).map(function (item) {\r\n                return item.getAttribute('data-id')\r\n            });\r\n\r\n            return start + \"--\" + getNextInArray(dataIds, start);\r\n        }\r\n\r\n\r\n        CP_Customizer.preview.insertSectionFromData = function (data, skipEvent) {\r\n            if (data) {\r\n                var $content = $(data.content),\r\n                    dataId = getNextDataId(data.category || data.elementId);\r\n\r\n                $content.attr('id', getNextId(data.category || data.elementId));\r\n                $content.attr('data-id', dataId);\r\n\r\n                var index;\r\n\r\n                if (data.prepend === true || parseInt(data.prepend) === 1) {\r\n                    index = 0;\r\n                }\r\n\r\n                CP_Customizer.preview.insertContentSection($content, index);\r\n\r\n                var sectionStyle = CP_Customizer.getSectionExports(data.id).sectionStyle;\r\n                if (sectionStyle) {\r\n                    _.each(sectionStyle, function (selectors, media) {\r\n                        _.each(selectors, function (props, selector) {\r\n                            CP_Customizer.contentStyle.setProps('[data-id=\"' + dataId + '\"] ' + selector, \"\", props, media);\r\n                        });\r\n                    });\r\n                }\r\n\r\n                if (skipEvent !== true) {\r\n                    CP_Customizer.trigger('UPDATE_SECTIONS_LIST');\r\n                }\r\n            }\r\n\r\n            return {\r\n                index: index,\r\n                $content: $content\r\n            };\r\n        };\r\n\r\n        var $sectionsList = $(\"#page_full_rows\");\r\n\r\n        $sectionsList.sortable({\r\n            scroll: true,\r\n            appendTo: \"body\",\r\n            axis: 'y',\r\n            handle: '.reorder-handler',\r\n            start: function (event, ui) {\r\n                ui.placeholder.width(ui.item[0].offsetWidth);\r\n                ui.placeholder.height(ui.item[0].offsetHeight);\r\n                startPosition = ui.item.index();\r\n            },\r\n            sort: function (event, ui) {\r\n                ui.helper.css({\r\n                    'left': '18px',\r\n                    'position': 'fixed',\r\n                    'top': event.clientY\r\n                });\r\n\r\n            },\r\n            stop: function (event, ui) {\r\n                var node = CP_Customizer.preview.getRootNode().children('[data-id=\"' + ui.item.data('id') + '\"]');\r\n                var nodes = CP_Customizer.preview.getRootNode().children('[data-id]').not(node);\r\n                var prevNode;\r\n                var newPos = ui.item.index();\r\n                //get dropped node gutenberg comments\r\n                var startCommentNode = CP_Customizer.preview.getGutenbergBlockCommentStart(node.get(0));\r\n                var endCommentNode = CP_Customizer.preview.getGutenbergBlockCommentEnd(node.get(0));\r\n                \r\n                //get dropped node sibling \r\n                if (newPos < nodes.length) {\r\n                    prevNode = nodes.eq(newPos);\r\n                } else {\r\n                    prevNode = nodes.last();\r\n                }\r\n\r\n                //get dropped node sibling gutenberg comments\r\n                var prevNodeCommentNode = CP_Customizer.preview.getGutenbergBlockCommentStart(prevNode.get(0));\r\n                var prevNodeEndCommentNode = CP_Customizer.preview.getGutenbergBlockCommentEnd(prevNode.get(0));\r\n\r\n\r\n                if (newPos < nodes.length) {\r\n                    nodes.eq(newPos).before(node);\r\n                } else {\r\n                    nodes.last().after(node);\r\n                }\r\n\r\n                //reorder gutenberg comments to not break gutenberg sections\r\n                $(startCommentNode).insertBefore(node);\r\n                $(endCommentNode).insertAfter(node);\r\n\r\n                $(prevNodeCommentNode).insertBefore(prevNode);\r\n                $(prevNodeEndCommentNode).insertAfter(prevNode);\r\n\r\n                CP_Customizer.setContent();\r\n            }\r\n        });\r\n\r\n        $sectionsList.on('click', '.full_row .item-remove', function (event) {\r\n            event.preventDefault();\r\n            var sectionID = $(this).parents('.item').data('id');\r\n            var node = CP_Customizer.preview.getSectionByDataId(sectionID);\r\n            var exportID = CP_Customizer.preview.getNodeExportId(node);\r\n            var anchor = node.attr('id');\r\n\r\n            $(this).parents('.item').fadeOut(200);\r\n            CP_Customizer.hooks.doAction('before_section_remove', $(node));\r\n            $(node).remove();\r\n            $(this).parents('.item').remove();\r\n\r\n            $('[data-type=\"row-list-control\"] [data-name=\"page_content\"] [data-id=\"' + exportID + '\"]').removeClass('already-in-page');\r\n            CP_Customizer.updateState(false, false);\r\n            CP_Customizer.overlays.hideMovableOverlays();\r\n\r\n            if (CP_Customizer.menu.anchorExistsInPrimaryMenu(anchor)) {\r\n                CP_Customizer.menu.removeAnchorFromPrimaryMenu(anchor);\r\n            }\r\n        });\r\n\r\n\r\n        var labelChange = _.debounce(function () {\r\n            var $item = $(this).closest('.full_row');\r\n            var node = CP_Customizer.preview.getSectionByDataId($item.data('id'));\r\n            var oldValue = node.attr('data-label');\r\n            var value = this.value.trim();\r\n\r\n            if (value === oldValue) {\r\n                return;\r\n            }\r\n\r\n            if (value.length === 0) {\r\n                value = oldValue;\r\n                this.value = oldValue;\r\n            }\r\n\r\n            node.attr('data-label', value);\r\n            node.data('label', value);\r\n\r\n            var slug = CP_Customizer.getSlug(value);\r\n\r\n            if (!slug) {\r\n                return;\r\n            }\r\n\r\n            if (CP_Customizer.preview.getRootNode().find('[id=\"' + slug + '\"]').length) {\r\n                var found = false,\r\n                    index = 1;\r\n                while (!found) {\r\n                    if (CP_Customizer.preview.getRootNode().find('[id=\"' + slug + '-' + index + '\"]').length === 0) {\r\n                        slug += '-' + index;\r\n                        found = true;\r\n                    } else {\r\n                        index++;\r\n                    }\r\n                }\r\n            }\r\n            var oldId = node.attr('id');\r\n            node.attr('id', slug);\r\n            $(this).siblings('.anchor-info').text('#' + slug);\r\n\r\n            if (CP_Customizer.menu.anchorExistsInPrimaryMenu(oldId)) {\r\n                CP_Customizer.menu.updatePrimaryMenuAnchor(oldId, {\r\n                    anchor: slug,\r\n                    title: value\r\n                });\r\n            }\r\n\r\n            CP_Customizer.setContent();\r\n        }, 500);\r\n\r\n\r\n        $sectionsList.on('keyup', '.full_row input', labelChange);\r\n\r\n        $sectionsList.on('dblclick', '.anchor-info', function () {\r\n            this.contentEditable = true;\r\n        });\r\n\r\n        $sectionsList.on('keypress', '.anchor-info', function (event) {\r\n\r\n            if (event.which === 13) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                this.contentEditable = false;\r\n            }\r\n\r\n        });\r\n\r\n        $sectionsList.on('focusout', '.anchor-info', function () {\r\n            var slug = $(this).text();\r\n            slug = CP_Customizer.getSlug(slug);\r\n            $(this).text('#' + slug);\r\n\r\n            var $item = $(this).closest('.full_row');\r\n            var node = CP_Customizer.preview.getSectionByDataId($item.data('id'));\r\n            var oldId = node.attr('id');\r\n            node.attr('id', slug);\r\n            node.attr('id', slug);\r\n            if (CP_Customizer.menu.anchorExistsInPrimaryMenu(oldId)) {\r\n                CP_Customizer.menu.updatePrimaryMenuAnchor(oldId, {\r\n                    anchor: \"#\" + slug,\r\n                    title: $item.find('input.item-label').val()\r\n                });\r\n            }\r\n\r\n            this.contentEditable = false;\r\n            CP_Customizer.setContent();\r\n        });\r\n\r\n\r\n        $sectionsList.on('click', '.full_row .item-menu-visible', function (event) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            event.stopImmediatePropagation();\r\n\r\n            var $item = $(this).closest('.full_row'),\r\n                $node = CP_Customizer.preview.getSectionByDataId($item.data('id'));\r\n\r\n            if (false === CP_Customizer.menu.getPrimaryMenuID()) {\r\n                CP_Customizer.menu.createPrimaryMenu();\r\n            }\r\n\r\n            var anchor = $node.attr('id');\r\n            var label = $node.attr('data-label');\r\n\r\n            if (CP_Customizer.menu.anchorExistsInPrimaryMenu(anchor)) {\r\n                CP_Customizer.menu.removeAnchorFromPrimaryMenu(anchor);\r\n                $(this).removeClass('active');\r\n            } else {\r\n                CP_Customizer.menu.addAnchorToPrimaryMenu(anchor, label);\r\n                $(this).addClass('active');\r\n            }\r\n        });\r\n\r\n        function focusSection(item) {\r\n\r\n            var section = CP_Customizer.preview.getSectionByDataId($(item).data('id'));\r\n\r\n            CP_Customizer.preview.find('html,body').animate({\r\n                scrollTop: section.offset().top\r\n            }, 500);\r\n\r\n            $(item).addClass('focused').siblings().removeClass('focused');\r\n\r\n            CP_Customizer.trigger('section_focused', section);\r\n        }\r\n\r\n        $sectionsList.on('click', '.full_row .item-settings', function (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            var customizerSection = $(this).attr('data-setting');\r\n\r\n            var section = CP_Customizer.preview.getSectionByDataId($(this).closest('.full_row').data('id'));\r\n\r\n            if (CP_Customizer.isRightSidebarVisible(customizerSection)) {\r\n                CP_Customizer.hideRightSidebar();\r\n            }\r\n\r\n            CP_Customizer.openRightSidebar(customizerSection, {\r\n                floating: CP_Customizer.hooks.applyFilters('content_section_setting_float', true),\r\n                y: $(this).offset().top,\r\n                section: section\r\n            });\r\n\r\n            focusSection($(this).closest('.full_row'));\r\n\r\n        });\r\n\r\n\r\n        $sectionsList.on('click', '.full_row', function () {\r\n\r\n            var section = CP_Customizer.preview.getSectionByDataId($(this).data('id'));\r\n\r\n            if (!section.length) {\r\n                return;\r\n            }\r\n\r\n            focusSection($(this));\r\n\r\n            CP_Customizer.hideRightSidebar();\r\n\r\n\r\n        });\r\n\r\n        var skipableKeyCodes = [8, 46, 16, 17, 18];\r\n        var labelValidaton = function (event) {\r\n\r\n            if (skipableKeyCodes.indexOf(event.keyCode) === -1 && event.key.length === 1) {\r\n                if (!event.key.match(/[A-Za-z0-9\\s]/)) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n            }\r\n        };\r\n        $sectionsList.on('keydown', '.full_row input', labelValidaton);\r\n        \r\n        var gutenbergCounter = 1;\r\n        var isGutenbergSection = false;\r\n        function getListModel(elem) {\r\n            var $node = $(elem);\r\n            \r\n            //add gutenberg sections to list\r\n            isGutenbergSection = false;\r\n            if ($node.attr(\"class\") && $node.attr(\"class\").indexOf(\"wp-block\") !== -1 || elem.tagName == \"P\")\r\n            {\r\n                var gutenbergId = \"gutenberg-section-\" + gutenbergCounter++;\r\n                $node.attr({\"id\": gutenbergId, \"data-id\": gutenbergId, \"data-export-id\": gutenbergId, \"data-label\" :\"Gutenberg\"});\r\n                isGutenbergSection = true;\r\n            }\r\n\r\n            var \r\n                label = $node.attr('data-label') || $node.attr('id'),\r\n                id = $node.attr('id') || \"\",\r\n                sectionID = $node.attr('data-id'),\r\n                exportID = $node.attr('data-export-id'),\r\n                inMenu = CP_Customizer.menu.anchorExistsInPrimaryMenu(id),\r\n                setting = $node.attr('data-setting') ? $node.attr('data-setting') : false;\r\n            setting = CP_Customizer.hooks.applyFilters('content_section_setting', setting);\r\n\r\n            return {\r\n                label: label,\r\n                id: id,\r\n                setting: (isGutenbergSection? false : setting),\r\n                sectionID: sectionID,\r\n                exportID: exportID,\r\n                inMenu: inMenu\r\n            };\r\n        }\r\n\r\n        var openedSectionsCategories = {};\r\n\r\n        function updateSectionsList() {\r\n            var data = CP_Customizer.preview.getRootNode().children().map(function (index, elem) {\r\n                return getListModel(elem);\r\n            });\r\n\r\n            $sectionsList.children('.item.full_row').remove();\r\n\r\n            var availableRowsList = $('[data-type=\"row-list-control\"] [data-name=\"page_content\"]');\r\n            var $controlItems = availableRowsList.find('li.available-item');\r\n\r\n            var allowMultiple = (availableRowsList.closest('[data-selection=\"multiple\"]').length > 0);\r\n\r\n\r\n            function openCategory($category) {\r\n                var $this = $($category);\r\n\r\n                var $items = $this.data('items');\r\n\r\n                if (!$items || $items.length === 0) {\r\n                    $items = $this.nextUntil('li.category-title', 'li.available-item');\r\n                    $this.data('items', $items);\r\n                }\r\n\r\n                $items.fadeIn(50);\r\n                $this.attr('data-item-open', 1);\r\n                $this.removeAttr('data-item-closed');\r\n                openedSectionsCategories[$this.attr('data-category')] = true;\r\n            }\r\n\r\n            function closeCategory($category) {\r\n                var $this = $($category);\r\n\r\n                var $items = $this.data('items');\r\n\r\n                if (!$items || $items.length === 0) {\r\n                    $items = $this.nextUntil('li.category-title', 'li.available-item');\r\n                    $this.data('items', $items);\r\n                }\r\n\r\n                $items.fadeOut(50);\r\n                $this.removeAttr('data-item-open');\r\n                $this.attr('data-item-closed', 1);\r\n                openedSectionsCategories[$this.attr('data-category')] = false;\r\n            }\r\n\r\n\r\n            var $categoryTitles = availableRowsList.find('li.category-title');\r\n            $categoryTitles.addClass('closeable');\r\n            $categoryTitles.each(function (index) {\r\n                    if (!$(this).attr('data-item-closed')) {\r\n                        $(this).attr('data-item-open', 1);\r\n                    }\r\n\r\n                    if (index > 1 && !openedSectionsCategories[$(this).attr('data-category')]) {\r\n                        closeCategory($(this));\r\n                    }\r\n                }\r\n            );\r\n\r\n            $categoryTitles.off('click').on('click', function () {\r\n\r\n\r\n                if ($(this).attr('data-item-open')) {\r\n                    closeCategory($(this));\r\n                } else {\r\n                    openCategory($(this));\r\n                }\r\n            });\r\n\r\n\r\n            data.each(function (index, _data) {\r\n\r\n                // ignore elements injected by plugins and that do not match the companion structure\r\n                if (!_data.exportID) {\r\n                    return;\r\n                }\r\n\r\n                $sectionsList.children('.empty').before(listItemTemplate(_data));\r\n\r\n\r\n                if (allowMultiple && !data.once) {\r\n                    return;\r\n                }\r\n\r\n                $controlItems.filter('[data-id=\"' + _data.exportID + '\"]').addClass('already-in-page');\r\n            });\r\n\r\n\r\n            availableRowsList.parent().off('cp.item.click').on('cp.item.click', function (event, itemID, enabled) {\r\n                var $ = CP_Customizer.preview.jQuery();\r\n                var data = CP_Customizer.pluginOptions.contentSections[itemID];\r\n\r\n                if (data['pro-only']) {\r\n\r\n                    CP_Customizer.popUpInfo(window.CP_Customizer.translateCompanionString('This item requires PRO theme'),\r\n                        '<div class=\"pro-popup-preview-container\">' +\r\n                        '   <img class=\"pro-popup-preview-image\" src=\"' + data.preview + '\">' +\r\n                        '   <h3>' + window.CP_Customizer.translateCompanionString('This item is available only in the PRO version') + '</h3>' +\r\n                        '   <p>' + window.CP_Customizer.translateCompanionString('Please upgrade to the PRO version to use this item and many others.') + '</p>' +\r\n                        '   <br/>' +\r\n                        '   <a href=\"https://extendthemes.com/go/materialis-upgrade\" class=\"button button-orange\" target=\"_blank\">' +\r\n                        window.CP_Customizer.translateCompanionString('Upgrade to PRO') + '</a> ' +\r\n                        '</div>'\r\n                    );\r\n\r\n                    return;\r\n                }\r\n\r\n                var response = CP_Customizer.preview.insertSectionFromData(data, true);\r\n\r\n                var _data = getListModel(response.$content);\r\n\r\n                var $listChildren = $sectionsList.children().not('.empty')\r\n                if (!_.isUndefined(response.index) && $listChildren.length) {\r\n                    $listChildren.eq(response.index).before(listItemTemplate(_data));\r\n                } else {\r\n                    $sectionsList.children('.empty').before(listItemTemplate(_data));\r\n                }\r\n            });\r\n        }\r\n\r\n        CP_Customizer.bind('PREVIEW_LOADED', updateSectionsList);\r\n        CP_Customizer.bind('UPDATE_SECTIONS_LIST', updateSectionsList);\r\n\r\n        CP_Customizer.bind(CP_Customizer.events.RIGHT_SECTION_CLOSED, function (ev, sidebar) {\r\n            $contentLi.find('.cp-add-section.active').removeClass('active');\r\n        });\r\n\r\n        CP_Customizer.bind('content.section.hovered', function (event, $el) {\r\n            var sectionId = $el.attr('data-id');\r\n            var $item = $sectionsList.find('[data-id=\"' + sectionId + '\"]');\r\n            $item.addClass('focused').siblings().removeClass('focused');\r\n\r\n            if (!$item.length) {\r\n                return;\r\n            }\r\n\r\n            $item[0].scrollIntoViewIfNeeded();\r\n        });\r\n\r\n    });\r\n})(jQuery, window);\r\n","(function () {\r\n    var __templates = {};\r\n\r\n    var templateOptions = {\r\n        evaluate: /<#([\\s\\S]+?)#>/g,\r\n        interpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\r\n        escape: /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g\r\n        // variable:    'data'\r\n    };\r\n\r\n    function template(text) {\r\n        text = text.split('<inline-script').join('<script');\r\n        text = text.split('</inline-script').join('</script');\r\n\r\n        return _.template(text, templateOptions);\r\n    }\r\n\r\n    function getCPTemplate(id) {\r\n        var text = jQuery(\"#cp-content-templates-\" + id)[0].innerHTML;\r\n\r\n        return template(text);\r\n    }\r\n\r\n    window.CP_Customizer.addModule(function (CP_Customizer) {\r\n        var contentTemplates = {\r\n            text: getCPTemplate(\"text\"),\r\n            'text-with-checkbox': getCPTemplate(\"text-with-checkbox\"),\r\n            link: getCPTemplate(\"link\"),\r\n            image: getCPTemplate(\"image\"),\r\n            icon: getCPTemplate(\"icon\"),\r\n            list: getCPTemplate(\"list\"),\r\n            'linked-icon': getCPTemplate(\"linked-icon\"),\r\n            getCPScriptTemplate: getCPTemplate\r\n        };\r\n\r\n        CP_Customizer.jsTPL = _.extend(CP_Customizer.jsTPL, contentTemplates);\r\n\r\n        CP_Customizer.jsTPL['select'] = template('' +\r\n            '<li class=\"customize-control customize-control-text\">' +\r\n            '    <label>' +\r\n            '        <span class=\"customize-control-title\">{{{  label  }}}</span>' +\r\n            '        <select type=\"text\" id=\"{{{ id }}}\">' +\r\n            '            <# jQuery.each(choices,function(index,value){ #>' +\r\n            '                <option value=\"{{{ value }}}\"  ><# print(CP_Customizer.translateCompanionString(index)) #></option>' +\r\n            '            <# }) #>' +\r\n            '        </select>' +\r\n            '        <script>' +\r\n            '                jQuery(\"#{{ id }}\").val(\"{{{ value }}}\") ' +\r\n            '        </script>' +\r\n            '    </label>' +\r\n            '</li>' +\r\n            '');\r\n\r\n\r\n        CP_Customizer.jsTPL['selectize'] = template('' +\r\n            ' <li class=\"customize-control customize-control-text\">' +\r\n            '    <label>' +\r\n            '        <span class=\"customize-control-title\">{{{  label  }}}</span>' +\r\n            '        <select {{ (data.multiple ? \\'multiple\\' : \\'\\') }} id=\"{{{ id }}}\">' +\r\n            '        <# var choices = _.isFunction(data.choices) ? data.choices() : data.choices #>' +\r\n            '        <# _.each(choices, function(label, _v) { ' +\r\n            '               var Vs = _.isArray(value) ? value: value.split(\\',\\').map(function(item){return item.trim()});' +\r\n            '               var isSelected = (Vs.indexOf(_v) !== -1)' +\r\n            '            #>' +\r\n            '           <option {{ ( isSelected ? \"selected=\\'true\\' \": \"\" ) }} value=\"{{{ _v }}}\">' +\r\n            '               {{{  label  }}}' +\r\n            '            </option>' +\r\n            '        <# }); #>' +\r\n            '        </select>' +\r\n            '    </label>' +\r\n            '    <script>' +\r\n            '        jQuery(\"#{{ id }}\").selectize({' +\r\n            '             maxItems: {{ (data.multiple ? \"null\" : \"1\") }},' +\r\n            '             plugins: {{{ (data.multiple ? \"[\\'remove_button\\']\" : \"[]\") }}}' +\r\n            '        })' +\r\n            '    </script>' +\r\n            '</li>' +\r\n            '');\r\n\r\n        CP_Customizer.jsTPL['selectize-remote'] = template('' +\r\n            '<li class=\"customize-control customize-control-selectize-remote\">' +\r\n            '    <label>' +\r\n            '        <span class=\"customize-control-title\">{{{  label  }}}</span>' +\r\n            '        <select id=\"{{{ id }}}\"></select>' +\r\n            '    </label>' +\r\n            '</li>' +\r\n            '');\r\n\r\n\r\n        CP_Customizer.jsTPL['checkbox'] = template('' +\r\n            '<li class=\"customize-control customize-control-checkbox\">' +\r\n            '    <span class=\"customize-control-title\">{{{  label  }}}</span>' +\r\n            '    <div style=\"clear: both\">' +\r\n            '       <label for=\"{{{ id }}}\">\\n' +\r\n            '           <input  {{ (value?\"checked=\\'true\\'\":\"\") }} id=\"{{{ id }}}\" type=\"checkbox\">{{ text  }}' +\r\n            '       </label>' +\r\n            '  </div>' +\r\n            '</li>' +\r\n            '');\r\n\r\n        CP_Customizer.jsTPL.compile = template;\r\n    });\r\n})();","(function () {\r\n    window.CP_Customizer.addModule(function (CP_Customizer) {\r\n\r\n        var iconStyles = [\r\n            {\r\n                value: 'normal',\r\n                label: window.CP_Customizer.translateCompanionString('Normal'),\r\n                classes: 'normal-shape'\r\n            },\r\n            {\r\n                value: 'round-bg',\r\n                label: window.CP_Customizer.translateCompanionString('Rounded background'),\r\n                classes: 'reverse round'\r\n            },\r\n            {\r\n                value: 'bordered',\r\n                label: window.CP_Customizer.translateCompanionString('Bordered'),\r\n                classes: 'bordered round'\r\n            }\r\n        ];\r\n\r\n\r\n        var iconSizes = [\r\n            {\r\n                value: 'small',\r\n                label: window.CP_Customizer.translateCompanionString('Small'),\r\n                classes: 'small'\r\n            },\r\n            {\r\n                value: 'normal',\r\n                label: window.CP_Customizer.translateCompanionString('Normal'),\r\n                classes: 'normal-size'\r\n            },\r\n            {\r\n                value: 'big',\r\n                label: window.CP_Customizer.translateCompanionString('Large'),\r\n                classes: 'big'\r\n            },\r\n            {\r\n                value: 'large',\r\n                label: window.CP_Customizer.translateCompanionString('Extra Large'),\r\n                classes: 'large'\r\n            }\r\n        ];\r\n\r\n        function setIconStyle(style, $icon) {\r\n            var toRemove = iconStyles.map(function (style) {\r\n                return style.classes;\r\n            });\r\n\r\n            var toAdd = \"\";\r\n\r\n            iconStyles.forEach(function (iconStyle) {\r\n                if (iconStyle.value === style) {\r\n                    toAdd = iconStyle.classes\r\n                }\r\n            });\r\n\r\n            $icon.removeClass(toRemove.join(' ')).addClass(toAdd);\r\n\r\n        }\r\n\r\n        function getIconStyle($icon) {\r\n            var result = 'normal';\r\n\r\n            iconStyles.forEach(function (style) {\r\n                if (style.classes.trim()) {\r\n                    var selector = CP_Customizer.utils.normalizeClassAttr(style.classes, true);\r\n                    if ($icon.is(selector)) {\r\n                        result = style.value;\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n\r\n\r\n        function setIconSize(size, $icon) {\r\n            var toRemove = iconSizes.map(function (size) {\r\n                return size.classes;\r\n            });\r\n\r\n            var toAdd = \"\";\r\n\r\n            iconSizes.forEach(function (iconSize) {\r\n                if (iconSize.value === size) {\r\n                    toAdd = iconSize.classes\r\n                }\r\n            });\r\n\r\n            $icon.removeClass(toRemove.join(' ')).addClass(toAdd);\r\n\r\n        }\r\n\r\n        function getIconSize($icon) {\r\n            var result = 'normal';\r\n\r\n            iconSizes.forEach(function (size) {\r\n                if (size.classes.trim()) {\r\n                    var selector = CP_Customizer.utils.normalizeClassAttr(size.classes, true);\r\n                    if ($icon.is(selector)) {\r\n                        result = size.value;\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n\r\n\r\n        // normal texts panel\r\n        CP_Customizer.addContainerDataHandler(CP_Customizer.TEXT_ELEMENTS, function ($el) {\r\n            var label =  window.CP_Customizer.translateCompanionString($el.attr('data-popup-label') || \"\");\r\n            var result = [\r\n\r\n                {\r\n                    label: label || window.CP_Customizer.translateCompanionString(\"Text\"),\r\n                    type: \"text\",\r\n                    value: $el.text().trim()\r\n                }\r\n            ];\r\n\r\n            if ($el.parent().is('a') || $el.is('.mdi')) {\r\n                return [];\r\n            }\r\n\r\n            return result;\r\n\r\n        }, function ($el, value, type, field) {\r\n            switch (type) {\r\n                case \"text\":\r\n                    var html = CP_Customizer.utils.htmlDecode($el.html()).replace(field.value, value);\r\n                    $el.html(html);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        // containers selector\r\n        CP_Customizer.preview.addDataContainerSelector('[data-hover-fx]');\r\n\r\n        // link panel;\r\n        CP_Customizer.addContainerDataHandler('a', function ($el) {\r\n            var linkIsShortcode = $el.is('[data-attr-shortcode^=\"href:\"]');\r\n\r\n            var hasClass = ($el.attr('class') || \"\").trim().length > 0;\r\n\r\n            var result = [\r\n\r\n                {\r\n                    label: (hasClass ? window.CP_Customizer.translateCompanionString(\"Button\") : window.CP_Customizer.translateCompanionString(\"Link\"))\r\n                    + \" \" + window.CP_Customizer.translateCompanionString(\"Text\"),\r\n                    type: \"text\",\r\n                    value: $el.text().trim()\r\n                }\r\n            ];\r\n\r\n            if (!linkIsShortcode) {\r\n                result.push({\r\n                    label: window.CP_Customizer.translateCompanionString(\"Link\"),\r\n                    type: \"link\",\r\n                    value: {\r\n                        link: CP_Customizer.preview.cleanURL($el.attr('href') || \"\"),\r\n                        target: $el.attr('target') || \"_self\"\r\n                    }\r\n                });\r\n            }\r\n\r\n            return result;\r\n\r\n        }, function ($el, value, type, field) {\r\n            switch (type) {\r\n                case \"link\":\r\n                    $el.attr('href', value.link);\r\n                    $el.attr('target', value.target);\r\n\r\n                    $el.attr('data-cp-link', 1);\r\n\r\n                    break;\r\n                case \"text\":\r\n                    if (!field.name) {\r\n                        var html = CP_Customizer.utils.htmlDecode($el.html()).replace(field.value, value);\r\n                        $el.html(html);\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n\r\n\r\n        // list panel;\r\n        CP_Customizer.addContainerDataHandler('ul', function ($el) {\r\n            var items = $el.children('li');\r\n\r\n            items = items.map(function (index, item) {\r\n                return {\r\n                    \"label\": window.CP_Customizer.translateCompanionString(\"Item\") + \" \" + index,\r\n                    \"value\": jQuery(item).html(),\r\n                    \"id\": \"item_\" + index\r\n                }\r\n            })\r\n\r\n            var result = {\r\n                label: window.CP_Customizer.translateCompanionString(\"List items\"),\r\n                type: \"list\",\r\n                value: items,\r\n                getValue: function ($control) {\r\n                    var items = [];\r\n                    $control.children().each(function () {\r\n                        items.push(jQuery(this).find('.item-editor').val());\r\n                    })\r\n                    return items;\r\n                }\r\n            }\r\n\r\n            return result;\r\n\r\n        }, function ($el, items, type) {\r\n\r\n            var orig = $el.children().eq(0).clone();\r\n            $el.empty();\r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var $item = orig.clone();\r\n                $item.html(items[i]);\r\n                $el.append($item);\r\n            }\r\n        });\r\n\r\n        // image link panel\r\n        CP_Customizer.addContainerDataFilter(function ($el) {\r\n            return !($el.is('a') && $el.children().is('img'));\r\n        });\r\n\r\n        CP_Customizer.addContainerDataHandler('img', function ($el) {\r\n\r\n            var mediaType = \"image\",\r\n                mediaData = false;\r\n\r\n            if ($el.attr('data-size')) {\r\n                mediaType = \"cropable\";\r\n                var size = $el.attr('data-size').split('x');\r\n\r\n                var section = CP_Customizer.preview.getNodeSection($el);\r\n                var sectionExports = CP_Customizer.getSectionExports(section);\r\n\r\n                var flexible = _.isUndefined(sectionExports.maintainCropPropotion) ? true : sectionExports.maintainCropPropotion;\r\n\r\n                if ($el.is('[data-size-flexible=false]')) {\r\n                    flexible = false;\r\n                }\r\n\r\n                mediaData = {\r\n                    width: size[0],\r\n                    height: size[1],\r\n                    flexible: flexible\r\n                };\r\n            }\r\n\r\n\r\n            var image = [{\r\n                label: window.CP_Customizer.translateCompanionString(\"Image\"),\r\n                mediaType: mediaType,\r\n                mediaData: mediaData,\r\n                type: \"image\",\r\n                value: ($el[0].currentSrc || $el.attr('src'))\r\n            }];\r\n\r\n            if ($el.parent().is('a')) {\r\n                image.push({\r\n                    label: window.CP_Customizer.translateCompanionString(\"Link\"),\r\n                    type: \"link\",\r\n                    value: {\r\n                        link: CP_Customizer.preview.cleanURL($el.parent().attr('href') || \"\"),\r\n                        target: $el.parent().attr('target') || \"_self\"\r\n                    }\r\n                });\r\n            }\r\n            return image;\r\n\r\n        }, function ($el, value, type) {\r\n            switch (type) {\r\n                case 'image':\r\n                    $el.attr(\"src\", value);\r\n                    $el.removeAttr('srcset');\r\n                    $el.removeAttr('src-orig');\r\n                    $el.removeAttr('width');\r\n                    $el.removeAttr('height');\r\n                    break;\r\n                case 'link':\r\n                    $el.parent().attr('href', value.link);\r\n                    $el.parent().attr('target', value.target);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        // data-bg=[image]\r\n\r\n        function getLinkFromBgImageValue(value) {\r\n            value = value.replace(/url\\((.*)\\)/, \"$1\");\r\n            return CP_Customizer.utils.phpTrim(value, \"\\\"'\");\r\n        }\r\n\r\n        CP_Customizer.addContainerDataHandler('[data-bg=image]', function ($el) {\r\n\r\n            var mediaType = \"image\",\r\n                mediaData = false;\r\n\r\n            if ($el.attr('data-size')) {\r\n                mediaType = \"cropable\";\r\n                var size = $el.attr('data-size').split('x');\r\n                mediaData = {\r\n                    width: size[0],\r\n                    height: size[1]\r\n                };\r\n            }\r\n\r\n\r\n            return [{\r\n                label: window.CP_Customizer.translateCompanionString(\"Background Image\"),\r\n                mediaType: mediaType,\r\n                mediaData: mediaData,\r\n                type: \"image\",\r\n                value: getLinkFromBgImageValue($el.css('background-image'))\r\n            }];\r\n\r\n        }, function ($el, value, type) {\r\n            switch (type) {\r\n                case 'image':\r\n                    $el.css(\"background-image\", 'url(\"' + value + '\")');\r\n                    break;\r\n            }\r\n        });\r\n\r\n\r\n        // material icons icon with link\r\n\r\n        CP_Customizer.addContainerDataFilter(function ($el) {\r\n            return !($el.children().is('i.mdi') && $el.is('a'));\r\n        });\r\n\r\n        var mdiIconRegexp = /mdi\\-[a-z\\-]+/ig;\r\n\r\n        CP_Customizer.addContainerDataHandler('a i.mdi', function ($el) {\r\n\r\n            var mediaType = \"icon\",\r\n                mediaData = false;\r\n\r\n            var result = [{\r\n                label: window.CP_Customizer.translateCompanionString(\"Material Icon\"),\r\n                mediaType: mediaType,\r\n                mediaData: mediaData,\r\n                canHide: true,\r\n                type: \"linked-icon\",\r\n                value: {\r\n                    icon: $el.attr('class').match(mdiIconRegexp).pop(),\r\n                    link: CP_Customizer.preview.cleanURL($el.parent().attr('href') || \"\"),\r\n                    target: $el.parent().attr('target') || \"_self\",\r\n                    visible: CP_Customizer.preview.isNodeVisible($el.parent())\r\n                }\r\n            }];\r\n\r\n            if ($el.parent().is('.read-more')) {\r\n                result = [{\r\n                    label: window.CP_Customizer.translateCompanionString(\"Text\"),\r\n                    type: \"text\",\r\n                    value: $el.parent().text().trim()\r\n                }, {\r\n                    label: window.CP_Customizer.translateCompanionString(\"Link\"),\r\n                    type: \"link\",\r\n                    value: {\r\n                        link: CP_Customizer.preview.cleanURL($el.parent().attr('href') || \"\"),\r\n                        target: $el.parent().attr('target') || \"_self\"\r\n                    }\r\n                }]\r\n\r\n            }\r\n\r\n            return result;\r\n\r\n\r\n        }, function ($el, value, type, field) {\r\n\r\n            if (type === \"linked-icon\") {\r\n                var classValue = $el.attr('class');\r\n                classValue = classValue.replace(/mdi\\-[a-z\\-]+/ig, \"\") + \" \" + value.icon;\r\n                $el.attr('class', classValue);\r\n\r\n                $el.parent().attr('href', value.link);\r\n                $el.parent().attr('target', value.target);\r\n\r\n                value.visible = _.isUndefined(value.visible) ? true : value.visible;\r\n\r\n                if (value.visible) {\r\n                    CP_Customizer.preview.showNode($el.parent());\r\n                } else {\r\n                    CP_Customizer.preview.hideNode($el.parent());\r\n                }\r\n            }\r\n\r\n            if (type === \"link\") {\r\n                $el.parent().attr('href', value.link);\r\n                $el.parent().attr('target', value.target);\r\n                $el.parent().attr('data-cp-link', 1);\r\n            }\r\n            if (type === \"text\") {\r\n                $el.parent().html(value).append($el);\r\n            }\r\n        });\r\n\r\n\r\n        CP_Customizer.addContainerDataHandler('i.mdi', function ($el) {\r\n\r\n            var mediaType = \"icon\",\r\n                mediaData = false;\r\n\r\n            return [{\r\n                label: window.CP_Customizer.translateCompanionString(\"Material Icon\"),\r\n                mediaType: mediaType,\r\n                mediaData: mediaData,\r\n                canHide: $el.closest('[data-type=group]').length > 0,\r\n                type: \"icon\",\r\n                styles: iconStyles,\r\n                sizes: iconSizes,\r\n                value: {\r\n                    icon: $el.attr('class').match(mdiIconRegexp).pop(),\r\n                    style: getIconStyle($el),\r\n                    size: getIconSize($el),\r\n                    visible: CP_Customizer.preview.isNodeVisible($el)\r\n                }\r\n            }];\r\n\r\n\r\n        }, function ($el, value, type, prop) {\r\n            if (type === \"icon\") {\r\n                var classValue = $el.attr('class');\r\n                classValue = classValue.replace(/mdi\\-[a-z\\-]+/ig, \"\") + \" \" + value.icon;\r\n                $el.attr('class', classValue);\r\n\r\n                value.visible = _.isUndefined(value.visible) ? true : value.visible;\r\n\r\n                if (value.visible) {\r\n                    // $el.removeAttr('data-reiki-hidden');\r\n                    CP_Customizer.preview.showNode($el);\r\n                } else {\r\n                    CP_Customizer.preview.hideNode($el);\r\n                }\r\n\r\n                setIconStyle(value.style, $el);\r\n                setIconSize(value.size, $el);\r\n            }\r\n\r\n        });\r\n\r\n\r\n    });\r\n})();\r\n","/* global top */\r\n\r\n(function (root, CP_Customizer, $) {\r\n\r\n    function newColumnContent() {\r\n        /*\r\n         <div data-cpid=\"new\" class=\"column_28\" reveal-fx=\"RevealFX115\" data-scrollreveal=\"RevealFX115\">\r\n         <img width=\"184\" height=\"174\" src=\"@@ROOT@@/wp-content/themes/reiki-dragdrop/images/icon1.png\" data-content-code-editable=\"true\" data-content-editable=\"true\" contenteditable=\"true\">\r\n         <h4 data-content-code-editable=\"true\" data-content-editable=\"true\" contenteditable=\"true\">ON CANVAS TEXT EDITING</h4>\r\n         <p class=\"small_text1\" data-content-code-editable=\"true\" data-content-editable=\"true\" contenteditable=\"true\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n         </div>\r\n         */\r\n    }\r\n\r\n    var unwrapComment = /\\/\\*!?(?:\\@preserve)?[ \\t]*(?:\\r\\n|\\n)([\\s\\S]*?)(?:\\r\\n|\\n)\\s*\\*\\//;\r\n\r\n    function getFunctionCommentTemplate(fn) {\r\n        //return typeof fn === 'function' ? unwrapComment.exec(fn.toString())[1] : fn;\r\n        if (typeof fn === 'function')\r\n        {\r\n            var exec = unwrapComment.exec(fn.toString());\r\n            if (exec) return exec[1];\r\n        } \r\n        return fn;\r\n    }\r\n\r\n    CP_Customizer.addModule(function (CP_Customizer) {\r\n        var $ = jQuery; // use global jquery until preview is ready\r\n\r\n        CP_Customizer.bind(CP_Customizer.events.PREVIEW_LOADED, function () {\r\n            // add preview jquery  spectrum plugin\r\n            // use preview jQuery as the $ for the next elements\r\n            $ = CP_Customizer.preview.jQuery();\r\n            $.fn.spectrum = root.jQuery.fn.spectrum;\r\n        });\r\n\r\n        function getColorComponent() {\r\n            if ($('#cp-spectrum-keeper').length) {\r\n                return $('#cp-spectrum-keeper');\r\n            }\r\n\r\n            var $template = $(\r\n                '   <div id=\"cp-spectrum-picker\" class=\"picker\">' +\r\n                '       <div class=\"bg-picker\">' +\r\n                '            <h5 class=\"legend\">' + window.CP_Customizer.translateCompanionString('Background Color') + '</h5>' +\r\n                '           <input name=\"color\" type=\"text\" />' +\r\n                '       </div>');\r\n\r\n            var colorPalette = root.CP_Customizer.data().bgColorPalette;\r\n            $template.find('[name=color]').spectrum({\r\n                flat: true,\r\n                preferredFormat: \"hex\",\r\n                showPaletteOnly: true,\r\n                color: '#ffffff',\r\n                palette: [colorPalette],\r\n                move: function (color) {\r\n                    if (!color) {\r\n                        return;\r\n                    }\r\n                    var node = $(this).closest('.node-overlay').data().node;\r\n                    $(this).find('[name=color]').spectrum(\"set\", color.toString());\r\n                    $(node).css('background-color', color.toString());\r\n                    $(this).closest('.cog.active').removeClass('active');\r\n                    CP_Customizer.markSave();\r\n                },\r\n                change: function (color) {\r\n                    if (!color || !$(this).closest('.node-overlay').data()) {\r\n                        return;\r\n                    }\r\n                    $(this).find('[name=color]').spectrum(\"set\", color.toString());\r\n                    var node = $(this).closest('.node-overlay').data().node;\r\n                    $(node).css('background-color', color.toString());\r\n                    $(this).closest('.cog.active').removeClass('active');\r\n                    CP_Customizer.markSave();\r\n                }\r\n            });\r\n\r\n            $template.find('[name=\"addImage\"]').click(function (event) {\r\n                var node = $(this).closest('.node-overlay').data().node;\r\n                CP_Customizer.openImageManager(function (image) {\r\n                    $(node).css('background-image', \"url(\" + image + \")\");\r\n                    CP_Customizer.markSave();\r\n                });\r\n            });\r\n\r\n\r\n            $template.find('[name=\"removeImage\"]').click(function (event) {\r\n                var node = $(this).closest('.node-overlay').data().node;\r\n                $(node).css('background-image', \"none\");\r\n                CP_Customizer.markSave();\r\n            });\r\n\r\n\r\n            $template.find('[name=\"coverImage\"]').click(function (event) {\r\n                var node = $(this).closest('.node-overlay').data().node;\r\n\r\n                if ($(this).hasClass('active')) {\r\n                    $(node).css('background-size', \"auto\");\r\n                    $(node).css('background-repeat', \"repeat\");\r\n                } else {\r\n                    $(node).css('background-size', \"cover\");\r\n                    $(node).css('background-repeat', \"no-repeat\");\r\n                }\r\n                CP_Customizer.markSave();\r\n                $(this).toggleClass('active');\r\n            });\r\n\r\n            function update() {\r\n\r\n                var node = $(this).closest('.node-overlay').data().node;\r\n\r\n                var backgroundColor = \"#\" + tinycolor($(node).css('background-color')).toHex();\r\n\r\n                if (colorPalette.indexOf(backgroundColor) !== -1) {\r\n                    $(this).closest('.cog-subitems').removeClass('disabled');\r\n                    $(this).find('[name=color]').spectrum(\"set\", $(node).css('background-color'));\r\n\r\n                } else {\r\n                    $(this).closest('.cog-subitems').addClass('disabled');\r\n                    var $reason = $(this).closest('.cog-subitems').children('p.disable-reason');\r\n\r\n                    if ($reason.length === 0) {\r\n                        $reason = $(\"<p class='disable-reason'> \" + window.CP_Customizer.translateCompanionString('This section has a custom background color') +\r\n                            \"<br/>\" + window.CP_Customizer.translateCompanionString('Background can be changed in PRO') + \"</p>\");\r\n                        $(this).closest('.cog-subitems').prepend($reason);\r\n                    }\r\n\r\n                }\r\n\r\n                // if ($(node).css('background-size') && $(node).css('background-size') === \"cover\") {\r\n                //     $template.find('[name=\"coverImage\"]').addClass('active');\r\n                // } else {\r\n                //     $template.find('[name=\"coverImage\"]').removeClass('active');\r\n                // }\r\n\r\n\r\n            }\r\n\r\n            $template.data('update', update.bind($template));\r\n            return $template;\r\n        }\r\n\r\n\r\n        CP_Customizer.overlays.registerFixedOverlayOptions({\r\n            'section': {\r\n                'title': function (node) {\r\n                    var label = $(node).attr('data-label') ? $(node).attr('data-label') + \" [\" +\r\n                        window.CP_Customizer.translateCompanionString('Section') + \"]\" : window.CP_Customizer.translateCompanionString('SECTION');\r\n                    return label;\r\n                },\r\n                'toolbarTitle': function (node) {\r\n                    var label = $(node).attr('data-label') ? $(node).attr('data-label') + \" [\" + window.CP_Customizer.translateCompanionString('Section') + \"]\" :\r\n                        window.CP_Customizer.translateCompanionString('SECTION');\r\n                    return label;\r\n                },\r\n                toolbar_binds: {\r\n                    hover: [\r\n                        function (event, overlay) {\r\n\r\n                            // layout toggle\r\n                            var $changerItem = overlay.find('[data-name=\"section_layout_width_changer\"]');\r\n\r\n                            if (!$(this).closest(CP_Customizer.preview.getPageContainerSelector()).length) {\r\n                                $changerItem.hide();\r\n                            } else {\r\n                                $changerItem.show();\r\n                            }\r\n\r\n                            if ($(this).children().is('.gridContainer')) {\r\n                                $changerItem.text( window.CP_Customizer.translateCompanionString('Make full width'));\r\n                                $changerItem.data('toMake', 'full');\r\n                            } else {\r\n                                $changerItem.text( window.CP_Customizer.translateCompanionString('Make Centered'));\r\n                                $changerItem.data('toMake', 'centered');\r\n                            }\r\n\r\n                            var $bgChanger = overlay.find('[data-name=\"page_background_image\"]');\r\n                            var $isTransparent = tinycolor(getComputedStyle($(this)[0]).backgroundColor).getAlpha() === 0;\r\n\r\n                            if ($isTransparent) {\r\n                                $bgChanger.show();\r\n                            } else {\r\n                                $bgChanger.hide();\r\n                            }\r\n                        },\r\n                        function () {\r\n                        }\r\n                    ]\r\n                },\r\n                'items': [{\r\n                    'name': 'section_layout_width_changer',\r\n                    'title':  window.CP_Customizer.translateCompanionString('Make full width'),\r\n                    'on_click': function (node) {\r\n                        var toMake = $(this).data().toMake;\r\n                        switch (toMake) {\r\n                            case 'centered':\r\n                                $(node).children().not('[class*=\"section-separator\"]').addClass('gridContainer');\r\n                                break;\r\n                            case 'full':\r\n                                $(node).children().not('[class*=\"section-separator\"]').removeClass('gridContainer');\r\n                                break;\r\n                        }\r\n                        $(this).trigger('reiki.update_overlays');\r\n                        CP_Customizer.hooks.doAction('section_layout_changed', node, toMake);\r\n                        $(this).closest('.overlay-toolbar').trigger('mouseover');\r\n\r\n                        CP_Customizer.markSave();\r\n                    }\r\n                }, {\r\n                    'name': 'section_color_changer',\r\n                    'title': window.CP_Customizer.translateCompanionString('Change background'),\r\n                    'classes': 'subitems-arrow',\r\n                    'on_hover': [function () {\r\n                        var $subitemsContainer = $(this).children('.cog-subitems').length ? $(this).children('.cog-subitems') : $(\"<div class='cog-subitems' />\");\r\n                        $brush = getColorComponent();\r\n\r\n                        $subitemsContainer.empty();\r\n                        $subitemsContainer.appendTo($(this));\r\n\r\n                        $subitemsContainer.append($brush);\r\n                        $brush.data('update')();\r\n                    }, function () {\r\n                        //console.log('hover out');\r\n                    }]\r\n\r\n                }, {\r\n                    'name': 'page_background_image',\r\n                    'title':  window.CP_Customizer.translateCompanionString('Change background Image'),\r\n                    'on_click': function (event) {\r\n                        root.CP_Customizer.wpApi.control('background_image').focus();\r\n                    }\r\n                }]\r\n            },\r\n            'list': {\r\n                'nodeOverrider': function (node) {\r\n                    return $(node).is('[data-type=\"row\"]') ? $(node) : $(node).find('[data-type=\"row\"]').eq(0);\r\n                },\r\n                'title': function (node) {\r\n                    var label = $(node).closest('[data-label]').length ? $(node).closest('[data-label]').attr('data-label') +\r\n                        \" [\" + window.CP_Customizer.translateCompanionString(\"List\") + \"]\" : window.CP_Customizer.translateCompanionString(\"List\");\r\n                    return label;\r\n                },\r\n                'toolbarTitle': function (node) {\r\n                    var label = $(node).closest('[data-label]').length ? $(node).closest('[data-label]').attr('data-label') + \" [\" +\r\n                        window.CP_Customizer.translateCompanionString(\"List\") + \"]\" : window.CP_Customizer.translateCompanionString(\"List\");\r\n                    return label;\r\n                },\r\n                toolbar_binds: {\r\n                    hover: [\r\n                        function (event, overlay) {\r\n                            if ($(this).find('[data-type=\"row\"]').length || $(this).is('[data-type=\"row\"]')) {\r\n                                overlay.find('[data-category=\"list\"]').show();\r\n\r\n                                if ($(overlay.data('node')).find('[data-type=\"row\"]').is('[data-content-shortcode]')) {\r\n                                    overlay.find('[data-name=\"row_add_item\"]').hide();\r\n                                    overlay.find('[data-name=\"columns_reorder\"]').hide();\r\n                                } else {\r\n                                    overlay.find('[data-name=\"row_add_item\"]').show();\r\n                                    overlay.find('[data-name=\"columns_reorder\"]').show();\r\n\r\n                                }\r\n                            } else {\r\n                                overlay.find('[data-category=\"list\"]').hide();\r\n                            }\r\n                        },\r\n                        function (event, overlay) {\r\n                        }\r\n                    ]\r\n                },\r\n                'items': [{\r\n                    'name': 'row_add_item',\r\n                    'title': window.CP_Customizer.translateCompanionString('Add item'),\r\n                    'on_click': function (node) {\r\n                        var content = getFunctionCommentTemplate(newColumnContent);\r\n                        var $content;\r\n                        if (!$(node).children().length) {\r\n                            content = content.split(\"@@ROOT@@\").join(getWPLocation());\r\n                            $content = $(content);\r\n                        } else {\r\n                            $content = $(node).children('div').first().clone(false, false);\r\n                        }\r\n\r\n\r\n                        $content = root.CP_Customizer.preview.cleanNode($content);\r\n                        root.CP_Customizer.preview.insertNode($content, $(node));\r\n                        root.CP_Customizer.hooks.doAction('section_list_item_refresh');\r\n                    }\r\n                }, {\r\n                    'name': 'columns_per_row',\r\n                    'title': window.CP_Customizer.translateCompanionString('Columns per row'),\r\n                    'classes': 'subitems-arrow',\r\n                    'on_hover': [function (node) {\r\n                        var $subitemsContainer = $(this).children('.cog-subitems').length ? $(this).children('.cog-subitems') : $(\"<div class='cog-subitems' />\");\r\n                        $subitemsContainer.empty();\r\n\r\n                        var cols = [1, 2, 3, 4, 6];\r\n\r\n                        if(node.is('[data-max-items]')) {\r\n                            var newCols = [];\r\n                            var maxCols = parseInt(node.attr('data-max-items'));\r\n                            for (var kc = 0; kc < cols.length; kc++) {\r\n                                if(cols[kc]<=maxCols) {\r\n                                    newCols.push(cols[kc]);\r\n                                }\r\n                            }\r\n                            cols = newCols;\r\n                        }\r\n\r\n                        for (var i = 0; i < cols.length; i++) {\r\n                            var colNr = cols[i];\r\n                            var itemData = {\r\n                                'title': colNr + (colNr > 1 ? \" \" +\r\n                                    window.CP_Customizer.translateCompanionString(\"columns\") : \" \" +\r\n                                    window.CP_Customizer.translateCompanionString(\"column\")),\r\n                                'name': colNr + \"_columns\",\r\n                                'on_click': function (node) {\r\n\r\n                                    var columns = this.data('name').replace('_columns', '');\r\n                                    var value = parseInt(columns);\r\n                                    columns = parseInt(columns);\r\n                                    columns = parseInt(12 / columns);\r\n\r\n\r\n                                    if (node.is('[data-dynamic-columns]')) {\r\n                                        var setting = node.attr('data-dynamic-columns');\r\n                                        if (setting !== \"handled\") {\r\n\r\n                                            root.CP_Customizer.setMod(setting, columns, \"refresh\");\r\n\r\n                                        } else {\r\n\r\n                                            CP_Customizer.hooks.doAction('dynamic_columns_handle', columns, node, value);\r\n\r\n                                        }\r\n                                        return;\r\n                                    }\r\n\r\n                                    root.CP_Customizer.markSave();\r\n                                    var _class = 'col-md-' + columns,\r\n                                        colsRegexp = /((cp[0-9]+cols)(\\s|$))|((col\\-md\\-[0-9]+)(\\s|$))/ig,\r\n                                        currentDevice = root.CP_Customizer.preview.currentDevice();\r\n\r\n                                    switch (currentDevice) {\r\n                                        case \"tablet\":\r\n                                            colsRegexp = /((cp[0-9]+cols\\-tablet)(\\s|$))|((col\\-sm\\-[0-9]+)(\\s|$))/ig;\r\n                                            _class = 'col-sm-' + columns;\r\n                                            break;\r\n\r\n                                        case \"mobile\":\r\n                                            colsRegexp = /((cp[0-9]+cols\\-mobile)(\\s|$))|((col\\-xs\\-[0-9]+)(\\s|$))/;\r\n                                            _class = 'col-xs-' + columns;\r\n                                            break;\r\n                                    }\r\n\r\n                                    $(node).children().each(function (index, el) {\r\n                                        var $col = $(el),\r\n                                            _classAttr = $col.attr('class');\r\n\r\n                                        // remove existing cols:\r\n                                        _classAttr = _classAttr.replace(colsRegexp, \"\");\r\n\r\n                                        // add new class\r\n                                        _classAttr += \" \" + _class + \" \";\r\n\r\n\r\n                                        //remove not needed spaces in class attribute\r\n                                        _classAttr = _classAttr.replace(/\\s\\s+/, \" \");\r\n                                        $col.attr('class', _classAttr);\r\n\r\n\r\n                                    });\r\n\r\n                                    if (!$(node).hasClass('row')) {\r\n                                        $(node).attr('class', 'row');\r\n                                    }\r\n\r\n\r\n                                    // wait for animations\r\n                                    _.delay(root.CP_Customizer.overlays.updateAllOverlays, 600);\r\n                                }\r\n                            };\r\n\r\n                            var $button = root.CP_Customizer.overlays.getOverlayOptionButton(itemData, node);\r\n                            $subitemsContainer.append($button);\r\n                        }\r\n\r\n                        $subitemsContainer.appendTo($(this));\r\n                    }, function () {\r\n                    }]\r\n                }, {\r\n                    'name': 'columns_reorder',\r\n                    'title': window.CP_Customizer.translateCompanionString('Reorder Items'),\r\n                    'classes': 'subitems-arrow',\r\n                    'on_hover': [function (node) {\r\n\r\n                        var $ = root.CP_Customizer.preview.jQuery();\r\n                        var $subitemsContainer = $(this).children('.cog-subitems').length ? $(this).children('.cog-subitems') : $(\"<div class='cog-subitems' />\");\r\n                        $subitemsContainer.empty();\r\n\r\n                        var itemsNo = $(node).children().length;\r\n                        for (var i = 0; i < itemsNo; i++) {\r\n                            var item = node.children().eq(i);\r\n                            var title = item.text().replace(/\\s\\s+/g, \" \").trim();\r\n\r\n\r\n                            title = title.trim().length ? title : \"\";\r\n\r\n                            if (!title && item.find('img').length) {\r\n                                title = CP_Customizer.utils.getFileInfo(item.find('img').eq(0).attr('src')).filename;\r\n                            }\r\n\r\n                            if (!title) {\r\n                                title = '[ ITEM ]';\r\n                            }\r\n\r\n                            title = title.replace(/(^.{1,10})(.*)$/, function (matches, firstMatch, secondMatch) {\r\n                                var result = (firstMatch || \"\").trim() + (secondMatch && secondMatch.length ? \"[...]\" : \"\");\r\n                                return result;\r\n                            });\r\n\r\n                            var itemData = {\r\n                                'title': (i + 1) + ') ' + title,\r\n                                'name': 'reorder_item_' + i,\r\n                                'classes': 'sortable-item'\r\n                            };\r\n\r\n                            var $button = root.CP_Customizer.overlays.getOverlayOptionButton(itemData, item);\r\n                            $button.data('item', item);\r\n                            $subitemsContainer.append($button);\r\n                        }\r\n\r\n                        $subitemsContainer.appendTo($(this));\r\n                        $subitemsContainer.sortable({\r\n                            'axis': 'y',\r\n                            'start': function (event, ui) {\r\n                                ui.helper.css({\r\n                                    'position': 'fixed',\r\n                                    'transition': 'none',\r\n                                    'background-color': '#ffffff',\r\n                                    'left': ui.helper.offset().left + 'px'\r\n                                });\r\n\r\n                                ui.item.parent().addClass('big-heat-area');\r\n                            },\r\n                            sort: function (event, ui) {\r\n                                ui.helper.css('top', event.clientY);\r\n                            },\r\n                            'stop': function (event, ui) {\r\n                                var index = ui.item.index();\r\n                                var node = jQuery(ui.item).data().item;\r\n                                root.CP_Customizer.preview.insertNode(node, node.parent(), index);\r\n                                ui.item.parent().removeClass('big-heat-area');\r\n                            }\r\n                        });\r\n                    }, function () {\r\n                    }]\r\n                }]\r\n            },\r\n            'column': {\r\n                'title': window.CP_Customizer.translateCompanionString('List item'),\r\n                'toolbarTitle': 'List item',\r\n                'node_binds': {\r\n                    'hover': [function () {\r\n                        $(this).data().overlay.removeClass('hide');\r\n                    }, function () {\r\n                        $(this).data().overlay.addClass('hide');\r\n                    }]\r\n                },\r\n                'items': [{\r\n                    'name': 'row_remove_item',\r\n                    'title': window.CP_Customizer.translateCompanionString('Remove Item'),\r\n                    'on_click': function (node) {\r\n                        var $overlay = $($(node).data('overlay'));\r\n                        if ($overlay.data('node-observer')) {\r\n                            $overlay.data('node-observer').disconnect();\r\n                        }\r\n\r\n                        $overlay.remove();\r\n                        $(node).remove();\r\n                        $(this).trigger('reiki.update_overlays');\r\n                        root.CP_Customizer.markSave();\r\n                    }\r\n                }]\r\n\r\n            }\r\n        });\r\n    });\r\n\r\n    function addSectionOverlay($nodes) {\r\n\r\n        $nodes.addFixedOverlay({\r\n            types: [\"section\", \"list\"],\r\n            \"classes\": ['section-overlay']\r\n        });\r\n\r\n    }\r\n\r\n\r\n    CP_Customizer.bind(CP_Customizer.events.ADD_FIXED_OVERLAYS, function (event, $startNode) {\r\n        addSectionOverlay($startNode.find('[data-label]'));\r\n\r\n        if ($startNode.is('[data-label]')) {\r\n            _.delay(function () {\r\n                addSectionOverlay($startNode);\r\n            }, 0);\r\n        }\r\n\r\n    });\r\n})(window, CP_Customizer, jQuery);\r\n","(function (root, CP_Customizer, $) {\r\n\r\n    CP_Customizer.addModule(function (CP_Customizer) {\r\n        _.extend(CP_Customizer, {\r\n            menu: {\r\n\r\n                getGlobalOption: function(name, defaultValue){\r\n                    if (cpCustomizerGlobal && cpCustomizerGlobal.pluginOptions && cpCustomizerGlobal.pluginOptions.hasOwnProperty(name)) {\r\n                        return cpCustomizerGlobal.pluginOptions[name];\r\n                    }\r\n\r\n                    return defaultValue;\r\n                },\r\n\r\n                getPrimaryLocationModName: function() {\r\n                    var primaryLocation = this.getGlobalOption(\"primaryMenuLocation\", \"primary\");\r\n                    return 'nav_menu_locations[' + primaryLocation + ']';\r\n                },\r\n\r\n                getHomeUrl: function() {\r\n                    var primaryMenuHomeUrl = this.getGlobalOption(\"homeUrl\", CP_Customizer.preview.data().siteURL);\r\n                    return primaryMenuHomeUrl;\r\n                },\r\n\r\n                canSetPrimaryLocation: function() {\r\n                    var canSetPrimaryLocation = this.getGlobalOption(\"canSetPrimaryLocation\", true);\r\n                    return canSetPrimaryLocation;\r\n                },\r\n\r\n                getPrimaryLocationDefaultLanguageMenu: function() {\r\n                    var primaryLocationDefaultLanguageMenu = this.getGlobalOption(\"primaryLocationDefaultLanguageMenu\", -1);\r\n                    return primaryLocationDefaultLanguageMenu;\r\n                },\r\n\r\n                createPrimaryMenu: function () {\r\n                    var api = root.wp.customize;\r\n                    var customizeId,\r\n                        name = name || root.CP_Customizer.translateCompanionString(\"Main Menu\"),\r\n                        placeholderId = api.Menus.generatePlaceholderAutoIncrementId();\r\n\r\n                    customizeId = 'nav_menu[' + String(placeholderId) + ']';\r\n\r\n                    api.create(customizeId, customizeId, {}, {\r\n                        type: 'nav_menu',\r\n                        transport: api.Menus.data.settingTransport,\r\n                        previewer: api.previewer\r\n                    });\r\n\r\n                    api(customizeId).set($.extend({},\r\n                        api.Menus.data.defaultSettingValues.nav_menu, {\r\n                            name: name\r\n                        }\r\n                    ));\r\n\r\n\r\n                    menuSection = new api.Menus.MenuSection(customizeId, {\r\n                        params: {\r\n                            id: customizeId,\r\n                            panel: 'nav_menus',\r\n                            title: name,\r\n                            customizeAction: api.Menus.data.l10n.customizingMenus,\r\n                            type: 'nav_menu',\r\n                            priority: 10,\r\n                            menu_id: placeholderId\r\n                        }\r\n                    });\r\n                    api.section.add(customizeId, menuSection);\r\n\r\n                    if (this.canSetPrimaryLocation()) {\r\n                        // set location\r\n                        api(this.getPrimaryLocationModName()).set(placeholderId);\r\n                    }\r\n\r\n                    var defaultMenu = this.getPrimaryLocationDefaultLanguageMenu();\r\n\r\n                    if (defaultMenu !== -1) {\r\n                        wp.customize.bind(\"save-request-params\", function (query) {\r\n                            query.icl_translation_of = defaultMenu;\r\n                            return query;\r\n                        });\r\n                    }\r\n\r\n\r\n                    // create home page menu item;\r\n\r\n                    this.addAnchorToPrimaryMenu('#page-top', 'Home');\r\n                },\r\n\r\n\r\n                getPrimaryMenuID: function () {\r\n                    var menuId = wp.customize(this.getPrimaryLocationModName()).get();\r\n                    if (wp.customize('nav_menu[' + menuId + ']')) {\r\n                        return menuId;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n\r\n                getPrimaryMenu: function () {\r\n                    var menuId = CP_Customizer.menu.getPrimaryMenuID();\r\n                    if (menuId !== false) {\r\n                        return wp.customize('nav_menu[' + menuId + ']').get();\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n\r\n                focusPrimaryMenuCustomize: function () {\r\n                    var menuId = CP_Customizer.menu.getPrimaryMenuID();\r\n                    if (menuId !== false) {\r\n                        wp.customize.section('nav_menu[' + menuId + ']').focus();\r\n                        return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                getPrimaryMenuControl: function () {\r\n                    var api = root.wp.customize;\r\n                    var menuId = CP_Customizer.menu.getPrimaryMenuID();\r\n\r\n                    if (menuId) {\r\n                        return api.Menus.getMenuControl(menuId);\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n\r\n                addAnchorToPrimaryMenu: function (anchor, title) {\r\n                    var api = root.wp.customize;\r\n                    var customizeId, placeholderId, settingArgs, setting, menuItemControl, menuId, menuControl, position = 0,\r\n                        priority = 10;\r\n\r\n                    menuId = CP_Customizer.menu.getPrimaryMenuID();\r\n                    menuControl = CP_Customizer.menu.getPrimaryMenuControl();\r\n\r\n                    if (!menuId || !menuControl) {\r\n                        return;\r\n                    }\r\n\r\n                    _.each(menuControl.getMenuItemControls(), function (control) {\r\n                        if (false === control.setting()) {\r\n                            return;\r\n                        }\r\n                        priority = Math.max(priority, control.priority());\r\n                        if (0 === control.setting().menu_item_parent) {\r\n                            position = Math.max(position, control.setting().position);\r\n                        }\r\n                    });\r\n                    position += 1;\r\n                    priority += 1;\r\n\r\n                    var url = CP_Customizer.menu.getHomeUrl();\r\n                    if (anchor.replace(/#/, '').length) {\r\n                        url = CP_Customizer.preview.data().pageURL + \"#\" + anchor.replace(/#/, '');\r\n                    }\r\n\r\n                    var item = $.extend({},\r\n                        api.Menus.data.defaultSettingValues.nav_menu_item, {\r\n                            'title': title,\r\n                            'url': url,\r\n                            'type': 'custom',\r\n                            'type_label': api.Menus.data.l10n.custom_label,\r\n                            'object': 'custom'\r\n                        }, {\r\n                            nav_menu_term_id: menuId,\r\n                            original_title: title,\r\n                            position: position\r\n                        });\r\n\r\n\r\n                    placeholderId = api.Menus.generatePlaceholderAutoIncrementId();\r\n                    customizeId = 'nav_menu_item[' + String(placeholderId) + ']';\r\n                    settingArgs = {\r\n                        type: 'nav_menu_item',\r\n                        transport: api.Menus.data.settingTransport,\r\n                        previewer: api.previewer\r\n                    };\r\n\r\n                    setting = api.create(customizeId, customizeId, {}, settingArgs);\r\n                    setting.set(item);\r\n\r\n                    menuItemControl = new api.controlConstructor.nav_menu_item(customizeId, {\r\n                        params: {\r\n                            type: 'nav_menu_item',\r\n                            content: '<li id=\"customize-control-nav_menu_item-' + String(placeholderId) + '\" class=\"customize-control customize-control-nav_menu_item\"></li>',\r\n                            section: menuControl.id,\r\n                            priority: priority,\r\n                            active: true,\r\n                            settings: {\r\n                                'default': customizeId\r\n                            },\r\n                            menu_item_id: placeholderId\r\n                        },\r\n                        previewer: api.previewer\r\n                    });\r\n\r\n                    api.control.add(customizeId, menuItemControl);\r\n                    menuControl.debouncedReflowMenuItems();\r\n\r\n\r\n\r\n                },\r\n\r\n                anchorExistsInPrimaryMenu: function (anchor) {\r\n                    var menuControl = CP_Customizer.menu.getPrimaryMenuControl();\r\n\r\n                    if (!menuControl) {\r\n                        return false;\r\n                    }\r\n\r\n                    anchor = anchor.replace(/#/, '');\r\n\r\n                    var itemsControl = menuControl.getMenuItemControls();\r\n                    for (var i = 0; i < itemsControl.length; i++) {\r\n                        var itemControl = itemsControl[i];\r\n                        var url = (itemControl.setting.get().url || \"\").split(\"#\").pop().trim();\r\n                        if (url === anchor) {\r\n                            return true;\r\n                        }\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n\r\n                updatePrimaryMenuAnchor: function (oldAnchor, options) {\r\n                    var menuControl = CP_Customizer.menu.getPrimaryMenuControl();\r\n\r\n                    if (!menuControl) {\r\n                        return false;\r\n                    }\r\n\r\n                    oldAnchor = oldAnchor.replace(/#/, '');\r\n                    var newAnchor = options.anchor.replace(/#/, '');\r\n                    var title = options.title;\r\n\r\n                    var itemsControl = menuControl.getMenuItemControls();\r\n                    for (var i = 0; i < itemsControl.length; i++) {\r\n                        var itemControl = itemsControl[i];\r\n                        var url = (itemControl.setting.get().url || \"\").split(\"#\").pop().trim();\r\n                        if (url === oldAnchor) {\r\n                            var itemData = itemControl.setting();\r\n                            if (itemData) {\r\n                                itemData = _.clone(itemData);\r\n                                itemData.title = title;\r\n                                itemData.url = CP_Customizer.preview.data().pageURL + \"#\" + newAnchor;\r\n                                itemControl.setting.set(itemData);\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                removeAnchorFromPrimaryMenu: function (anchor) {\r\n                    var api = root.wp.customize;\r\n                    var menuControl = CP_Customizer.menu.getPrimaryMenuControl();\r\n\r\n                    if (!menuControl) {\r\n                        return false;\r\n                    }\r\n\r\n                    anchor = anchor.replace(/#/, '');\r\n\r\n                    var itemsControl = menuControl.getMenuItemControls();\r\n                    for (var i = 0; i < itemsControl.length; i++) {\r\n                        var itemControl = itemsControl[i];\r\n                        var url = (itemControl.setting.get().url || \"\").split(\"#\").pop();\r\n                        if (url === anchor) {\r\n                            itemControl.setting.set(false);\r\n                            api.control.remove(itemControl.id);\r\n                            return true;\r\n                        }\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n})(window, CP_Customizer, jQuery);","(function (root, CP_Customizer, $) {\r\n    CP_Customizer.addModule(function (CP_Customizer) {\r\n\r\n        var panel = CP_Customizer.panels.pageContentPanel;\r\n\r\n\r\n        $('body').on('click', '[data-name=\"page_content_panel\"] span.section-icon.setting.page-settings', function () {\r\n            CP_Customizer.openRightSidebar('cp-current-page-settings');\r\n        });\r\n\r\n        function getRegisteredControls() {\r\n            var controls_ids = $('[data-name=\"page_content_panel\"] .page-settings').attr('data-settings');\r\n            var controls = [];\r\n            controls_ids.split(',').forEach(function (id) {\r\n                var _c = wp.customize.control(id);\r\n                if (_c) {\r\n                    controls.push(_c);\r\n                }\r\n            });\r\n\r\n            return controls;\r\n        }\r\n\r\n\r\n        panel.registerArea('general_page_settings', {\r\n\r\n            $controlsHolder: null,\r\n\r\n            refreshControls: function () {\r\n                var controls = getRegisteredControls(),\r\n                    self = this;\r\n\r\n                _.each(controls, function (c) {\r\n                    self.$controlsHolder.append(c.container);\r\n                });\r\n            },\r\n\r\n            init: function ($container) {\r\n\r\n                this.$controlsHolder = $(\"<ul/>\");\r\n                $container.append($('<li/>').append(this.$controlsHolder));\r\n                var self = this;\r\n\r\n                self.refreshControls();\r\n\r\n                wp.customize.bind('pane-contents-reflowed', function () {\r\n                    self.refreshControls();\r\n                })\r\n            }\r\n        });\r\n    });\r\n})(window, CP_Customizer, jQuery);\r\n"]}